<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>临渊羡鱼</title>
  
  <subtitle>丝禽藏荷香，锦鲤绕岛影。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zfeiyu.com/"/>
  <updated>2018-04-23T11:21:55.102Z</updated>
  <id>http://zfeiyu.com/</id>
  
  <author>
    <name>lizorn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>设计中的设计</title>
    <link href="http://zfeiyu.com/2018/04/22/the-designing-design/"/>
    <id>http://zfeiyu.com/2018/04/22/the-designing-design/</id>
    <published>2018-04-22T08:13:01.000Z</published>
    <updated>2018-04-23T11:21:55.102Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img3.doubanio.com/view/subject/l/public/s4473054.jpg" alt=""></p><p>晚上一口气看完这本书，除了书的字太小、书内大量设计插图都是包豪斯风格之外,感受到一股浓浓的日本工匠的气息。<br>作者全书都在阐述，设计是什么？</p><blockquote><p>理解一个东西不是能够定义它或者描述它，而是把这个我们认为自己已经知道的东西拿过来，让它变得未知，并激起我们对其真实性的新鲜感，从而深化我们对它的理解。</p></blockquote><p><img src="/res/img/designingdesign/tea.jpg" alt=""></p><p>我的想法就是:刚刚泡了杯茶，现在还冒着热气，但随着时间的流逝，茶的温度会趋近环境的温度，这符合热力学第二定律，也符合香农的信息论。熵的增加意味着特质的降低，而设计就是降低熵的过程。</p><p>设计让它变得简单，变得平衡，让这壶茶在快节奏的生活和科技迭代的交汇处，保留原本的味道；让它回归事物本身找到属于自己的支点。</p>]]></content>
    
    <summary type="html">
    
      熵的增加意味着特质的降低，而设计就是降低熵的过程。
    
    </summary>
    
      <category term="读书笔记" scheme="http://zfeiyu.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="设计" scheme="http://zfeiyu.com/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>静夜思</title>
    <link href="http://zfeiyu.com/2017/10/11/longing-in-the-night/"/>
    <id>http://zfeiyu.com/2017/10/11/longing-in-the-night/</id>
    <published>2017-10-11T06:28:01.000Z</published>
    <updated>2018-03-18T00:32:54.890Z</updated>
    
    <content type="html"><![CDATA[<p>名贱身轻，小口如锋，穿衣噆肤，娇声夜摆迷魂阵。</p><p>潜侵鸣镝，夜不能寐，惊回千里梦，已三更。 </p><p>独自觅蚊影，虫廖廖，窗外雨如雷。 </p><p>凭栏看落花，人悄悄，决眦入归鸟。</p><p>闲来垂钓碧溪上，又挂云帆济沧海。</p><p>欲渡黄河冰塞川，多岐路。</p><p>小憩涼窗梦惊觉，幽幽回首听叹息。</p>]]></content>
    
    <summary type="html">
    
      名贱身轻，小口如锋，穿衣噆肤，娇声夜摆迷魂阵。
    
    </summary>
    
      <category term="码农的秘密花园" scheme="http://zfeiyu.com/categories/%E7%A0%81%E5%86%9C%E7%9A%84%E7%A7%98%E5%AF%86%E8%8A%B1%E5%9B%AD/"/>
    
    
      <category term="诗歌" scheme="http://zfeiyu.com/tags/%E8%AF%97%E6%AD%8C/"/>
    
  </entry>
  
  <entry>
    <title>hadoop实战(二)</title>
    <link href="http://zfeiyu.com/2017/06/01/hadoop-in-action-2/"/>
    <id>http://zfeiyu.com/2017/06/01/hadoop-in-action-2/</id>
    <published>2017-06-01T09:30:01.000Z</published>
    <updated>2017-09-30T10:52:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WordCount统计词频"><a href="#WordCount统计词频" class="headerlink" title="WordCount统计词频"></a>WordCount统计词频</h1><h2 id="MapReduce实现"><a href="#MapReduce实现" class="headerlink" title="MapReduce实现"></a>MapReduce实现</h2><h3 id="WordCount-java源码"><a href="#WordCount-java源码" class="headerlink" title="WordCount.java源码"></a>WordCount.java源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">import java.io.IOException;</div><div class="line">import java.util.StringTokenizer;</div><div class="line">import org.apache.hadoop.conf.Configuration;</div><div class="line">import org.apache.hadoop.fs.Path;</div><div class="line">import org.apache.hadoop.io.IntWritable;</div><div class="line">import org.apache.hadoop.io.Text;</div><div class="line">import org.apache.hadoop.mapreduce.Job;</div><div class="line">import org.apache.hadoop.mapreduce.Mapper;</div><div class="line">import org.apache.hadoop.mapreduce.Reducer;</div><div class="line">import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</div><div class="line">import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</div><div class="line">public class WordCount &#123;</div><div class="line">  public static class TokenizerMapper extends Mapper&lt;Object, Text, Text, IntWritable&gt;&#123;</div><div class="line">    private final static IntWritable one = new IntWritable(1);</div><div class="line">    private Text word = new Text();</div><div class="line">    public void map(Object key, Text value, Context context) throws IOException, InterruptedException &#123;</div><div class="line">      StringTokenizer itr = new StringTokenizer(value.toString());</div><div class="line">      while (itr.hasMoreTokens()) &#123;</div><div class="line">        word.set(itr.nextToken());</div><div class="line">        context.write(word, one);</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  public static class IntSumReducer extends Reducer&lt;Text,IntWritable,Text,IntWritable&gt; &#123;</div><div class="line">    private IntWritable result = new IntWritable();</div><div class="line">    public void reduce(Text key, Iterable&lt;IntWritable&gt; values,</div><div class="line">                        Context context) throws IOException, InterruptedException &#123;</div><div class="line">        int sum = 0;</div><div class="line">        for (IntWritable val : values) &#123;</div><div class="line">          sum += val.get();</div><div class="line">        &#125;</div><div class="line">        result.set(sum);</div><div class="line">        context.write(key, result);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  public static void main(String[] args) throws Exception &#123;</div><div class="line">    Configuration conf = new Configuration();</div><div class="line">    Job job = Job.getInstance(conf, &quot;word count&quot;);</div><div class="line">    job.setJarByClass(WordCount.class);</div><div class="line">    job.setMapperClass(TokenizerMapper.class);</div><div class="line">    job.setCombinerClass(IntSumReducer.class);</div><div class="line">    job.setReducerClass(IntSumReducer.class);</div><div class="line">    job.setOutputKeyClass(Text.class);</div><div class="line">    job.setOutputValueClass(IntWritable.class);</div><div class="line">    FileInputFormat.addInputPath(job, new Path(args[0]));</div><div class="line">    FileOutputFormat.setOutputPath(job, new Path(args[1]));</div><div class="line">    System.exit(job.waitForCompletion(true) ? 0 : 1);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hadoop com.sun.tools.javac.Main WordCount.java</div><div class="line">jar cf wc.jar WordCount*.class</div></pre></td></tr></table></figure><h3 id="创建DFS"><a href="#创建DFS" class="headerlink" title="创建DFS"></a>创建DFS</h3><p>在hdfs上的用户目录下创建输入/输出文件的文件夹.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hadoop fs -mkdir -p /user/&#123;whoami&#125;/wordcount/input</div></pre></td></tr></table></figure><p>下本书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir -p ~/tmp/book/</div><div class="line">cd ~/tmp/book</div><div class="line">wget http://www.gutenberg.org/files/5000/5000-8.txt</div></pre></td></tr></table></figure><p>将书放到HDFS上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hadoop fs -put ~/tmp/book/*.txt /user/$&#123;whoami&#125;/wordcount/input</div></pre></td></tr></table></figure><h3 id="执行MapReduce"><a href="#执行MapReduce" class="headerlink" title="执行MapReduce"></a>执行MapReduce</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hadoop jar wc.jar WordCount /user/$&#123;whoami&#125;/wordcount/input /user/$&#123;whoami&#125;/wordcount/output</div></pre></td></tr></table></figure><p>查看解析内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hadoop fs -cat /user/$&#123;whoami&#125;/wordcount/output/part-r-00000</div></pre></td></tr></table></figure></p><h2 id="HadoopStreaming实现"><a href="#HadoopStreaming实现" class="headerlink" title="HadoopStreaming实现"></a>HadoopStreaming实现</h2><p>Hadoop是使用Java语言编写的,所以最直接的方式的就是使用Java语言来实现Mapper和Reducer,然后配置MapReduce Job,提交到集群计算环境来完成计算.<br>hadoop也为其它语言，如C++、Shell、Python、 Ruby、PHP、Perl等提供了支持，这个工具就是Hadoop Streaming.</p><h3 id="wordcount的python实现"><a href="#wordcount的python实现" class="headerlink" title="wordcount的python实现"></a>wordcount的python实现</h3><p>mapper.py源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python</div><div class="line">import sys</div><div class="line">def read_input(file):</div><div class="line">    for line in file:</div><div class="line">        yield line.split()</div><div class="line">def main(separator=&apos;\t&apos;):</div><div class="line">    data = read_input(sys.stdin)</div><div class="line">    for words in data:</div><div class="line">        for word in words:</div><div class="line">            print &quot;%s%s%d&quot; % (word, separator, 1)</div><div class="line">if __name__ == &quot;__main__&quot;:</div><div class="line">    main()</div></pre></td></tr></table></figure><p>reducer.py</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python</div><div class="line">from operator import itemgetter</div><div class="line">from itertools import groupby</div><div class="line">import sys</div><div class="line">def read_mapper_output(file, separator = &apos;\t&apos;):</div><div class="line">    for line in file:</div><div class="line">        yield line.rstrip().split(separator, 1)</div><div class="line">def main(separator = &apos;\t&apos;):</div><div class="line">    data = read_mapper_output(sys.stdin, separator = separator)</div><div class="line">    for current_word, group in groupby(data, itemgetter(0)):</div><div class="line">        try:</div><div class="line">            total_count = sum(int(count) for current_word, count in group)</div><div class="line">            print &quot;%s%s%d&quot; % (current_word, separator, total_count)</div><div class="line">        except valueError:</div><div class="line">            pass</div><div class="line">if __name__ == &quot;__main__&quot;:</div><div class="line">    main()</div></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>可以写个sh脚本运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">hadoop jar $STREAM  \</div><div class="line">-files ./mapper.py,./reducer.py \</div><div class="line">-mapper ./mapper.py \</div><div class="line">-reducer ./reducer.py \</div><div class="line">-input /user/$&#123;whoami&#125;/wordcount/input/ \</div><div class="line">-output ~/output</div></pre></td></tr></table></figure></p><h2 id="Spark实现"><a href="#Spark实现" class="headerlink" title="Spark实现"></a>Spark实现</h2><p>运行spark的python交互式控制台,pyspark.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">hadoop@4532e4bdaa51:~$ pyspark</div><div class="line">Python 2.7.6 (default, Jun 22 2015, 17:58:13)</div><div class="line">[GCC 4.8.2] on linux2</div><div class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</div><div class="line">Using Spark&apos;s default log4j profile: org/apache/spark/log4j-defaults.properties</div><div class="line">Setting default log level to &quot;WARN&quot;.</div><div class="line">To adjust logging level use sc.setLogLevel(newLevel).</div><div class="line">16/10/28 02:10:51 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</div><div class="line">Welcome to</div><div class="line">      ____              __</div><div class="line">     / __/__  ___ _____/ /__</div><div class="line">    _\ \/ _ \/ _ `/ __/  &apos;_/</div><div class="line">   /__ / .__/\_,_/_/ /_/\_\   version 2.0.1</div><div class="line">      /_/</div><div class="line">Using Python version 2.7.6 (default, Jun 22 2015 17:58:13)</div><div class="line">SparkSession available as &apos;spark&apos;.</div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure><p>使用textFile加载文本到RDD,进行’wordcount’.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; text = sc.textFile(&quot;hdfs://localhost:9000/user/$&#123;whoami&#125;/wordcount/input&quot;)</div><div class="line">&gt;&gt;&gt; counts = text.flatMap(lambda line: line.split(&quot; &quot;)).map(lambda word: (word,1)).reduceByKey(lambda x,y: x + y)</div></pre></td></tr></table></figure><p>调用saveAsTextFile,分布式作业开始…</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">counts.saveAsTextFile(&quot;hdfs://localhost:9000/wordcount/spark_out&quot;)</div></pre></td></tr></table></figure><p>可以在工作台输出目录里查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">hadoop fs -cat  hdfs://localhost:9000/wordcount/spark_out/part-00000</div><div class="line">...</div><div class="line">(u&apos;Well&apos;, 1)</div><div class="line">(u&apos;roar,&apos;, 1)</div><div class="line">(u&apos;Lust&apos;, 1)</div><div class="line">(u&apos;up-side-down&apos;, 1)</div><div class="line">(u&apos;sozza&apos;, 1)</div><div class="line">(u&apos;primus&apos;, 1)</div><div class="line">(u&apos;expands&apos;, 1)</div><div class="line">...</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      hadoop应用实例
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="大数据" scheme="http://zfeiyu.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="hadoop" scheme="http://zfeiyu.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>数据平台构建思路</title>
    <link href="http://zfeiyu.com/2017/05/23/how-to-build-data-platform/"/>
    <id>http://zfeiyu.com/2017/05/23/how-to-build-data-platform/</id>
    <published>2017-05-23T07:50:48.000Z</published>
    <updated>2017-05-24T08:43:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>构建大数据平台思路，企业如何大数据化？</p><h1 id="全面数据化"><a href="#全面数据化" class="headerlink" title="全面数据化"></a>全面数据化</h1><ol><li>数据化是一个政/企能够通过深入数据分析，实现自身优化的基础。</li><li>政/企采集并存储政务/生产经营中的一切数据，形成自己的数据资产。</li></ol><h1 id="整理数据资源、建立数据标准、形成管理规范"><a href="#整理数据资源、建立数据标准、形成管理规范" class="headerlink" title="整理数据资源、建立数据标准、形成管理规范"></a>整理数据资源、建立数据标准、形成管理规范</h1><ol><li>通过自顶向下的方式，成立数据委员会。了解数据资源的整体情况并建立数据资源情况更新的流程和规范</li><li>数据资源最基本的呈现方式是一个数据目录。企业管理团队至少应该掌握到3级目录，技术团队掌握到4级目录。</li></ol><h2 id="（范例）某集团数据资源管理办法"><a href="#（范例）某集团数据资源管理办法" class="headerlink" title="（范例）某集团数据资源管理办法"></a>（范例）某集团数据资源管理办法</h2><h3 id="第一章-总-则"><a href="#第一章-总-则" class="headerlink" title="第一章  总 则"></a>第一章  总 则</h3><ul><li>第一条  为适应集团信息化发展要求,充分利用数据资源为生产、经营、管理和决策服务，保证各类信息合理、有序流动和信息安全，确保集团信息化建设快速协调有序安全发展，根据国家有关法律法规以及《集团信息安全管理办法》（中平〔2013〕188号）、等规定，特制定本管理办法。</li><li>第二条  本办法适用于集团各职能部室，直属和特设机构、专业化公司、事业部、区域公司及其所属各单位（以下简称各单位）。</li></ul><h3 id="第二章-管理范围"><a href="#第二章-管理范围" class="headerlink" title="第二章  管理范围"></a>第二章  管理范围</h3><ul><li>第三条  本办法管理范围包括：各单位与生产、经营、办公、安全等相关的应用系统和数据，以及为其提供支撑的基础设施资源、计算存储资源和办公终端资源等。</li></ul><h3 id="第三章-组织机构和工作机制"><a href="#第三章-组织机构和工作机制" class="headerlink" title="第三章  组织机构和工作机制"></a>第三章  组织机构和工作机制</h3><ul><li>第四条  集团信息化领导小组是集团数据资源管理体系的最高层，负责审定集团有关数据资源管理的规章、制度、办法，负责审核有关标准、规范、重要需求等。集团信息化领导小组办公室（以下简称集团信息办）负责集团数据管理的监督、检查和考核，指导集团数据管理工作，查处危害集团数据安全的事件。各单位负责本单位数据的采集、传输、使用、安防、备份等管理工作。中国平煤神马集团平顶山信息通信技术开发公司（以下简称信通公司）作为技术支撑及运维部门，负责集团数据中心的运维和运营工作。</li></ul><h3 id="第四章-数据分级管理"><a href="#第四章-数据分级管理" class="headerlink" title="第四章  数据分级管理"></a>第四章  数据分级管理</h3><ul><li>第五条  根据数据在生产、经营和管理中的重要性，结合有关保密规定，按照集团级应用系统和数据、厂矿级应用系统和数据、区队（车间）级应用系统和数据分别制定管理标准。</li><li>第六条  集团级应用系统和数据，技术管理由集团信息办负责，业务管理由相关业务处室负责，运维管理由信通公司负责。厂矿级应用系统和数据由各单位信息管理部门管理，集团需要利用的管理数据和生产数据要同步上传到集团数据中心。区队（车间）级应用系统和数据由各单位信息管理部门管理和维护。</li></ul><h3 id="第五章-数据标准管理"><a href="#第五章-数据标准管理" class="headerlink" title="第五章  数据标准管理"></a>第五章  数据标准管理</h3><ul><li><p>第七条  集团信息办负责集团数据编码和接口标准的统一规划和标准制定，负责对集团及各单位应用系统的数据标准管理进行引导和考核。各单位新建应用系统应严格执行集团下发的数据编码和接口标准，在用应用系统应根据自身实际逐步按照集团标准进行完善。</p></li><li><p>第八条  数据编码和接口标准应符合以下要求：</p><ol><li>数据编码应能够保证同一个对象编码的唯一性及上下游管理规范的一致性；</li><li>接口应实现对外部系统的接入提供企业级的支持，在系统的高并发和大容量的基础上提供安全可靠的接入；</li><li>提供完善的数据安全机制，以实现对数据的全面保护，保证系统的正常运行，防止大量访问，以及大量占用资源的情况发生，保证系统的健壮性；</li><li>提供有效的系统可监控机制，使得接口的运行情况可监控，便于及时发现错误并排除故障；</li><li>保证在充分利用系统资源的前提下，实现系统平滑的移植和扩展，同时在系统并发增加时提供系统资源的动态扩展，以保证系统的稳定性；</li><li>在进行扩容、新业务扩展时，应能提供快速、方便和准确的实现方式。</li></ol></li></ul><h3 id="第六章-数据资源管理"><a href="#第六章-数据资源管理" class="headerlink" title="第六章  数据资源管理"></a>第六章  数据资源管理</h3><ul><li><p>第九条  基础设施资源集中管理。为了避免信息机房等基础设施资源重复投资建设，造成资金浪费、设施利用率低等问题，各单位应充分利用集团数据中心资源，集团信息办负责统一协调集团及各单位的基础设施资源。</p><ol><li>各单位未经集团批准不得私自新建、改建、扩建信息机房。</li><li>集团数据中心要按照《集团机房建设技术规范》建设，满足各单位应用系统及数据统一到集团数据中心所需的各项使用要求。</li><li>各单位现有机房自行管理、统一管控。各级信息管理部门作为主要责任部门，要保证信息机房各项运行指标达到集团要求。</li></ol></li><li><p>第十条  计算存储资源集中管理。为了消除“信息孤岛”，实现集团数据共享和集成，提升数据安全防护等级，各单位所需计算和存储资源，要统一使用集团数据中心的云计算资源，做到资源集中、高效利用。</p><ol><li>现有的集团级应用系统及数据（安全监测系统除外）、各单位应用系统及数据（直接用于生产安全、自动化控制和监测监控的系统除外）要按照在用服务器、存储的服务年限和系统生命周期科学制定迁移到集团数据中心的计划和方案，并报集团信息办批准后实施。</li><li>新建应用系统原则上不再购置新的服务器和存储，所需计算和存储资源应使用集团数据中心的云计算资源。各单位如有特殊生产要求，确需购置服务器或存储的，需报请集团领导批准，由集团信息办备案后，按集团采购管理相关规定执行。</li><li>对于当前集团网络不具备实施条件的单位，可向集团提出申请建设集团区域性数据分中心，并根据建设进度制定应用系统和数据迁移计划。集团区域性数据分中心建成后，新建系统需要集中部署、分级管理。</li></ol></li><li><p>第十一条  办公终端资源集中管理。为了提高办公效率、降低办公成本、实现节能降耗，集团级应用系统要统一使用集团数据中心云桌面，并在厂矿和区队（车间）级应用系统中逐步实现全面使用。</p><ol><li>各单位新建系统所需计算机和新增办公用计算机要使用集团数据中心云桌面。</li><li>原有集团推广的应用系统所使用的计算机，以及各单位在用的计算机，分别由应用系统主管部门和各单位按年度提出云桌面更换计划，逐步完成云桌面更换工作；集团信息办负责协调和监督。</li><li>各单位申请云桌面使用，应与信通公司签订租用协议，由信通公司负责云桌面运维，各单位信息管理部门负责本单位云桌面管理。</li><li>对于当前集团网络不具备实施云桌面替换条件的单位，应协同集团相关部门接入集团网络或建设集团区域性数据分中心。在网络接入后或集团区域性数据分中心建成后，按计划完成云桌面的部署工作。</li></ol></li><li>第十二条  各单位使用资源应按集团规定支付相关费用。</li></ul><h3 id="第七章-数据分析管理"><a href="#第七章-数据分析管理" class="headerlink" title="第七章  数据分析管理"></a>第七章  数据分析管理</h3><ul><li>第十三条  数据分析是采取科学合理的方法，利用现代信息技术手段，对计算机应用系统生成的数据进行分析，充分发掘数据中蕴涵的信息，用数据描述现状，预测趋势，规范生产行为，优化管理流程，加强经营监管，提供决策支持。</li><li>第十四条 集团信息化领导小组应加强对各单位数据分析的指导，鼓励各单位结合自身实际，充分利用“大数据”技术，自行组织开发业务选题和数据模型，组织经验交流，提高分析水平。集团信息办要做好数据分析引导和管理工作，为集团安全生产、经营管理工作服务。基层各单位要充分挖掘和利用现有数据资源，不断探索和创新数据分析方法，规范数据分析程序，提高数据分析质量，做好本单位各项应用的数据分析工作。</li><li>第十五条  集团级数据分析、处室级数据分析和厂矿级数据分析分别由集团信息办、相关业务处室和各基层单位负责策划和实施，集团信息化领导小组负责监督和考核。</li></ul><h3 id="第八章-数据应用管理"><a href="#第八章-数据应用管理" class="headerlink" title="第八章  数据应用管理"></a>第八章  数据应用管理</h3><ul><li>第十六条  数据应用是指利用数据分析的成果，查找存在问题，开展业务运转状况评估，提出改进措施，提高管理水平，规避管理风险。</li><li>第十七条  各级信息管理部门应加强数据应用。集团信息办负责代表集团对各单位以及单位之间数据共享应用的统一规划并制定标准。各单位要严格按部门、按层级落实数据应用工作，对数据进行科学统计、分析、挖掘和应用，为各级领导决策提供依据。</li></ul><h3 id="第九章-数据安全管理"><a href="#第九章-数据安全管理" class="headerlink" title="第九章 数据安全管理"></a>第九章 数据安全管理</h3><ul><li>第十八条  各级信息管理部门应建立数据安全管理制度及相关措施，主要包括：数据访问的身份验证、权限管理及数据的加密、保密、日志管理、网络安全、容灾备份等。</li><li>第十九条  为统一规范操作权限，各单位应明确工作人员的录入权限、访问权限及维护权限的管理部门，任何人不得擅自设立、变更和注销。</li><li>第二十条  各级信息管理部门要指定专人负责系统数据及介质资料的安全管理工作。要加强数据库的安全管理，制定和明确管理员用户和数据查询用户的操作权限及规程。</li><li>第二十一条  对数据的各项操作至少要建立运行日志，严格监控操作过程，对发现的数据安全问题，要及时处理和上报。管理员应掌握和运用数据库访问审计技术，实现对数据库操作的监测和追溯。</li><li>第二十二条  各级信息管理部门要加强用户身份验证管理、网络安全管理，采取严格措施,做好计算机病毒的预防、检测、清除工作，建立针对网络攻击的防范措施，保证数据传输和存储安全。</li><li>第二十三条  各级信息管理部门要加强数据的容灾备份工作，建立数据容灾备份机制，保障系统应急恢复和数据溯源。重要数据要上传至集团数据中心备份。</li></ul><p>###第十章  附  则</p><ul><li>第二十四条  本办法解释权归集团。</li><li>第二十五条  本办法自本文印发之日起执行。</li></ul><h1 id="建设数据管理平台"><a href="#建设数据管理平台" class="headerlink" title="建设数据管理平台"></a>建设数据管理平台</h1><ol><li>数据管理平台要为政/企量身定做一套数据组织和管理的解决方案。特别是各部门之间数据的共融共通，以及企业数据怎么样进行索引和关联。</li><li>其次，数据管理平台是由业务所引导的，要为业务提供直接的支撑。</li><li>最后，数据管理平台的建设要量体裁衣，建设未必一次到位，但强调鲁棒性和可扩展性。</li></ol><h2 id="数据资源目录和资源交换管理"><a href="#数据资源目录和资源交换管理" class="headerlink" title="数据资源目录和资源交换管理"></a>数据资源目录和资源交换管理</h2><p>数据资源目录管理是实现政务信息资源共享交换、数据整合和大数据应用的桥梁和基础设施，是提高数据治理、数据管理能力和提高信息标准化服务水平的重要技术手段。</p><h3 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h3><ul><li>符合国家信息资源目录体系及元数据标准，按照统一的标准规范实现对政务信息资源的梳理、元数据采集、描述、编目、分类目录管理和可视化应用展现; </li><li>系统支持手工录入及在线连接梳理各种类型的数据资源，包括各种异构关系型数据厍、NoSQL数据库和大数据平台(HBase、Hive、MongoDB等)、以及各种格式化文件如 XML、Jason、CSV、TXT、Excel等资源类型的梳理，为分散异构的政务信息资源提供统一的梳理、元数据管理、目录管理，并提供分类导航、资源搜索和定位等应用服务功能</li></ul><h3 id="厂商"><a href="#厂商" class="headerlink" title="厂商"></a>厂商</h3><ul><li><a href="http://www.synball.com/product/pro/" target="_blank" rel="external">synball</a></li><li><a href="http://www.estarcom.com.cn/pages/main/product2.html" target="_blank" rel="external">易达讯</a></li></ul><h1 id="具备海量数据的深入分析能力"><a href="#具备海量数据的深入分析能力" class="headerlink" title="具备海量数据的深入分析能力"></a>具备海量数据的深入分析能力</h1><p>建立针对多元异构、跨域关联的海量数据，通过深度分析挖掘获取价值的能力，关键需要具备以下的几点能力。</p><ol><li>结构化数据的分析处理能力。</li><li>非结构化数据的分析处理能力。</li><li>大数据下的机器学习能力。</li></ol><h2 id="支持作业类型"><a href="#支持作业类型" class="headerlink" title="支持作业类型"></a>支持作业类型</h2><ul><li>ETL：kettle，Sqoop，flume作业管理。</li><li>MapReduce：离线处理作业。</li><li>Hive：关系型分析查询作业。</li><li>Pig：数据清洗，ETL 等脚本作业。</li><li>Spark Streaming：基于 Spark 的在线/流式 作业。</li><li>Spark MLlib：基于 Spark 的机器学习作业。</li><li>Spark GraphX：基于 Spark 的图处理作业。</li><li>Spark SQL：基于 Spark 的数据科学交互式作业。<h2 id="作业管理"><a href="#作业管理" class="headerlink" title="作业管理"></a>作业管理</h2></li><li>作业（Hadoop/Spark/Hive/Pig）可任意组合成执行计划。</li><li>执行计划可分为立即执行和定时周期执行。</li><li>对作业和任务状况进行监控。<h2 id="自动化部署"><a href="#自动化部署" class="headerlink" title="自动化部署"></a>自动化部署</h2></li><li>根据业务量的上升可对集群动态扩容。</li><li>自由选择开源大数据生态软件组合和版本，包括 Hadoop 和 Spark。<h2 id="数据挖掘管理"><a href="#数据挖掘管理" class="headerlink" title="数据挖掘管理"></a>数据挖掘管理</h2></li><li>可选择统一数据仓库,封装为统计数据对外开放。</li><li>可执行数据挖掘脚本对平台内的制定范围数据进行分析和挖掘。</li></ul><h1 id="建立外部数据的战略储备"><a href="#建立外部数据的战略储备" class="headerlink" title="建立外部数据的战略储备"></a>建立外部数据的战略储备</h1><p>架构需要实际业务来验证。政企除了自身的数据之外，需要引入外部的数据来比对，样本的多样化有助于进一步分析和挖掘现有的数据。</p><ol><li>持续建立自己的外部数据战略储备。<ul><li>如<a href="http://newhouse.cnnbfdc.com/" target="_blank" rel="external">宁波市楼盘数据</a></li><li><a href="http://www.szjs.gov.cn/csml/rsc/xxgk/jgzn/jggk/?cid=51449" target="_blank" rel="external">深证市住房和建设局开放数据</a></li><li><a href="http://www.bjjs.gov.cn/bjjs/xxgk/index.shtml" target="_blank" rel="external">北京住房和城乡建设委员会</a></li></ul></li><li>自建具备采集、清洗、存储和索引等功能的自动化系统，自动累计外部数据。<ul><li>爬虫框架，<a href="https://github.com/LiZoRN/Charlotte" target="_blank" rel="external">Charlotte</a>.</li></ul></li><li>通过和数据供应商合作，获得一些数据。<ul><li><a href="http://www.datatang.com/data/shopping-mall.html" target="_blank" rel="external">数据堂</a></li></ul></li></ol><h2 id="推动自身数据的开放与分享"><a href="#推动自身数据的开放与分享" class="headerlink" title="推动自身数据的开放与分享"></a>推动自身数据的开放与分享</h2><ol><li>有了大量数据和一定的分析能力后，不故步自封充分借助社会的力量，尽最大可能发挥数据潜藏的价值。</li><li>通过数据开放计划，可以学习先进的算法和最具创新的数据应用思路实现自身数据的价值最大化。</li></ol><h1 id="数据产业的战略投资布局"><a href="#数据产业的战略投资布局" class="headerlink" title="数据产业的战略投资布局"></a>数据产业的战略投资布局</h1><h2 id="产业集成。"><a href="#产业集成。" class="headerlink" title="产业集成。"></a>产业集成。</h2><p>todo</p><h2 id="技术集成。"><a href="#技术集成。" class="headerlink" title="技术集成。"></a>技术集成。</h2><p>todo</p>]]></content>
    
    <summary type="html">
    
      如果给我5个系数，我可以画出一个大象；如果给我第6个系数，大象可以跳舞。
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="大数据" scheme="http://zfeiyu.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="hadoop" scheme="http://zfeiyu.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>hadoop实战(一)</title>
    <link href="http://zfeiyu.com/2017/05/22/hadoop-in-action-1/"/>
    <id>http://zfeiyu.com/2017/05/22/hadoop-in-action-1/</id>
    <published>2017-05-22T04:53:48.000Z</published>
    <updated>2017-06-03T03:12:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker形式的Hadoop"><a href="#Docker形式的Hadoop" class="headerlink" title="Docker形式的Hadoop"></a><a href="http://zfeiyu.com/2016/10/27/hadoop-quick-start/">Docker形式的Hadoop</a></h1><h1 id="Hadoop环境搭建"><a href="#Hadoop环境搭建" class="headerlink" title="Hadoop环境搭建"></a>Hadoop环境搭建</h1><h2 id="创建hadoop用户"><a href="#创建hadoop用户" class="headerlink" title="创建hadoop用户"></a>创建hadoop用户</h2><p>增加hadoop用户，授予管理员权限，并登录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sudo useradd -m hadoop</div><div class="line">$ sudo passwd hadoop</div><div class="line">$ sudo adduser hadoop sudo</div><div class="line">$ sudo su hadoop</div></pre></td></tr></table></figure><h2 id="安装配置SSH"><a href="#安装配置SSH" class="headerlink" title="安装配置SSH"></a>安装配置SSH</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install openssh-server</div><div class="line">$ sudo /etc/init.d/ssh start</div></pre></td></tr></table></figure><p>设置免密码登录，生成私钥和公钥,并将公钥追加到 authorized_keys中，它为用户保存所有允许登录到ssh客户端用户的公钥内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -P &quot;&quot;</div><div class="line">$  cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</div><div class="line">$  chmod 0600 ~/.ssh/authorized_keys</div></pre></td></tr></table></figure><p>在SSH安装之后，对SSH进行测试<code>$ssh localhost</code></p><h2 id="安装Hadhoop"><a href="#安装Hadhoop" class="headerlink" title="安装Hadhoop"></a>安装Hadhoop</h2><h3 id="安装Java环境"><a href="#安装Java环境" class="headerlink" title="安装Java环境"></a>安装Java环境</h3><p><code>sudo apt-get install openjdk-7-jdk</code></p><p>配置 JAVA_HOME， 获取java安装目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">hadoop@78dd25fb63f7:/usr/local/hadoop$ update-alternatives --config java</div><div class="line">There is only one alternative in link group java (providing /usr/bin/java): /usr</div><div class="line">/lib/jvm/java-7-openjdk-amd64/jre/bin/java</div><div class="line">Nothing to configure.</div><div class="line">hadoop@78dd25fb63f7:/usr/local/hadoop$</div></pre></td></tr></table></figure><p>配置环境变量<code>$ emacs ~/.bashrc</code>并export JAVA_HOME=JDK安装路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ source ~/.bashrc</div></pre></td></tr></table></figure><h2 id="安装Hadoop2-7"><a href="#安装Hadoop2-7" class="headerlink" title="安装Hadoop2.7"></a>安装Hadoop2.7</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">wget http://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-2.7.3/hadoop-2.7.3.tar.gz</div><div class="line"></div><div class="line">sudo tar xzf hadoop-2.7.3.tar.gz</div><div class="line">sudo mv hadoop-2.7.3 /usr/local/hadoop</div><div class="line">sudo chmod 777 /usr/local/hadoop</div><div class="line">update-alternatives --config java</div></pre></td></tr></table></figure><p>添加以下环境变量:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">#HADOOP VARIABLES START</div><div class="line"></div><div class="line">export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64</div><div class="line"></div><div class="line">export HADOOP_HOME=/usr/local/hadoop</div><div class="line">export HADOOP_INSTALL=$HADOOP_HOME</div><div class="line">export YARN_HOME=$HADOOP_HOME</div><div class="line">export PATH=$PATH:$HADOOP_HOME/bin</div><div class="line">export PATH=$PATH:$HADOOP_HOME/sbin</div><div class="line">export HADOOP_MAPRED_HOME=$HADOOP_HOME</div><div class="line">export HADOOP_COMMON_HOME=$HADOOP_HOME</div><div class="line">export HADOOP_HDFS_HOME=$HADOOP_HOME</div><div class="line">export YARN_HOME=$HADOOP_HOME</div><div class="line">export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native</div><div class="line">export HADOOP_OPTS= &quot;-Djava.library.path=$HADOOP_HOME/lib:$HADOOP_COMMON_LIB_NATIVE_DIR&quot;</div><div class="line">export STREAM=$HADOOP_HOME/share/hadoop/tools/lib/hadoop-streaming-*.jar</div><div class="line">export HADOOP_CLASSPATH=$&#123;JAVA_HOME&#125;/lib/tools.jar</div><div class="line">export JAVA_LIBRARY_PATH=$HADOOP_HOME/lib/native</div><div class="line">#HADOOP VARIABLES END</div></pre></td></tr></table></figure><p>查看Hadhoop版本，验证是否成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">hadoop version</div><div class="line"></div><div class="line">hadoop@VM-160-8-ubuntu:~$ hadoop version</div><div class="line">Hadoop 2.7.3</div><div class="line">Subversion https://git-wip-us.apache.org/repos/asf/hadoop.git -r baa91f7c6bc9cb92be5982de4719c1c8af91ccff</div><div class="line">Compiled by root on 2016-08-18T01:41Z</div><div class="line">Compiled with protoc 2.5.0</div><div class="line">From source with checksum 2e4ce5f957ea4db193bce3734ff29ff4</div><div class="line">This command was run using /usr/local/hadoop/share/hadoop/common/hadoop-common-2.7.3.jar</div></pre></td></tr></table></figure><h2 id="运行测试程序"><a href="#运行测试程序" class="headerlink" title="运行测试程序"></a>运行测试程序</h2><h3 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤 1"></a>步骤 1</h3><p>创建一个临时的Input目录，将需要处理的文件copy到input文件夹下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ mkdir input</div><div class="line">$ cp $HADOOP_HOME/*.txt input</div><div class="line">$ ls -l input</div><div class="line"></div><div class="line">-rw-r--r-- 1 root root 15164 Feb 21 10:14 LICENSE.txt</div><div class="line">-rw-r--r-- 1 root root   101 Feb 21 10:14 NOTICE.txt</div><div class="line">-rw-r--r-- 1 root root  1366 Feb 21 10:14 README.txt</div></pre></td></tr></table></figure></p><h3 id="步骤-2"><a href="#步骤-2" class="headerlink" title="步骤 2"></a>步骤 2</h3><p>利用Hadoop进行单词计数处理，统计input文件夹中所有文件中含有单词的次数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hadoop jar /usr/local/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar  wordcount input output</div></pre></td></tr></table></figure><p>查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">hadoop@VM-160-8-ubuntu:~$ cat output/*</div><div class="line">cryptography    1</div><div class="line">cure    3</div><div class="line">currently    1</div><div class="line">customarily    3</div><div class="line">customary    1</div><div class="line">d)    1</div><div class="line">damage    1</div><div class="line">damages    7</div><div class="line">damages,    3</div><div class="line">damages.    2</div><div class="line">data    3</div><div class="line">data,    1</div><div class="line">date    7</div><div class="line">day    4</div><div class="line">days    4</div><div class="line">de    1</div><div class="line">deal    5</div><div class="line">declaratory    2</div><div class="line">decoding    1</div><div class="line">decompression    4</div><div class="line">deemed    2</div><div class="line">defend    2</div><div class="line">defend,    1</div><div class="line">defense    1</div><div class="line">defined    5</div><div class="line">definition,    4</div><div class="line">delete    2</div><div class="line">deleted    2</div><div class="line">deletion    2</div><div class="line">deliberate    1</div><div class="line">den    1</div><div class="line">dependencies    8</div><div class="line">depends    13</div><div class="line">derivative    5</div><div class="line">......</div></pre></td></tr></table></figure><h1 id="Hadoop伪分布式安装"><a href="#Hadoop伪分布式安装" class="headerlink" title="Hadoop伪分布式安装"></a>Hadoop伪分布式安装</h1><h2 id="core-site-xml"><a href="#core-site-xml" class="headerlink" title="core-site.xml"></a>core-site.xml</h2><p>core-site.xml文件中包含Hadoop实例的端口号信息, 文件系统的内存分配信息，存储数据的内存限制，读/写缓冲区的容量等信息。 打开<code>core-site.xml</code>文件，并在, 标签之间添加以下属性信息。<br>cd $HADOOP_HOME/etc/hadoop</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">   &lt;property&gt;</div><div class="line">      &lt;name&gt;fs.default.name&lt;/name&gt;</div><div class="line">      &lt;value&gt;hdfs://localhost:9000&lt;/value&gt;</div><div class="line">   &lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure><h2 id="hdfs-site-xml"><a href="#hdfs-site-xml" class="headerlink" title="hdfs-site.xml"></a>hdfs-site.xml</h2><p><code>hdfs-site.xml</code>文件包括本地文件系统中复制数据，主节点路径，数据节点路径等信息，该文件主要储存Hadoop基础设施。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">   &lt;property&gt;</div><div class="line">      &lt;name&gt;dfs.replication&lt;/name&gt;</div><div class="line">      &lt;value&gt;1&lt;/value&gt;</div><div class="line">   &lt;/property&gt;</div><div class="line">   &lt;property&gt;</div><div class="line">      &lt;name&gt;dfs.name.dir&lt;/name&gt;</div><div class="line">      &lt;value&gt;file:///home/hadoop/hadoopinfra/hdfs/namenode&lt;/value&gt;</div><div class="line">   &lt;/property&gt;  </div><div class="line">   &lt;property&gt;</div><div class="line">      &lt;name&gt;dfs.data.dir&lt;/name&gt;</div><div class="line">      &lt;value&gt;file:///home/hadoop/hadoopinfra/hdfs/datanode&lt;/value&gt;</div><div class="line">   &lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure><h2 id="yarn-site-xml"><a href="#yarn-site-xml" class="headerlink" title="yarn-site.xml"></a>yarn-site.xml</h2><p>在以上文件中，所有的属性值都是用户定义的，可以通过改变属性值Hadoop基础构架，yarn-site.xml能够配置Hadoop的yarn，打开yarn-site.xml文件，在, 标签之间添加属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">    &lt;property&gt;</div><div class="line">      &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</div><div class="line">      &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</div><div class="line">   &lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure><h2 id="mapred-site-xml"><a href="#mapred-site-xml" class="headerlink" title="mapred-site.xml"></a>mapred-site.xml</h2><p><code>mapred-site.xml</code>文件说明哪一个MapReduce框架正在被使用。在默认状态下，Hadoop包含一个yarn-site.xml模板。 首先，需要使用cp命令复制mapred-site,xml.template到mapred-site.xml文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cp mapred-site.xml.template mapred-site.xml</div></pre></td></tr></table></figure><p>打开mapred-site.xml文件，并在, 标签之间添加属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">    &lt;property&gt;</div><div class="line">      &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</div><div class="line">      &lt;value&gt;yarn&lt;/value&gt;</div><div class="line">   &lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure><h2 id="Hadoop启动"><a href="#Hadoop启动" class="headerlink" title="Hadoop启动"></a>Hadoop启动</h2><h3 id="建立主节点"><a href="#建立主节点" class="headerlink" title="建立主节点"></a>建立主节点</h3><p>建立主节点使用<code>hdfs namenode -format</code>命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ cd ~</div><div class="line">$ hdfs namenode -format</div><div class="line">打开hadoop-env.sh，增加</div><div class="line">export  HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native</div><div class="line">export  HADOOP_HOME=/usr/local/hadoop</div><div class="line">export  HADOOP_OPTS=&quot;-Djava.library.path=$HADOOP_HOME/lib:$HADOOP_COMMON_LIB_NATIVE_DIR&quot;</div></pre></td></tr></table></figure><p>命令正确执行后，可以得到以下的输出结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">hadoop@VM-160-8-ubuntu:/usr/local/hadoop/etc/hadoop$ hdfs namenode -format</div><div class="line">17/05/21 12:12:04 INFO namenode.NameNode: STARTUP_MSG:</div><div class="line">/************************************************************</div><div class="line">STARTUP_MSG: Starting NameNode</div><div class="line">STARTUP_MSG:   host = VM-160-8-ubuntu/127.0.0.1</div><div class="line">STARTUP_MSG:   args = [-format]</div><div class="line">STARTUP_MSG:   version = 2.7.3</div><div class="line">......</div><div class="line">......</div><div class="line">17/05/21 12:12:06 INFO namenode.NameNode: SHUTDOWN_MSG:</div><div class="line">/************************************************************</div><div class="line">SHUTDOWN_MSG: Shutting down NameNode at VM-160-8-ubuntu/127.0.0.1</div><div class="line">************************************************************/</div></pre></td></tr></table></figure><h3 id="启动Hadoop的dfs文件系统"><a href="#启动Hadoop的dfs文件系统" class="headerlink" title="启动Hadoop的dfs文件系统"></a>启动Hadoop的dfs文件系统</h3><p>以下命令用来启动dfs，启动Hadoop文件系统。(2.7需将 /etc/hadoop/hadoop-env.sh中的 JAVA_HOME设为绝对路径)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">hadoop@VM-160-8-ubuntu:~$ start-dfs.sh</div><div class="line">17/05/21 12:23:54 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</div><div class="line">Incorrect configuration: namenode address dfs.namenode.servicerpc-address or dfs.namenode.rpc-address is not configured.</div><div class="line">Starting namenodes on []</div><div class="line">localhost: starting namenode, logging to /usr/local/hadoop/logs/hadoop-hadoop-namenode-VM-160-8-ubuntu.out</div><div class="line">localhost: starting datanode, logging to /usr/local/hadoop/logs/hadoop-hadoop-datanode-VM-160-8-ubuntu.out</div><div class="line">Starting secondary namenodes [0.0.0.0]</div><div class="line">0.0.0.0: starting secondarynamenode, logging to /usr/local/hadoop/logs/hadoop-hadoop-secondarynamenode-VM-160-8-ubuntu.out</div><div class="line">17/05/21 12:24:13 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</div></pre></td></tr></table></figure><h3 id="启动Yarn脚本"><a href="#启动Yarn脚本" class="headerlink" title="启动Yarn脚本"></a>启动Yarn脚本</h3><p>以下命令启动yarn script，执行这个命令将会启动yarn daemons程序。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ start-yarn.sh</div><div class="line">hadoop@VM-160-8-ubuntu:~$ start-yarn.sh</div><div class="line">starting yarn daemons</div><div class="line">starting resourcemanager, logging to /usr/local/hadoop/logs/yarn-hadoop-resourcemanager-VM-160-8-ubuntu.out</div><div class="line">localhost: starting nodemanager, logging to /usr/local/hadoop/logs/yarn-hadoop-nodemanager-VM-160-8-ubuntu.out</div></pre></td></tr></table></figure><p>通过浏览器访问Hadoop</p><p>Hadoop默认的端口号是50070，使用以下命令访问Hadoop服务。<code>http://localhost:50070/</code></p><p>图1-Hadoop服务</p><p><img src="/res/img/hadoop/dsf_overview.jpg" alt=""></p><h3 id="启动集群中所有的应用程序"><a href="#启动集群中所有的应用程序" class="headerlink" title="启动集群中所有的应用程序"></a>启动集群中所有的应用程序</h3><p>默认的端口号8088能够访问所有的应用程序，使用以下url能够访问这个服务。<code>http://localhost:8088/</code></p><p>图2-Hadoop应用程序</p><p><img src="/res/img/hadoop/8088.jpg" alt=""></p><p>出现以上图片表明Hadoop程序已经完成部署。</p><h1 id="Spark安装"><a href="#Spark安装" class="headerlink" title="Spark安装"></a>Spark安装</h1><p>获取并解压到Hadoop中.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget https://d3kbcqa49mib13.cloudfront.net/spark-2.1.1-bin-hadoop2.7.tgz</div><div class="line">tar -xf spark-2.1.1-bin-hadoop2.7.tgz</div><div class="line">sudo mv spark-2.1.1-bin-hadoop2.7 $HADOOP_HOME/spark2</div></pre></td></tr></table></figure><p>配置环境变量:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export SPARK_HOME=$HADOOP_HOME/spark2</div><div class="line">export PATH=$SPARK_HOME/bin:$PATH</div></pre></td></tr></table></figure><p>进入Spark安装路径,配置spark环境变量：<code>cp spark-env.sh.template spark-env.sh</code></p><p>加入如下环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64</div><div class="line">export SPARK_MASTER_IP=10.154.160.8</div></pre></td></tr></table></figure><p>sbin/start-all.sh启动spark, 8080端口访问spark的web站点</p>]]></content>
    
    <summary type="html">
    
      hadoop单站配置
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="大数据" scheme="http://zfeiyu.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="hadoop" scheme="http://zfeiyu.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix使用指南</title>
    <link href="http://zfeiyu.com/2017/05/20/zabbix-guide/"/>
    <id>http://zfeiyu.com/2017/05/20/zabbix-guide/</id>
    <published>2017-05-20T08:38:30.000Z</published>
    <updated>2017-05-20T08:31:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>zabbix可监控服务器资源以及数据库资源，同时有开放的api接口可以方便的在它的基础上做二次开发，可作为数据中心建设的备选方案。</p><h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ubuntu 14.04</div><div class="line">mysql-5.6</div><div class="line">php-5.5</div><div class="line">zabbix-3.2</div></pre></td></tr></table></figure><h2 id="安装LAMP"><a href="#安装LAMP" class="headerlink" title="安装LAMP"></a>安装LAMP</h2><h3 id="安装Apache2和PHP"><a href="#安装Apache2和PHP" class="headerlink" title="安装Apache2和PHP"></a>安装Apache2和PHP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt install apache2</div><div class="line">sudo apt-get install php5  php5-mysql  libapache2-mod-auth-mysql</div></pre></td></tr></table></figure><p>查找date字符串，修改date.timezone及添加后面的字段 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">date.timezone = Asia/Shanghai </div><div class="line">max_input_time = 600 </div><div class="line">max_execution_time= 600 </div><div class="line">post_max_size = 32M</div></pre></td></tr></table></figure><p>重启apache2 <code>/etc/init.d/apache2 restart</code></p><h3 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install mysql-server</div><div class="line">sudo apt isntall mysql-client</div><div class="line">sudo apt install libmysqlclient-dev </div><div class="line"></div><div class="line">sudo apt-get install phpmyadmin</div><div class="line">sudo apt-get install php-mbstring</div><div class="line">sudo apt-get install php-gettext</div><div class="line">sudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin</div></pre></td></tr></table></figure><h2 id="安装Zabbix"><a href="#安装Zabbix" class="headerlink" title="安装Zabbix"></a>安装Zabbix</h2><h3 id="增加zabbix用户和组"><a href="#增加zabbix用户和组" class="headerlink" title="增加zabbix用户和组"></a>增加zabbix用户和组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">groupadd zabbix</div><div class="line">useradd -g zabbix -m zabbix</div></pre></td></tr></table></figure><h3 id="安装依赖环境："><a href="#安装依赖环境：" class="headerlink" title="安装依赖环境："></a>安装依赖环境：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">apt-get update</div><div class="line">sudo apt-get install build-essential</div><div class="line">sudo apt-get -y install make</div><div class="line">sudo apt-get -y install gcc</div><div class="line">sudo apt-get -y install libghc-hsql-mysql-dev</div><div class="line">sudo apt-get install libmysqlclient18</div><div class="line">sudo apt-get -y install libxml2-dev</div><div class="line">sudo apt-get install libcurl3-dev</div><div class="line">sudo apt-get install libsnmp-dev</div></pre></td></tr></table></figure><h3 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">### 创建zabbix表</div><div class="line">create database zabbix character set utf8;</div><div class="line">### 创建mysql帐号：zabbix，密码：zabbix </div><div class="line">grant all on zabbix.* to &apos;zabbix&apos;@&apos;localhost&apos; identified by &apos;zabbix&apos;;</div></pre></td></tr></table></figure><p>( 源码包下的路径：zabbix –&gt; database –&gt; mysql –&gt; *.sql )</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysql -uzabbix -pzabbix zabbix &lt; schema.sql</div><div class="line">mysql -uzabbix -pzabbix zabbix &lt; images.sql </div><div class="line">mysql -uzabbix -pzabbix zabbix &lt; data.sql</div></pre></td></tr></table></figure><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">./configure --enable-server --enable-agent --with-mysql --enable-ipv6 --with-net-snmp --with-libcurl --with-libxml2</div><div class="line"></div><div class="line">make install</div></pre></td></tr></table></figure><h3 id="安装中文字体"><a href="#安装中文字体" class="headerlink" title="安装中文字体"></a>安装中文字体</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install language-pack-zh-hans</div></pre></td></tr></table></figure><h3 id="启动zabbix-server"><a href="#启动zabbix-server" class="headerlink" title="启动zabbix_server"></a>启动zabbix_server</h3><p><code>/etc/init.d/zabbix-server start</code></p><p>访问<a href="http://127.0.0.1/zabbix/" target="_blank" rel="external">zabbix frontend</a>,用户名密码<code>admin/zabbix</code></p><h1 id="添加Zabbix-agent-active模式-监控主机"><a href="#添加Zabbix-agent-active模式-监控主机" class="headerlink" title="添加Zabbix agent(active模式)监控主机"></a>添加Zabbix agent(active模式)监控主机</h1><p>active模式：agent主机主动上报采集数据。</p><p>克隆一个模板</p><p><img src="/res/img/zabbix/template.png" alt=""></p><p>修改为Agent active模式</p><p><img src="/res/img/zabbix/activemode.png" alt=""></p><p>更新监控项</p><p><img src="/res/img/zabbix/update.png" alt=""></p><p>创建主机</p><p><img src="/res/img/zabbix/create_host.png" alt=""></p><p>选择模板</p><p><img src="/res/img/zabbix/temp_choose.png" alt=""></p><h2 id="安装-zabbix-agent"><a href="#安装-zabbix-agent" class="headerlink" title="安装 zabbix agent"></a>安装 zabbix agent</h2><ol><li>将zabbix文件夹解压后放在<code>C：\</code></li><li>C:\zabbix\下 新建一个<code>zabbix_agent.log</code>文件</li><li><p>配置zabbix_agentd.win.conf文件（位于<code>C:\zabbix\conf\</code>），需要修改的地方分别为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Logfile= C:\zabbix\zabbix_agent.log</div><div class="line">        Server=X.X.X.X</div><div class="line">        Hostname=X.X.X.X</div></pre></td></tr></table></figure></li></ol><p> 注：</p><ol><li>Server是zabbix服务器的IP地址</li><li>LogFile为<code>zabbix_agentd.log</code>文件的位置，用于记录事件，这里的zabbix_agentd.log填写你新建log文件的位置</li><li>Hostname需要和服务器端配置主机填入的主机名称一致，不然日志中将会报“host{主机名}not found”的错误</li></ol><h3 id="打开CMD命令行，注意文件路径执行："><a href="#打开CMD命令行，注意文件路径执行：" class="headerlink" title="打开CMD命令行，注意文件路径执行："></a>打开CMD命令行，注意文件路径执行：</h3><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">C:\zabbix\bin\win32\zabbix_agentd.exe -c C:\zabbix\conf\zabbix_agentd.win.conf -i</div><div class="line">C:\zabbix\bin\win32\zabbix_agentd.exe -c C:\zabbix\conf\zabbix_agentd.win.conf -s</div></pre></td></tr></table></figure></code></pre><h2 id="查看监控项"><a href="#查看监控项" class="headerlink" title="查看监控项"></a>查看监控项</h2><p><img src="/res/img/zabbix/monitor.png" alt=""></p><h1 id="数据库监控"><a href="#数据库监控" class="headerlink" title="数据库监控"></a>数据库监控</h1><ol><li>oracle监控插件:<a href="http://www.smartmarmot.com/wiki/index.php?title=Orabbix" target="_blank" rel="external">orabbix</a></li><li>mysql：官方自带mysql监控模板，agent端运行mysql监控脚本<br>todo</li></ol><h1 id="CLI"><a href="#CLI" class="headerlink" title="CLI"></a>CLI</h1><p>todo</p>]]></content>
    
    <summary type="html">
    
      zabbix可监控服务器资源以及数据库资源，同时有开放的api接口可以方便的在它的基础上做二次开发
    
    </summary>
    
      <category term="开发者工具" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="运维" scheme="http://zfeiyu.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>中文技术文档写作规范</title>
    <link href="http://zfeiyu.com/2016/11/06/document-style-guide/"/>
    <id>http://zfeiyu.com/2016/11/06/document-style-guide/</id>
    <published>2016-11-06T08:38:30.000Z</published>
    <updated>2016-11-19T01:44:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>国外有非常多优秀的技术文档，黑客也大多擅长写作，无奈<code>墙</code>以及国内外文化差异的原因，总是会让你对文档的理解有或多或少的偏差。而国内技术氛围对敏捷开发理解有误，不重视文档。仅有的技术文档，也是挠痒之作。技术类的书，不管是出自翻译，还是由国内技术人员编写，质量普遍不高。</p><p>我一直都觉得：中文博大精深，要写出优秀的作品远比英文要难，尤其是技术文档，会有大量中英文的结合，即使是标点符号的运用都是一件烦恼的事情。最近一直在思考如何写出优秀的技术文档，其实技术文档的规范和编码规范差不多：要语法统一、用词精准、多用短句、不应该存在歧义、同样不应该有<a href="2016-10-25-Taste-of-code">坏味道</a>。看到这篇出自阮一峰的<a href="https://github.com/ruanyf/document-style-guide" target="_blank" rel="external">《中文技术文档的写作规范》</a>，很有启发。该指导文档比较系统，遂摘录，共勉！</p><p>另附上维基百科的各组织的写作要求<a href="https://en.wikipedia.org/wiki/List_of_style_guides" target="_blank" rel="external">写作要求</a>。</p><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h2 id="层级"><a href="#层级" class="headerlink" title="层级"></a>层级</h2><h3 id="标题分为四级。"><a href="#标题分为四级。" class="headerlink" title="标题分为四级。"></a>标题分为四级。</h3><ul><li>一级标题：文章的标题</li><li>二级标题：文章主要部分的大标题</li><li>三级标题：二级标题下面一级的小标题</li><li>四级标题：三级标题下面某一方面的小标题</li></ul><h2 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h2><ul><li>一级标题下，不能直接出现三级标题。</li><li>标题要避免孤立编号（即同级标题只有一个）。</li><li>下级标题不重复上一级标题的内容。</li><li>谨慎使用四级标题，尽量避免出现，保持层级的简单和防止出现过于复杂的章节。如果三级标题下有并列性的内容，建议只使用项目列表（Item list）。</li></ul><h1 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h1><h2 id="字间距"><a href="#字间距" class="headerlink" title="字间距"></a>字间距</h2><p>全角中文字符与半角英文字符之间，应有一个半角空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：本文介绍如何快速启动Windows系统。</div><div class="line"></div><div class="line">正确：本文介绍如何快速启动 Windows 系统。</div></pre></td></tr></table></figure><p>全角中文字符与半角阿拉伯数字之间，有没有半角空格都可，但必须保证风格统一，不能两种风格混杂。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">正确：2011年5月15日，我订购了5台笔记本电脑与10台平板电脑。</div><div class="line"></div><div class="line">正确：2011 年 5 月 15 日，我订购了 5 台笔记本电脑与 10 台平板电脑。</div></pre></td></tr></table></figure><p>半角的百分号，视同阿拉伯数字。</p><p>英文单位若不翻译，单位前的阿拉伯数字与单位间不留空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：一部容量为 16 GB 的智能手机</div><div class="line"></div><div class="line">正确：一部容量为 16GB 的智能手机</div></pre></td></tr></table></figure><p>半角英文字符和半角阿拉伯数字，与全角标点符号之间不留空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：他的电脑是 MacBook Air 。</div><div class="line"></div><div class="line">正确：他的电脑是 MacBook Air。</div></pre></td></tr></table></figure><h2 id="句子"><a href="#句子" class="headerlink" title="句子"></a>句子</h2><ul><li>避免使用长句。一个句子建议不超过 100 字或者正文的 3 行。</li><li>尽量使用简单句和并列句，避免使用复合句。</li></ul><h2 id="写作风格"><a href="#写作风格" class="headerlink" title="写作风格"></a>写作风格</h2><p>尽量不使用被动语态，改为使用主动语态。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：假如此软件尚未被安装，</div><div class="line"></div><div class="line">正确：假如尚未安装这个软件，</div></pre></td></tr></table></figure><p>不使用非正式的语言风格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：Lady Gaga 的演唱会真是酷毙了，从没看过这么给力的表演！！！</div><div class="line"></div><div class="line">正确：无法参加本次活动，我深感遗憾。</div></pre></td></tr></table></figure><p>用对“的”、“地”、“得”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">她露出了开心的笑容。</div><div class="line">（形容词＋的＋名词）</div><div class="line"></div><div class="line">她开心地笑了。</div><div class="line">（副词＋地＋动词）</div><div class="line"></div><div class="line">她笑得很开心。</div><div class="line">（动词＋得＋副词）</div></pre></td></tr></table></figure><p>使用代词时（比如“其”、“该”、“此”、“这”等词），必须明确指代的内容，保证只有一个含义。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：从管理系统可以监视中继系统和受其直接控制的分配系统。</div><div class="line"></div><div class="line">正确：从管理系统可以监视两个系统：中继系统和受中继系统直接控制的分配系统。</div></pre></td></tr></table></figure><p>名词前不要使用过多的形式词。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：此设备的使用必须在接受过本公司举办的正式的设备培训的技师的指导下进行。</div><div class="line"></div><div class="line">正确：此设备必须在技师的指导下使用，且指导技师必须接受过由本公司举办的正式设备培训。</div></pre></td></tr></table></figure><p>单个句子的长度尽量保持在 20 个字以内；20～29 个字的句子，可以接受；30～39 个字的句子，语义必须明确，才能接受；多于 40 个字的句子，在任何情况下都不能接受。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：本产品适用于从由一台服务器进行动作控制的单一节点结构到由多台服务器进行动作控制的并行处理程序结构等多种体系结构。</div><div class="line"></div><div class="line">正确：本产品适用于多种体系结构。无论是由一台服务器（单一节点结构），还是由多台服务器（并行处理结构）进行动作控制，均可以使用本产品。</div></pre></td></tr></table></figure><p>同样一个意思，尽量使用肯定句表达，不使用否定句表达。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：请确认没有接通装置的电源。</div><div class="line"></div><div class="line">正确：请确认装置的电源已关闭。</div></pre></td></tr></table></figure><p>避免使用双重否定句。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：没有删除权限的用户，不能删除此文件。</div><div class="line"></div><div class="line">正确：用户必须拥有删除权限，才能删除此文件。</div></pre></td></tr></table></figure><h2 id="英文处理"><a href="#英文处理" class="headerlink" title="英文处理"></a>英文处理</h2><p>英文原文如果使用了复数形式，翻译成中文时，应该将其还原为单数形式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">英文：⋯information stored in random access memory (RAMs)⋯</div><div class="line"></div><div class="line">中文：……存储在随机存取存储器（RAM）里的信息……</div></pre></td></tr></table></figure><p>外文缩写可以使用半角圆点(<code>.</code>)表示缩写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">U.S.A.</div><div class="line">Apple, Inc.</div></pre></td></tr></table></figure><p>表示中文时，英文省略号（<code>⋯</code>）应改为中文省略号（<code>……</code>）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">英文：5 minutes later⋯</div><div class="line"></div><div class="line">中文：5 分钟过去了⋯⋯</div></pre></td></tr></table></figure><p>英文书名或电影名改用中文表达时，双引号应改为书名号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">英文：He published an article entitled &quot;The Future of the Aviation&quot;.</div><div class="line"></div><div class="line">中文：他发表了一篇名为《航空业的未来》的文章。</div></pre></td></tr></table></figure><p>第一次出现英文词汇时，在括号中给出中文标注。此后再次出现时，直接使用英文缩写即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">IOC（International Olympic Committee，国际奥林匹克委员会）。这样定义后，便可以直接使用“IOC”了。</div></pre></td></tr></table></figure><p>专有名词中每个词第一个字母均应大写，非专有名词则不需要大写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">“American Association of Physicists in Medicine”（美国医学物理学家协会）是专有名词，需要大写。</div><div class="line"></div><div class="line">“online transaction processing”（在线事务处理）不是专有名词，不应大写。</div></pre></td></tr></table></figure><h1 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h1><h2 id="原则-1"><a href="#原则-1" class="headerlink" title="原则"></a>原则</h2><ul><li>一个段落只能有一个主题，或一个中心句子。</li><li>段落的中心句子放在段首，对全段内容进行概述。后面陈述的句子为核心句服务。</li><li>一个段落的长度不能超过七行，最佳段落长度小于等于四行。</li><li>段落的句子语气要使用陈述和肯定语气，避免使用感叹语气。</li><li>段落之间使用一个空行隔开。</li><li>段落开头不要留出空白字符。</li></ul><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>引用第三方内容时，应注明出处。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">One man’s constant is another man’s variable. — Alan Perlis</div></pre></td></tr></table></figure><p>如果是全篇转载，请在全文开头显著位置注明作者和出处，并链接至原文。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">本文转载自 WikiQuote</div></pre></td></tr></table></figure><p>使用外部图片时，必须在图片下方或文末标明来源。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">本文部分图片来自 Wikipedia</div></pre></td></tr></table></figure><h1 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h1><h2 id="半角数字"><a href="#半角数字" class="headerlink" title="半角数字"></a>半角数字</h2><p>数字一律使用半角形式，不得使用全角形式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误： 这件商品的价格是１０００元。</div><div class="line"></div><div class="line">正确： 这件商品的价格是 1000 元。</div></pre></td></tr></table></figure><h2 id="千分号"><a href="#千分号" class="headerlink" title="千分号"></a>千分号</h2><p>数值为千位以上，应添加千分号（半角逗号）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XXX 公司的实收资本为 RMB1,258,000。</div></pre></td></tr></table></figure><p>对于 4 ～ 6 位的数值，千分号是选用的，比如<code>1000</code>和<code>1,000</code>都可以接受。对于7位及以上的数值，千分号是必须的。</p><p>多位小数要从小数点后从左向右添加千分号，比如<code>4.234,345</code>。</p><h2 id="货币"><a href="#货币" class="headerlink" title="货币"></a>货币</h2><p>货币应为阿拉伯数字，并在数字前写出货币符号，或在数字后写出货币中文名称。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$1,000</div><div class="line">1,000 美元</div></pre></td></tr></table></figure><h2 id="数值范围"><a href="#数值范围" class="headerlink" title="数值范围"></a>数值范围</h2><p>表示数值范围时，用<code>～</code>连接。参见《标点符号》一节的“连接号”部分。</p><p>带有单位或百分号时，两个数字都要加上单位或百分号，不能只加后面一个。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">正确：132kg～234kg</div><div class="line">错误：132～234kg</div><div class="line"></div><div class="line">正确：67%～89%</div><div class="line">错误：67～89%</div></pre></td></tr></table></figure><h2 id="变化程度的表示法"><a href="#变化程度的表示法" class="headerlink" title="变化程度的表示法"></a>变化程度的表示法</h2><p>数字的增加要使用“增加了”、“增加到”。“了”表示增量，“到”表示定量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">增加到过去的两倍</div><div class="line">（过去为一，现在为二）</div><div class="line"></div><div class="line">增加了两倍</div><div class="line">（过去为一，现在为三）</div></pre></td></tr></table></figure><p>数字的减少要使用“降低了”、“降低到”。“了”表示增量，“到”表示定量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">降低到百分之八十</div><div class="line">（定额是一百，现在是八十）</div><div class="line"></div><div class="line">降低了百分之八十</div><div class="line">（原来是一百，现在是二十）</div></pre></td></tr></table></figure><p>不能用“降低N倍”或“减少N倍”的表示法，要用“降低百分之几”或“减少百分之几”。因为减少（或降低）一倍表示数值原来为一百，现在等于零。</p><h1 id="标点符号"><a href="#标点符号" class="headerlink" title="标点符号"></a>标点符号</h1><h2 id="原则-2"><a href="#原则-2" class="headerlink" title="原则"></a>原则</h2><ul><li>中文语句的标点符号，均应该采取全角符号，这样可以保证视觉的一致。</li><li>如果整句为英文，则该句使用英文/半角标点。</li><li>句号、问号、叹号、逗号、顿号、分号和冒号不得出现在一行之首。</li></ul><h2 id="句号"><a href="#句号" class="headerlink" title="句号"></a>句号</h2><p>中文语句中的结尾处应该用全角句号（<code>。</code>）。</p><p>句子末尾用括号加注时，句号应在括号之外。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：关于文件的输出，请参照第 1.3 节（见第 26 页。）</div><div class="line"></div><div class="line">正确：关于文件的输出，请参照第 1.3 节（见第 26 页）。</div></pre></td></tr></table></figure><h2 id="逗号"><a href="#逗号" class="headerlink" title="逗号"></a>逗号</h2><p>逗号<code>，</code>表示句子内部的一般性停顿。</p><p>注意避免“一逗到底”，即整个段落除了结尾，全部停顿都使用逗号。</p><h2 id="顿号"><a href="#顿号" class="headerlink" title="顿号"></a>顿号</h2><p>句子内部的并列词，应该用全角顿号(<code>、</code>) 分隔，而不用逗号，即使并列词是英语也是如此。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：我最欣赏的科技公司有 Google, Facebook, 腾讯, 阿里和百度等。</div><div class="line"></div><div class="line">正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里和百度等。</div></pre></td></tr></table></figure><p>英文句子中，并列词语之间使用半角逗号（<code>,</code>）分隔。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：Microsoft Office includes Word, Excel, PowerPoint, Outlook and other components.</div></pre></td></tr></table></figure><h2 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h2><p>分号<code>；</code>表示复句内部并列分句之间的停顿。</p><h2 id="引号"><a href="#引号" class="headerlink" title="引号"></a>引号</h2><p>引用时，应该使用全角双引号（<code>“ ”</code>），注意前后双引号不同。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：许多人都认为客户服务的核心是“友好”和“专业”。</div></pre></td></tr></table></figure><p>引号里面还要用引号时，外面一层用双引号，里面一层用单引号（<code>‘ ’</code>），注意前后单引号不同。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：鲍勃解释道：“我要放音乐，可萨利说，‘不行！’。”</div></pre></td></tr></table></figure><h2 id="圆括号"><a href="#圆括号" class="headerlink" title="圆括号"></a>圆括号</h2><p>补充说明时，使用全角圆括号<code>（）</code>，括号前后不加空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：请确认所有的连接（电缆和接插件）均安装牢固。</div></pre></td></tr></table></figure><h2 id="冒号"><a href="#冒号" class="headerlink" title="冒号"></a>冒号</h2><p>全角冒号（<code>：</code>）常用在需要解释的词语后边，引出解释和说明。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：请确认以下几项内容：时间、地点、活动名称，以及来宾数量。</div></pre></td></tr></table></figure><p>表示时间时，应使用半角冒号（<code>:</code>）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：早上 8:00</div></pre></td></tr></table></figure><h2 id="省略号"><a href="#省略号" class="headerlink" title="省略号"></a>省略号</h2><p>省略号<code>……</code>表示语句未完、或者语气的不连续。它占两个汉字空间、包含六个省略点，不要使用<code>。。。</code>或<code>...</code>等非标准形式。</p><p>省略号不应与“等”这个词一起使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">错误：我们为会餐准备了香蕉、苹果、梨…等各色水果。</div><div class="line"></div><div class="line">正确：我们为会餐准备了各色水果，有香蕉、苹果、梨……</div><div class="line"></div><div class="line">正确：我们为会餐准备了香蕉、苹果、梨等各色水果。</div></pre></td></tr></table></figure><h2 id="感叹号"><a href="#感叹号" class="headerlink" title="感叹号"></a>感叹号</h2><p>应该使用平静的语气叙述，尽量避免使用感叹号<code>！</code>。</p><p>不得多个感叹号连用，比如<code>！！</code>和<code>!!!</code>。</p><h2 id="破折号"><a href="#破折号" class="headerlink" title="破折号"></a>破折号</h2><p>破折号<code>————</code>一般用于做进一步解释。破折号应占两个汉字的位置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：直觉————尽管它并不总是可靠的————告诉我，这事可能出了些问题。</div></pre></td></tr></table></figure><h2 id="连接号"><a href="#连接号" class="headerlink" title="连接号"></a>连接号</h2><p>连接号用于连接两个类似的词。</p><p>以下场合应该使用直线连接号（<code>-</code>），占一个半角字符的位置。</p><ul><li>两个名词的复合</li><li>图表编号</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">例句：氧化-还原反应</div><div class="line"></div><div class="line">例句：图 1-1</div></pre></td></tr></table></figure><p>以下场合应该使用波浪连接号（<code>～</code>），占一个全角字符的位置。</p><ul><li>数值范围（例如日期、时间或数字）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：2009 年～2011 年</div></pre></td></tr></table></figure><p>注意，波浪连接号前后两个值都应该加上单位。</p><p>波浪连接号也可以用汉字“至”代替。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：周围温度：-20°C 至 -10°C</div></pre></td></tr></table></figure><h1 id="章节结构"><a href="#章节结构" class="headerlink" title="章节结构"></a>章节结构</h1><p>软件手册是一部完整的书，建议采用下面的结构。</p><ul><li><strong>简介</strong>（Introduction）： [必备] [文件] 提供对产品和文档本身的总体的、扼要的说明</li><li><strong>快速上手</strong>（Getting Started）：[可选] [文件] 如何最快速地使用产品</li><li><strong>入门篇</strong>（Basics）： [必备] [目录] 又称”使用篇“，提供初级的使用教程<ul><li><strong>环境准备</strong>（Prerequisite）：[必备] [文件] 软件使用需要满足的前置条件</li><li><strong>安装</strong>（Installation）：[可选] [文件] 软件的安装方法</li><li><strong>设置</strong>（Configuration）：[必备] [文件] 软件的设置</li></ul></li><li><strong>进阶篇</strong>（Advanced)：[可选] [目录] 又称”开发篇“，提供中高级的开发教程</li><li><strong>API</strong>（Reference）：[可选] [目录|文件] 软件API的逐一介绍</li><li><strong>FAQ</strong>：[可选] [文件] 常见问题解答</li><li><strong>附录</strong>（Appendix）：[可选] [目录] 不属于教程本身、但对阅读教程有帮助的内容<ul><li><strong>Glossary</strong>：[可选] [文件] 名词解释</li><li><strong>Recipes</strong>：[可选] [文件] 最佳实践</li><li><strong>Troubleshooting</strong>：[可选] [文件] 故障处理</li><li><strong>ChangeLog</strong>：[可选] [文件] 版本说明</li><li><strong>Feedback</strong>：[可选] [文件] 反馈方式</li></ul></li></ul><p><strong>范例</strong></p><ul><li><a href="http://redux.js.org/index.html" target="_blank" rel="external">Redux 手册</a></li><li><a href="http://flight-manual.atom.io/" target="_blank" rel="external">Atom 手册</a></li></ul><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="http://wenku.baidu.com/view/23cc1a6527d3240c8447efbf.html" target="_blank" rel="external">产品手册中文写作规范</a>, by 华为</li><li><a href="http://docs.daocloud.io/write-docs/format" target="_blank" rel="external">写作规范和格式规范</a>, by DaoCloud</li><li><a href="http://www.hitachi-tc.co.jp/company/thesis/thesis.pdf" target="_blank" rel="external">技术写作技巧在日汉翻译中的应用</a>, by 刘方</li><li><a href="https://www.lengoo.de/documents/styleguides/lengoo_styleguide_ZH.pdf" target="_blank" rel="external">简体中文规范指南</a>，by lengoo</li><li><a href="https://open.leancloud.cn/copywriting-style-guide.html" target="_blank" rel="external">文档风格指南</a>, by LeanCloud</li><li><a href="https://docs.google.com/document/d/1R8lMCPf6zCD5KEA8ekZ5knK77iw9J-vJ6vEopPemqZM/edit" target="_blank" rel="external">豌豆荚文案风格指南</a>, by 豌豆荚</li><li><a href="https://github.com/sparanoid/chinese-copywriting-guidelines" target="_blank" rel="external">中文文案排版指北</a>，by sparanoid</li><li><a href="http://w3c.github.io/clreq/" target="_blank" rel="external">中文排版需求</a>，by W3C</li></ul>]]></content>
    
    <summary type="html">
    
      国外有非常多优秀的技术文档,黑客也大多擅长写作,无奈`墙`以及国内外文化差异的原因,总是会让你对文档的理解有或多或少的偏差.而国内技术氛围对敏捷开发理解有误,不重视文档.仅有的技术文档,不管是出自翻译,还是由国内技术人员编写,质量高的也很少.看到这篇出自阮一峰的&lt;中文技术文档的写作规范&gt;,很有启发,遂摘录共勉!
    
    </summary>
    
      <category term="转" scheme="http://zfeiyu.com/categories/%E8%BD%AC/"/>
    
    
      <category term="写作规范" scheme="http://zfeiyu.com/tags/%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu docker镜像问题</title>
    <link href="http://zfeiyu.com/2016/11/02/docker-ubuntu-issue/"/>
    <id>http://zfeiyu.com/2016/11/02/docker-ubuntu-issue/</id>
    <published>2016-11-02T03:22:51.000Z</published>
    <updated>2016-11-05T00:59:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>emacs使用多年,发现spacemacs的配置还算符合胃口,于是想做一个基于Ubuntu16.04的Docker镜像,以后就可以带着这粒胶囊行走天下了.</p><p>没想到踩到一个坑…</p><p><em>Dockerfile:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">RUN \</div><div class="line"> DEBIAN_FRONTEND=noninteractive apt-get update &amp;&amp; \</div><div class="line"> DEBIAN_FRONTEND=noninteractive apt-get -y install wget curl git emacs&amp;&amp; \</div><div class="line"> DEBIAN_FRONTEND=noninteractive apt-get -y autoremove &amp;&amp; \</div><div class="line"> DEBIAN_FRONTEND=noninteractive git <span class="built_in">clone</span> https://github.com/syl20bnr/spacemacs ~/.emacs.d &amp;&amp; \</div></pre></td></tr></table></figure><p>镜像build完成,启动emacs报错:<br><code>Debugger entered--Lisp error:(Wrong-type-argument stringp nil)</code></p><p>打开<code>--debug-info</code>进行调试,出错的堆栈信息如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">string-match(&quot;\\(fish\\|t?csh\\)$&quot; nil)</div><div class="line">exec-path-from-shell--standard-shell-p(nil)</div><div class="line">exec-path-from-shell-printf(&quot;%S\\000%s&quot; (&quot;$&#123;PATH-ad3306701bb5eb9f528b5c1b34485248&#125;&quot; &quot;$&#123;MANPYTHON-ad3306701bb5eb9f528b5c1b34485248&#125;&quot;))</div><div class="line">exec-path-from-shell-getenvs((&quot;PATH&quot; &quot;MANPATH&quot;))</div><div class="line">exec-path-from-shell-copy-envs((&quot;PATH&quot; &quot;MANPATH&quot;))</div><div class="line">exec-path-from-shell-initialize()</div><div class="line">(progn (exec-path-from-shell-initialize))</div><div class="line">...</div></pre></td></tr></table></figure><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>Emacs本质上是个操作系统,它有自己的环境变量.</p><p>所以为了让它可以使用宿主的<code>shell</code>,首先需要确保宿主和Emacs自身环境变量的一致性.</p><p><code>exec-path-from-shell</code> 就是一这么个<code>GNU Emacs</code>库,它将宿主的关键<code>SHELL</code>环境复制到EMACS的环境变量里,从而确保Emacs可以正常调用宿主机的<code>BASH</code>.</p><p>查看<code>exec-path-from-shell-printf</code>的代码:</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">(<span class="name">defun</span> exec-path-from-shell-printf (<span class="name">str</span> <span class="symbol">&amp;optional</span> args)</div><div class="line">  <span class="string">"Return the result of printing STR in the user's shell.</span></div><div class="line"><span class="string">  Executes $SHELL as interactive login shell.</span></div><div class="line"><span class="string">  STR is inserted literally in a single-quoted argument to printf,</span></div><div class="line"><span class="string">  and may therefore contain backslashed escape sequences understood</span></div><div class="line"><span class="string">  by printf.</span></div><div class="line"><span class="string">  ARGS is an optional list of args which will be inserted by printf</span></div><div class="line"><span class="string">  in place of any % placeholders in STR.  ARGS are not automatically</span></div><div class="line"><span class="string">  shell-escaped, so they may contain $ etc."</span></div><div class="line">  (<span class="name">let*</span> ((<span class="name">printf-bin</span> (<span class="name">or</span> (<span class="name">executable-find</span> <span class="string">"printf"</span>) <span class="string">"printf"</span>))</div><div class="line">         (<span class="name">printf-command</span></div><div class="line">          (<span class="name">concat</span> printf-bin</div><div class="line">                  <span class="string">" '__RESULT\\000"</span> str <span class="string">"' "</span></div><div class="line">                  (<span class="name">mapconcat</span> #'exec-path-from-shell--double-quote args <span class="string">" "</span>)))</div><div class="line">         (<span class="name">shell-args</span> (<span class="name">append</span> exec-path-from-shell-arguments</div><div class="line">                             (<span class="name">list</span> <span class="string">"-c"</span></div><div class="line">                                   (<span class="name">if</span> (<span class="name">exec-path-from-shell--standard-shell-p</span> (<span class="name">getenv</span> <span class="string">"SHELL"</span>))</div><div class="line">                                       printf-command</div><div class="line">                                     (<span class="name">concat</span> <span class="string">"sh -c "</span> (<span class="name">shell-quote-argument</span> printf-command))))))</div><div class="line">         (<span class="name">shell</span> (<span class="name">getenv</span> <span class="string">"SHELL"</span>)))</div></pre></td></tr></table></figure><p>结合出错堆栈分析,问题基本可以定位,即: <code>(getenv &quot;SHELL&quot;)</code>去获取”SHELL”的环境变量,返回为空.</p><p>接着来查看<code>getenv</code>方法,它通过调用<code>getenv-internal</code>用来获取系统<code>environment</code>的变量.</p><p>查看系统环境变量,<code>env|grep SHELL</code>,果然无值.</p><p>那么只需要设置Docker-Ubuntu16.04容器的<code>SHELL</code>环境变量到<code>env</code>里就可以了.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">echo &quot;export SHELL=/bin/bash&quot; &gt;&gt; ~/.bashrc</div><div class="line">source ~/.bashrc</div></pre></td></tr></table></figure><p>运行<code>emacs</code>,问题解决.<br>此时Dockerfile可以配置如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">RUN \</div><div class="line"> DEBIAN_FRONTEND=noninteractive apt-get update &amp;&amp; \</div><div class="line"> DEBIAN_FRONTEND=noninteractive apt-get -y install wget curl git emacs&amp;&amp; \</div><div class="line"> DEBIAN_FRONTEND=noninteractive apt-get -y autoremove &amp;&amp; \</div><div class="line"> DEBIAN_FRONTEND=noninteractive git <span class="built_in">clone</span> https://github.com/syl20bnr/spacemacs ~/.emacs.d &amp;&amp; \</div><div class="line"> DEBIAN_FRONTEND=noninteractive <span class="built_in">echo</span> <span class="string">"export SHELL=/bin/bash"</span> &gt;&gt; ~/.bashrc &amp;&amp; \</div><div class="line"> ...</div></pre></td></tr></table></figure><h1 id="疑问"><a href="#疑问" class="headerlink" title="疑问"></a>疑问</h1><p>为什么官方Ubuntu Docker镜像没有将SHELL加到环境变量里?</p><ol><li><p>有一点很明确,Docker不同于虚拟机,它的镜像文件确实需要保持精简,只需为容器保留必要的linux核心功能就可以了.</p><p>Docker官方也给出了,<code>-env</code>的选项命令,用于自行进行环境变量配置.<br>在Dockerfile中也可以使用<code>ENV</code>进行环境变量的配置,我们的Dockerfile可以写成如下的形式.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">RUN \</div><div class="line"> ...</div><div class="line"> DEBIAN_FRONTEND=noninteractive ENV SHELL /bin/bash</div><div class="line"> ...</div></pre></td></tr></table></figure></li><li><p>那么,这个Docker镜像连<code>$SHELL</code>,<code>$BASH</code>等环境变量都省略了,是否还有其他功能被阉割了呢?</p><p>确实是的,问题还很多.</p><p>比如Docker下的ubuntu有一个很大的问题,它的<code>PID1</code>是<code>bash</code>!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">root@0d9e754629e0:/<span class="comment"># ps</span></div><div class="line">  PID TTY          TIME CMD</div><div class="line">    1 ?        00:00:00 bash</div><div class="line">   37 ?        00:00:00 ps</div></pre></td></tr></table></figure><p>而完整的系统应该是<code>init</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">lizorn@lizorn:/etc$ ps aux</div><div class="line">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</div><div class="line">root         1  0.0  0.0 185604  6388 ?        Ss   10:39   0:01 /sbin/init splash</div><div class="line">root         2  0.0  0.0      0     0 ?        S    10:39   0:00 [kthreadd]</div></pre></td></tr></table></figure><p><code>PID1 init</code>是系统所有进程的祖先,同时它还负责接收和处理僵尸进程,<a href="https://blog.phusion.nl/2015/01/20/docker-and-the-pid-1-zombie-reaping-problem/" target="_blank" rel="external">the PID 1 zombie reaping problem</a>.</p><p>这个问题会导致docker-ubuntu系统有可能产生无法回收的僵尸进程,造成内存孤岛,浪费系统性能.需要额外的补丁程序来完成<code>PID1</code>任务的回收工作,修复该问题的轮子已经具备,你可以直接使用<a href="https://github.com/phusion/baseimage-docker" target="_blank" rel="external">phusion的baseimage</a>来制作Docker基础镜像文件.</p></li></ol><h1 id="附录-linux-环境变量"><a href="#附录-linux-环境变量" class="headerlink" title="附录: linux 环境变量"></a>附录: linux 环境变量</h1><h2 id="shell变量-amp-用户变量"><a href="#shell变量-amp-用户变量" class="headerlink" title="shell变量&amp;用户变量"></a>shell变量&amp;用户变量</h2><ul><li>set:显示当前shell的变量</li><li>env:显示当前用户的环境变量</li><li>export可将当前shell变量导出成用户变量.</li></ul><p><code>set</code>下的环境变量不等同于<code>env</code>下的用户变量,两者是有区分的,因为一个用户可以有多个<code>SHELL</code>,如<code>fish</code>,<code>tsh</code>等.</p><h2 id="linux-shell环境初始化流程"><a href="#linux-shell环境初始化流程" class="headerlink" title="linux shell环境初始化流程"></a>linux shell环境初始化流程</h2><p>Linux系统登录，<code>bash</code>其初始化过程依次加载如下文件(文件不存在就跳过):</p><p> <code>/etc/profile</code>-&gt;<code>/etc/profile.d</code>~<code>/.bash_profile</code>-&gt;<code>~/.bashrc</code>-&gt;<code>~/.bash_logout</code></p><ul><li>/etc/profile: 系统级用户环境变量.当用户第一次登录时,该文件被加载.设置命令行提示符<code>$PS</code>,并从/etc/profile.d目录的配置文件中搜集shell的设置.</li><li>/etc/bashrc: 系统级用户环境变量.当bash shell被打开时加载.</li><li>~/.bash_profile: 用户级环境变量.用户登录时加载,默认情况下,他设置一些环境变量,执行用户的.bashrc文件.</li><li>~/.bashrc: 用户级环境变量.该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时加载该文件.</li><li>~/.bash_logout:当每次退出系统(退出bash shell)时执行该文件.</li></ul>]]></content>
    
    <summary type="html">
    
      emacs使用多年,发现spacemacs的配置还算符合胃口,于是想做一个基于Ubuntu16.04的Docker镜像,以后就可以带着这粒胶囊行走天下了.没想到踩到一个坑...
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="docker" scheme="http://zfeiyu.com/tags/docker/"/>
    
      <category term="spacemacs" scheme="http://zfeiyu.com/tags/spacemacs/"/>
    
      <category term="emacs" scheme="http://zfeiyu.com/tags/emacs/"/>
    
      <category term="linux环境变量" scheme="http://zfeiyu.com/tags/linux%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>键盘键位映射</title>
    <link href="http://zfeiyu.com/2016/11/01/keymap/"/>
    <id>http://zfeiyu.com/2016/11/01/keymap/</id>
    <published>2016-11-01T00:21:30.000Z</published>
    <updated>2016-11-05T00:59:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>自从<code>HHKB</code>键盘败家卖了后,其他键盘一直用着不爽,只能稍微设置下,聊以自慰.</p><p>首先,<code>capslock</code>必须死,这么好的位置居然被这废材占据着.</p><h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h1><h2 id="capslock-gt-ctrl"><a href="#capslock-gt-ctrl" class="headerlink" title="capslock-&gt;ctrl"></a>capslock-&gt;ctrl</h2><p><code>sudo emacs /etc/default/keyboard</code></p><p>修改下面这一行：</p><p><code>XKBOPTIONS=&quot;ctrl:nocaps&quot;</code></p><p>重新配置系统键盘，全部选默认：</p><p><code>sudo dpkg-reconfigure keyboard-configuration</code></p><h1 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h1><h2 id="capslock-gt-ctrl-1"><a href="#capslock-gt-ctrl-1" class="headerlink" title="capslock-&gt;ctrl"></a>capslock-&gt;ctrl</h2><p><a href="https://technet.microsoft.com/en-us/sysinternals/bb897578.aspx?f=255&amp;MSPPError=-2147217396" target="_blank" rel="external">Ctrl2Cap</a></p><h1 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h1><h2 id="capslock-gt-ctrl-2"><a href="#capslock-gt-ctrl-2" class="headerlink" title="capslock-&gt;ctrl"></a>capslock-&gt;ctrl</h2><p> 打开<code>System Preferences</code> → <code>Keyboard</code> → <code>Modifier Keys</code></p>]]></content>
    
    <summary type="html">
    
      自从`HHKB`键盘败家卖了后,其他键盘一直用着不爽,只能稍微设置下,聊以自慰.
    
    </summary>
    
      <category term="杂货摊" scheme="http://zfeiyu.com/categories/%E6%9D%82%E8%B4%A7%E6%91%8A/"/>
    
    
      <category term="keymap" scheme="http://zfeiyu.com/tags/keymap/"/>
    
  </entry>
  
  <entry>
    <title>hadoop快速入门</title>
    <link href="http://zfeiyu.com/2016/10/27/hadoop-quick-start/"/>
    <id>http://zfeiyu.com/2016/10/27/hadoop-quick-start/</id>
    <published>2016-10-27T04:53:48.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是hadoop"><a href="#什么是hadoop" class="headerlink" title="什么是hadoop?"></a>什么是hadoop?</h1><p>Hadoop是一个由Apache基金会所开发的分布式系统基础架构，用户可以在不知道底层细节的情况下,将可自己的程序运行在分布式系统上,利用计算机集群对海量数据进行高速的数据运算和存储.</p><p>要学习hadoop,首先要了解它的核心设计:MapReduce和HDFS.</p><h2 id="HDFS"><a href="#HDFS" class="headerlink" title="HDFS"></a>HDFS</h2><p>HDFS(Hadoop Distributed File System，Hadoop分布式文件系统),是一个具备高度容错性的文件系统,可以部署在廉价的系统上.</p><h3 id="基本架构"><a href="#基本架构" class="headerlink" title="基本架构"></a>基本架构</h3><p><img src="/res/img/hadoop/hdfsarchitecture.png" alt=""></p><ul><li><code>Block</code>: 块文件,通常是64M.</li><li><code>DataNode</code>：用于存储Block块文件.</li><li><code>NameNode</code>: 保存整个文件系统的目录,文件和分布信息.指示文件是如何被拆分成block以及这些block都存储到了哪些DateNode节点上.通常只有一台,<code>2.X</code>版本提供了master-slave模式.</li></ul><h2 id="MapReduce"><a href="#MapReduce" class="headerlink" title="MapReduce"></a>MapReduce</h2><p>MapReduce是一种编程模型,用于大规模数据集(大于1TB)的并行运算.基本原理就是：分析大数据，然后析分成小块逐个分析，最后再将提取出来的数据汇总分析，最终获得我们想要的内容。</p><p>MapReduce操作的都是<key, value="">键值对上,大致流程如下:</key,></p><blockquote><p>(input) <k1, v1=""> -&gt; map -&gt; <k2, v2=""> -&gt; combine -&gt; <k2, v2=""> -&gt; reduce -&gt; <k3, v3=""> (output)</k3,></k2,></k2,></k1,></p></blockquote><h2 id="Apache-hadoop家族"><a href="#Apache-hadoop家族" class="headerlink" title="Apache hadoop家族"></a>Apache hadoop家族</h2><h3 id="基础成员"><a href="#基础成员" class="headerlink" title="基础成员"></a>基础成员</h3><ul><li>Hadoop Common</li><li>Hadoop Distributed File System (HDFS™)</li><li>Hadoop MapReduce</li></ul><h3 id="其他成员"><a href="#其他成员" class="headerlink" title="其他成员"></a>其他成员</h3><ul><li>Hadoop YARN: 用于工作调度和集群资源管理的框架.</li><li>Avro™: 是一个数据序列化系统,设计用于支持数据密集型,大批量数据交换的应用.Avro是新的数据序列化格式与传输工具,将逐步取代Hadoop原有的IPC机制.</li><li>Cassandra™:是一套开源分布式NoSQL数据库系统.</li><li>Chukwa™: 是一个开源的用于监控大型分布式系统的数据收集系统，它可以将各种各样类型的数据收集成适合Hadoop处理的文件,并保存在HDFS中供Hadoop进行各种MapReduce操作.</li><li>HBase™: 是一个高可靠性、高性能、面向列、可伸缩的分布式存储系统,利用HBase技术可在廉价PC Server上搭建起大规模结构化存储集群.</li><li>Hive™: 基于Hadoop的一个数据仓库工具,可以将结构化的数据文件映射为一张数据库表,通过类SQL语句快速实现简单的MapReduce统计,不必开发专门的MapReduce应用,十分适合数据仓库的统计分析.</li><li>Mahout™: 基于Hadoop的机器学习和数据挖掘的一个分布式框架.Mahout用MapReduce实现了部分数据挖掘算法,解决了并行挖掘的问题。</li><li>Pig™: Pig提供更高级的数据流语言，类似SQL的语言(Pig Latin),有效提高MapReduce编写的抽象表现能力.</li><li>Spark™: 一个新兴的大数据处理引擎,提供了一个集群的分布式抽象模型RDD(Resilient Distributed Dataset).支持的实际应用范围非常广,如:ETL,机器学习,图像处理等.</li><li>Tez™: 是Apache最新开源的支持DAG作业的计算框架,它直接源于MapReduce框架,核心思想是将Map和Reduce两个操作进一步拆分,即Map被拆分成Input、Processor、Sort、Merge和Output,Reduce被拆分成Input、Shuffle、Sort、Merge、Processor和Output等,这样,这些分解后的元操作可以任意灵活组合,产生新的操作,这些操作经过一些控制程序组装后,可形成一个大的DAG作业.</li><li>ZooKeeper™: 是一个为分布式应用所设计的分布的、开源的协调服务，它主要是用来解决分布式应用中经常遇到的一些数据管理问题,简化分布式应用协调及其管理的难度,提供高性能的分布式服务.</li></ul><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p><code>docker run -it invain/hadoop</code></p><h1 id="hadoop案例-统计词频"><a href="#hadoop案例-统计词频" class="headerlink" title="hadoop案例:统计词频"></a>hadoop案例:统计词频</h1><p>统计一个文本文件,一本书，或者一个web上各个单词出现的频率.</p><h2 id="WordCount-java源码"><a href="#WordCount-java源码" class="headerlink" title="WordCount.java源码"></a>WordCount.java源码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.util.StringTokenizer;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WordCount</span> </span>&#123;</div><div class="line"></div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">TokenizerMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">Object</span>, <span class="title">Text</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt;</span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> IntWritable one = <span class="keyword">new</span> IntWritable(<span class="number">1</span>);</div><div class="line">    <span class="keyword">private</span> Text word = <span class="keyword">new</span> Text();</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">map</span><span class="params">(Object key, Text value, Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</div><div class="line">      StringTokenizer itr = <span class="keyword">new</span> StringTokenizer(value.toString());</div><div class="line">      <span class="keyword">while</span> (itr.hasMoreTokens()) &#123;</div><div class="line">        word.set(itr.nextToken());</div><div class="line">        context.write(word, one);</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">IntSumReducer</span> <span class="keyword">extends</span> <span class="title">Reducer</span>&lt;<span class="title">Text</span>,<span class="title">IntWritable</span>,<span class="title">Text</span>,<span class="title">IntWritable</span>&gt; </span>&#123;</div><div class="line">    <span class="keyword">private</span> IntWritable result = <span class="keyword">new</span> IntWritable();</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reduce</span><span class="params">(Text key, Iterable&lt;IntWritable&gt; values,</span></span></div><div class="line"><span class="function"><span class="params">                        Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</div><div class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (IntWritable val : values) &#123;</div><div class="line">          sum += val.get();</div><div class="line">        &#125;</div><div class="line">        result.set(sum);</div><div class="line">        context.write(key, result);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">    Configuration conf = <span class="keyword">new</span> Configuration();</div><div class="line">    Job job = Job.getInstance(conf, <span class="string">"word count"</span>);</div><div class="line">    job.setJarByClass(WordCount.class);</div><div class="line">    job.setMapperClass(TokenizerMapper.class);</div><div class="line">    job.setCombinerClass(IntSumReducer.class);</div><div class="line">    job.setReducerClass(IntSumReducer.class);</div><div class="line">    job.setOutputKeyClass(Text.class);</div><div class="line">    job.setOutputValueClass(IntWritable.class);</div><div class="line">    FileInputFormat.addInputPath(job, <span class="keyword">new</span> Path(args[<span class="number">0</span>]));</div><div class="line">    FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> Path(args[<span class="number">1</span>]));</div><div class="line">    System.exit(job.waitForCompletion(<span class="keyword">true</span>) ? <span class="number">0</span> : <span class="number">1</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hadoop com.sun.tools.javac.Main WordCount.java</div><div class="line">jar cf wc.jar WordCount*.class</div></pre></td></tr></table></figure><h2 id="创建FS"><a href="#创建FS" class="headerlink" title="创建FS"></a>创建FS</h2><p>在hdfs上的用户目录下创建输入/输出文件的文件夹.</p><p><code>hadoop fs -mkdir -p /user/{whoami}/wordcount/input</code></p><p>下本书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir -p ~/tmp/book/</div><div class="line">cd ~/tmp/book</div><div class="line">wget http://www.gutenberg.org/files/5000/5000-8.txt</div></pre></td></tr></table></figure><p>将书放到HDFS上</p><p><code>hadoop fs -put ~/tmp/book/*.txt /user/${whoami}/input</code></p><h2 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hadoop jar wc.jar WordCount /user/$&#123;whoami&#125;/wordcount/input /user/$&#123;whoami&#125;/wordcount/output</div></pre></td></tr></table></figure><p>查看解析内容<br><code>hadoop fs -cat /user/${whoami}/wordcount/output/part-r-00000</code></p><h1 id="hadoop-steaming"><a href="#hadoop-steaming" class="headerlink" title="hadoop steaming"></a>hadoop steaming</h1><p>Hadoop是使用Java语言编写的,所以最直接的方式的就是使用Java语言来实现Mapper和Reducer,然后配置MapReduce Job,提交到集群计算环境来完成计算.<br>hadoop也为其它语言，如C++、Shell、Python、 Ruby、PHP、Perl等提供了支持，这个工具就是Hadoop Streaming.</p><h2 id="wordcount的python实现"><a href="#wordcount的python实现" class="headerlink" title="wordcount的python实现"></a>wordcount的python实现</h2><h3 id="mapper-py源码"><a href="#mapper-py源码" class="headerlink" title="mapper.py源码"></a>mapper.py源码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_input</span><span class="params">(file)</span>:</span></div><div class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> file:</div><div class="line">        <span class="keyword">yield</span> line.split()</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(separator=<span class="string">'\t'</span>)</span>:</span></div><div class="line">    data = read_input(sys.stdin)</div><div class="line">    <span class="keyword">for</span> words <span class="keyword">in</span> data:</div><div class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> words:</div><div class="line">            <span class="keyword">print</span> <span class="string">"%s%s%d"</span> % (word, separator, <span class="number">1</span>)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure><h3 id="reducer-py"><a href="#reducer-py" class="headerlink" title="reducer.py"></a>reducer.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="keyword">from</span> operator <span class="keyword">import</span> itemgetter</div><div class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> groupby</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_mapper_output</span><span class="params">(file, separator = <span class="string">'\t'</span>)</span>:</span></div><div class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> file:</div><div class="line">        <span class="keyword">yield</span> line.rstrip().split(separator, <span class="number">1</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(separator = <span class="string">'\t'</span>)</span>:</span></div><div class="line">    data = read_mapper_output(sys.stdin, separator = separator)</div><div class="line">    <span class="keyword">for</span> current_word, group <span class="keyword">in</span> groupby(data, itemgetter(<span class="number">0</span>)):</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            total_count = sum(int(count) <span class="keyword">for</span> current_word, count <span class="keyword">in</span> group)</div><div class="line">            <span class="keyword">print</span> <span class="string">"%s%s%d"</span> % (current_word, separator, total_count)</div><div class="line">        <span class="keyword">except</span> valueError:</div><div class="line">            <span class="keyword">pass</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>可以写个sh脚本运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">hadoop jar $STREAM  \</div><div class="line">-files ./mapper.py,./reducer.py \</div><div class="line">-mapper ./mapper.py \</div><div class="line">-reducer ./reducer.py \</div><div class="line">-input /user/$&#123;whoami&#125;/input/ \</div><div class="line">-output ~/output</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      hadoop不只是hadoop而已
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="大数据" scheme="http://zfeiyu.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="hadoop" scheme="http://zfeiyu.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Docker环境</title>
    <link href="http://zfeiyu.com/2016/10/27/docker-developer-env/"/>
    <id>http://zfeiyu.com/2016/10/27/docker-developer-env/</id>
    <published>2016-10-27T03:03:37.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>如今技术革新非常快,搭建环境也日趋繁杂.我是个爱好折腾之人,时不时的总想把玩下新的技术,每天在win10,ubuntu,mac系统间来回切换,感谢Docker,救我于水火.</p><h1 id="基础镜像"><a href="#基础镜像" class="headerlink" title="基础镜像"></a>基础镜像</h1><p>自己裁剪一个baseImage,带emacs编辑器.编写Dockerfile,并编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/LiZoRN/DockerBaseImage.git</div><div class="line"><span class="built_in">cd</span> DockerBseImage</div><div class="line">docker build -t invain/ubuntu .</div></pre></td></tr></table></figure><p>将镜像文件push到<code>Docker hub</code></p><p><code>docker push invain/ubuntu</code></p><p>其他环境下就可以直接使用</p><p><code>docker pull invain/ubuntu</code></p><p><em>注意</em>: Docker镜像共享，不建议直接拿Dockerfile build生产, 而应从Docker镜像库里拉,避免镜像Build的过程中引入编译环境差异.</p><h1 id="Hadoop环境搭建-单站"><a href="#Hadoop环境搭建-单站" class="headerlink" title="Hadoop环境搭建(单站)"></a>Hadoop环境搭建(单站)</h1><h2 id="创建hadoop用户"><a href="#创建hadoop用户" class="headerlink" title="创建hadoop用户"></a>创建hadoop用户</h2><p>增加hadoop用户，授予管理员权限，并登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sudo useradd -m hadoop</div><div class="line">$ sudo passwd hadoop</div><div class="line">$ sudo adduser hadoop sudo</div><div class="line">$ sudo su hadoop</div></pre></td></tr></table></figure><h2 id="安装并配置SSH"><a href="#安装并配置SSH" class="headerlink" title="安装并配置SSH"></a>安装并配置SSH</h2><p>安装openssh</p><p><code>$ sudo apt-get install openssh-server</code></p><p>启动</p><p><code>$ sudo /etc/init.d/ssh start</code></p><p>设置免密码登录，生成私钥和公钥,并将公钥追加到 authorized_keys中，它为用户保存所有允许登录到ssh客户端用户的公钥内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -P <span class="string">""</span></div><div class="line">$  cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</div></pre></td></tr></table></figure><h2 id="安装Java环境"><a href="#安装Java环境" class="headerlink" title="安装Java环境"></a>安装Java环境</h2><p><code>sudo apt-get install openjdk-7-jdk</code></p><p>获取java安装目录.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ update-alternatives --config java</div><div class="line">There is only one alternative <span class="keyword">in</span> link group java (providing /usr/bin/java): /usr</div><div class="line">/lib/jvm/java-7-openjdk-amd64/jre/bin/java</div><div class="line">Nothing to configure.</div></pre></td></tr></table></figure><p><code>~/.bashrc</code>中写入JAVA_HOME路径,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=JDK安装路径</div></pre></td></tr></table></figure><h2 id="安装Hadoop"><a href="#安装Hadoop" class="headerlink" title="安装Hadoop"></a>安装Hadoop</h2><p>安装hadoop,如2.7.3版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget http://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-2.7.3/hadoop-2.7.3.tar.gz</div><div class="line">sudo tar xzf hadoop-2.7.3.tar.gz</div><div class="line">sudo mv hadoop-2.7.3 /usr/<span class="built_in">local</span>/hadoop</div></pre></td></tr></table></figure><p>配置Hadoop的环境变量</p><p>给你的<code>~/bashrc</code>添加如下内容.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#HADOOP VARIABLES START</span></div><div class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64</div><div class="line"><span class="built_in">export</span> HADOOP_HOME=/usr/<span class="built_in">local</span>/hadoop</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HADOOP_HOME</span>/bin</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HADOOP_HOME</span>/sbin</div><div class="line"><span class="built_in">export</span> HADOOP_MAPRED_HOME=<span class="variable">$HADOOP_HOME</span></div><div class="line"><span class="built_in">export</span> HADOOP_COMMON_HOME=<span class="variable">$HADOOP_HOME</span></div><div class="line"><span class="built_in">export</span> HADOOP_HDFS_HOME=<span class="variable">$HADOOP_HOME</span></div><div class="line"><span class="built_in">export</span> YARN_HOME=<span class="variable">$HADOOP_HOME</span></div><div class="line"><span class="built_in">export</span> HADOOP_COMMON_LIB_NATIVE_DIR=<span class="variable">$HADOOP_HOME</span>/lib/native</div><div class="line"><span class="built_in">export</span> HADOOP_OPTS=<span class="string">"-Djava.library.path=<span class="variable">$HADOOP_HOME</span>/lib"</span></div><div class="line"><span class="built_in">export</span> STREAM=<span class="variable">$HADOOP_HOME</span>/share/hadoop/tools/lib/hadoop-streaming-*.jar</div><div class="line"><span class="built_in">export</span> HADOOP_CLASSPATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib/tools.jar</div><div class="line"><span class="comment">#HADOOP VARIABLES END</span></div></pre></td></tr></table></figure><p>验证hadoop是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">hadoop@8bbae082ad69:~$ hadoop version</div><div class="line">Hadoop 2.7.3</div><div class="line">Subversion https://git-wip-us.apache.org/repos/asf/hadoop.git -r baa91f7c6bc9cb92be5982de4719c1c8af91ccff</div><div class="line">Compiled by root on 2016-08-18T01:41Z</div><div class="line">Compiled with protoc 2.5.0</div><div class="line">From <span class="built_in">source</span> with checksum 2e4ce5f957ea4db193bce3734ff29ff4</div><div class="line">This <span class="built_in">command</span> was run using /usr/<span class="built_in">local</span>/hadoop/share/hadoop/common/hadoop-common-2.7.3.jar</div></pre></td></tr></table></figure><p>将镜像push到Docker hub</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">docker commit 8bbae082ad69 invain/hadoop</div><div class="line">docker push invain/hadoop</div></pre></td></tr></table></figure><h1 id="spark"><a href="#spark" class="headerlink" title="spark"></a>spark</h1><p>运行一个java docker容器.</p><p><code>docker run -it invain/java</code></p><p>下载spark包.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget http://mirrors.hust.edu.cn/apache/spark/spark-2.0.1/spark-2.0.1-bin-hadoop2.7.tgz</div><div class="line">sudo tar xzf spark-2.0.1-bin-hadoop2.7.tgz</div><div class="line">sudo mv spark-2.0.1-bin-hadoop2.7 /usr/local/spark</div></pre></td></tr></table></figure><p>配置好环境变量.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> SPARK_HOME=/usr/<span class="built_in">local</span>/spark</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$SPARK_HOME</span>/bin:<span class="variable">$PATH</span></div></pre></td></tr></table></figure><p>跑个小小示例.<br>创建个文本文件,如<code>hellospark.txt</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hello world!</div><div class="line">hello spark!</div></pre></td></tr></table></figure><p>运行spark的python交互式控制台,<code>pyspark</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">hadoop@4532e4bdaa51:~$ pyspark</div><div class="line">Python 2.7.6 (default, Jun 22 2015, 17:58:13)</div><div class="line">[GCC 4.8.2] on linux2</div><div class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</div><div class="line">Using Spark&apos;s default log4j profile: org/apache/spark/log4j-defaults.properties</div><div class="line">Setting default log level to &quot;WARN&quot;.</div><div class="line">To adjust logging level use sc.setLogLevel(newLevel).</div><div class="line">16/10/28 02:10:51 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</div><div class="line">Welcome to</div><div class="line">      ____              __</div><div class="line">     / __/__  ___ _____/ /__</div><div class="line">    _\ \/ _ \/ _ `/ __/  &apos;_/</div><div class="line">   /__ / .__/\_,_/_/ /_/\_\   version 2.0.1</div><div class="line">      /_/</div><div class="line"></div><div class="line">Using Python version 2.7.6 (default, Jun 22 2015 17:58:13)</div><div class="line">SparkSession available as &apos;spark&apos;.</div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure><p>使用textFile加载文本到RDD,进行’wordcount’.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; text = sc.textFile(<span class="string">"hellospark.txt"</span>)</div><div class="line">&gt;&gt;&gt; counts = text.flatMap(lambda line: line.split(<span class="string">" "</span>)).map(lambda word: (word,1)).reduceByKey(lambda x,y: x + y)</div></pre></td></tr></table></figure></p><p>调用saveAsTextFile,分布式作业开始了…<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">counts.saveAsTextFile(&quot;hellospark_out&quot;)</div></pre></td></tr></table></figure></p><p>可以在工作台输出目录里查看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">hadoop@4532e4bdaa51:~$ cat hellospark_out/part-00000</div><div class="line">(u&apos;&apos;, 1)</div><div class="line">(u&apos;spark!&apos;, 1)</div><div class="line">(u&apos;world!&apos;, 1)</div><div class="line">(u&apos;hello&apos;, 2)</div></pre></td></tr></table></figure></p><h1 id="tensorflow"><a href="#tensorflow" class="headerlink" title="tensorflow"></a>tensorflow</h1><p><code>docker run -it b.gcr.io/tensorflow/tensorflow</code></p><h1 id="Docker-hub"><a href="#Docker-hub" class="headerlink" title="Docker hub"></a>Docker hub</h1><p>需要什么库可以从<a href="https://hub.docker.com/explore/" target="_blank" rel="external">docker hub</a>找.</p><p>Docker hub是一个类似Github一样的地方,只不过前者是一个镜像仓库.</p><p>docker可以让你的环境配置异常简单，通常你只需要执行一个命令.</p><p><em>Mysql</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker run -p 3306:3306 --name username -e MYSQL_ROOT_PASSWORD=password -d mysql:tag</div></pre></td></tr></table></figure><p><em>mongo</em></p><p><code>docker run --name some-mongo -d mongo</code></p><p><em><a href="https://hub.docker.com/_/oraclelinux/" target="_blank" rel="external">Oracle</a></em></p>]]></content>
    
    <summary type="html">
    
      如今技术革新非常快,搭建环境也日趋繁杂.我是个爱好折腾之人,时不时的总想把玩下新的技术,每天在win10,ubuntu,mac系统间来回切换,感谢Docker,救我于水火.
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="开发环境" scheme="http://zfeiyu.com/tags/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
      <category term="docker" scheme="http://zfeiyu.com/tags/docker/"/>
    
      <category term="docker base image" scheme="http://zfeiyu.com/tags/docker-base-image/"/>
    
      <category term="hadoop" scheme="http://zfeiyu.com/tags/hadoop/"/>
    
      <category term="spark" scheme="http://zfeiyu.com/tags/spark/"/>
    
      <category term="tesoflow" scheme="http://zfeiyu.com/tags/tesoflow/"/>
    
  </entry>
  
  <entry>
    <title>代码的味道</title>
    <link href="http://zfeiyu.com/2016/10/25/Taste-of-code/"/>
    <id>http://zfeiyu.com/2016/10/25/Taste-of-code/</id>
    <published>2016-10-25T12:44:06.000Z</published>
    <updated>2016-11-05T00:59:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/res/img/tasteofcode/codereview.png" alt=""></p><h1 id="代码的味道"><a href="#代码的味道" class="headerlink" title="代码的味道"></a>代码的味道</h1><h2 id="你的代码臭不可闻，为什么？"><a href="#你的代码臭不可闻，为什么？" class="headerlink" title="你的代码臭不可闻，为什么？"></a>你的代码臭不可闻，为什么？</h2><ul><li>工期太赶</li><li>前任的坑</li><li>还是…水平未到？</li></ul><p>很多程序员会给自己的代码找很多借口，我认为糟糕代码的产生除了上述原因外，主要是思想问题，要摒弃糟糕的代码，让代码变得整洁，必须要先弄明白一件事情：大家写程序，你的客户是谁?</p><h2 id="代码的表现力"><a href="#代码的表现力" class="headerlink" title="代码的表现力"></a>代码的表现力</h2><blockquote><p>“程序写出来是给人看的,附带能在机器上运行. “</p></blockquote><p>代码的表现力主要体现在两个方面:</p><ul><li>软件的部分功能就是解释自身,为了写出优秀的软件,你必须假定用户对你的软件基本上一无所知.</li><li>源代码也应该可以自己解释自己,你需要保证源代码自身的可观赏性.</li></ul><p>说白了，编程不是简单的完成一次功能交付，代码的表现形式不仅仅是产品本身，还包括代码自己。也就是说在你充分的实现‘功能客户’的需求的同时，你还需要满足‘code reviewer’的胃口。</p><p>我们就需要让代码变的整洁。</p><h3 id="什么是整洁的代码"><a href="#什么是整洁的代码" class="headerlink" title="什么是整洁的代码?"></a>什么是整洁的代码?</h3><blockquote><p>我喜欢优雅和高效的代码.代码逻辑应当直截了当,叫缺陷难以隐藏;尽量减少依赖关系,使之便于维护;依据某种分层战略完善错误处理代码;性能调至最优,省得引诱别人做没规矩的优化,搞出一堆换乱来.整洁的代码只做好一件事.</p><footer><strong>Bjarne Shroustrup</strong><cite>C++程序设计语言</cite></footer></blockquote><p>C++之父Bjarne认为代码应该是优雅而高效的.</p><blockquote><p>整洁的代码简单直接;整洁的代码如同优美的散文;整洁的代码从不隐藏设计者的意图,充满了干净利落的抽象和直截了当的控制语句.</p><footer><strong>rady Booch</strong><cite>面向对象分析与设计</cite></footer></blockquote><p>编程是一门技艺，代码是一种艺术，很难有语言表达。我摘录了《clean code》书中‘味道与启发’这一章节部分清单，进行了修整和梳理，清单里的代码会让你非常不舒服，清单的内容需要持续维护和更新。</p><h1 id="命名问题"><a href="#命名问题" class="headerlink" title="命名问题"></a>命名问题</h1><h2 id="命名要具备描述性-避免歧义"><a href="#命名要具备描述性-避免歧义" class="headerlink" title="命名要具备描述性,避免歧义"></a>命名要具备描述性,避免歧义</h2><ul><li>名副其实, 好的命名不需要额外的注释</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> d; <span class="comment">// 消逝的时间,以日计  ----bad</span></div><div class="line"><span class="keyword">int</span> elapsedTimeInDays; <span class="comment">//  ----good</span></div></pre></td></tr></table></figure><ul><li>避免误导</li></ul><p>必须避免留下隐藏代码本意的错误线索,避免使用与本意相悖的词,如系统预留字段要尽量避免,歧义的缩写也应当避免.<br>比如用<code>accountList</code>表示一组账号，会有歧义，这是是List类型? 用<code>accountGroup</code>则能更好的表示。</p><ul><li>命名要有明显的区别</li></ul><p>以下的方法很难区分具体含义：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">getActiveCustomer();</div><div class="line">getActiveCustomers();</div><div class="line">getActiveCustomerInfo()</div></pre></td></tr></table></figure></p><ul><li>命名要具备可读性</li></ul><p>命名通常要用于交流和沟通，需要具备基本的口语习惯。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> Date modymdhms; <span class="comment">//bad</span></div><div class="line"><span class="keyword">private</span> Date modificationTimestamp; /good</div></pre></td></tr></table></figure></p><ul><li>类名使用名词,方法名使用动词.</li></ul><h2 id="名称应与抽象层级相符"><a href="#名称应与抽象层级相符" class="headerlink" title="名称应与抽象层级相符."></a>名称应与抽象层级相符.</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Modem</span> </span>&#123;</div><div class="line">  <span class="function"><span class="keyword">boolean</span> <span class="title">dial</span><span class="params">(String phoneNumber)</span></span>;<span class="comment">//应修改为 boolean connect(String phoneNumber);</span></div><div class="line">  <span class="function"><span class="keyword">boolean</span> <span class="title">disconnect</span><span class="params">()</span></span>;</div><div class="line">  <span class="function"><span class="keyword">boolean</span> <span class="title">send</span><span class="params">(<span class="keyword">char</span> c)</span></span>;</div><div class="line">  <span class="function"><span class="keyword">char</span> <span class="title">recv</span><span class="params">()</span></span>;</div><div class="line">  <span class="function">String <span class="title">getConnectedPhoneNumber</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="尽可能使用标准命名法"><a href="#尽可能使用标准命名法" class="headerlink" title="尽可能使用标准命名法."></a>尽可能使用标准命名法.</h2><ul><li>如果名称基于现有的约定或用法,命名就比较容易理解</li><li>命名要遵循专业领域的命名</li><li>命名要遵循团队的编码规范</li></ul><h2 id="名称的长度应与作用范围的广泛度相关"><a href="#名称的长度应与作用范围的广泛度相关" class="headerlink" title="名称的长度应与作用范围的广泛度相关."></a>名称的长度应与作用范围的广泛度相关.</h2><ul><li>对于较小的作用范围,可以用很短的名称,而对于较大作用范围就该用较长的名称.</li><li>作用范围在5行之内,i和j之类的变量名没有问题,如果范围变大,需要加长命名长度,用更有意义的命名.</li></ul><h2 id="避免编码"><a href="#避免编码" class="headerlink" title="避免编码."></a>避免编码.</h2><p>不应该在名称中包括类型或者作用范围信息，以下命名方法均可以考虑废弃：</p><ul><li>匈牙利标记法: <code>cClass</code>, <code>init</code>,<code>intNUmber</code>;</li><li>成员前缀: <code>private String m_member;</code></li><li>接口: 接口已I开头，<code>IInterface</code></li></ul><h2 id="名称应说明附加功能和副作用"><a href="#名称应说明附加功能和副作用" class="headerlink" title="名称应说明附加功能和副作用"></a>名称应说明附加功能和副作用</h2><ul><li>命名应该说明函数,变量或类的一切信息,不要用名称掩蔽副作用</li><li>不使用简单的动词来描述不止做了一个简单动作的函数.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> ObjectOutputStream <span class="title">getOos</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">     <span class="keyword">if</span> (m_oos == <span class="keyword">null</span>) &#123;</div><div class="line">         m_oos = <span class="keyword">new</span> ObjectOutputStream(m_socket.getOutputStream());</div><div class="line">     &#125;</div><div class="line">     <span class="keyword">return</span> m_oos;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>getOos</code>应改为<code>createOrReturnOos</code></p><h1 id="注释问题"><a href="#注释问题" class="headerlink" title="注释问题"></a>注释问题</h1><h2 id="不恰当的注释"><a href="#不恰当的注释" class="headerlink" title="不恰当的注释."></a>不恰当的注释.</h2><p>注释只应该描述相关代码和设计的技术信息.<br>如描述一些修改记录,问题追踪等是不恰当的注释,这些注释过时且无实际意义，会扰乱和降低阅读体验.<br>这些工作需要交给版本能控制工具。</p><h2 id="废弃的注释"><a href="#废弃的注释" class="headerlink" title="废弃的注释."></a>废弃的注释.</h2><p>注释也需要维护,过时,无关或不正确的注释会引起歧义并影响代码的可读性,需第一时间删除或更新.</p><h2 id="冗余注释"><a href="#冗余注释" class="headerlink" title="冗余注释."></a>冗余注释.</h2><p>代码已经充分自我描述了,那么注释就是冗余的. 注释应该是代码未能涉及信息的补充.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">i++;  <span class="comment">// increment i</span></div></pre></td></tr></table></figure><h2 id="坏注释"><a href="#坏注释" class="headerlink" title="坏注释."></a>坏注释.</h2><p>注释也是代码的一部分,要保持简洁和语句通顺,别在里面闲扯.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">I fear that I will always be A lonely number like root three</span></div><div class="line"><span class="comment">A three is all that's good and right</span></div><div class="line"><span class="comment">Why must my three keep out of sight Beneath a vicious square-root sign?</span></div><div class="line"><span class="comment">I wish instead I were a nine</span></div><div class="line"><span class="comment">For nine could thwart this evil trick With just some quick arithmetic</span></div><div class="line"><span class="comment">I know I'll never see the sun</span></div><div class="line"><span class="comment">As 1.7321...</span></div><div class="line"><span class="comment">Such is my reality A sad irrationality</span></div><div class="line"><span class="comment">When,hark, just what is this I see?</span></div><div class="line"><span class="comment">Another square root of a three</span></div><div class="line"><span class="comment">Has quietly come waltzing by</span></div><div class="line"><span class="comment">Together now we multiply</span></div><div class="line"><span class="comment">To form a number we prefer</span></div><div class="line"><span class="comment">Rejoicing as an integer</span></div><div class="line"><span class="comment">We break free from our mortal bonds</span></div><div class="line"><span class="comment">And with a wave of magic wands</span></div><div class="line"><span class="comment">Our square-root signs become unglued</span></div><div class="line"><span class="comment">And love for me has been renewed</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">double</span> number = Math.sqrt(<span class="number">3</span>)*Math.sqrt(<span class="number">3</span>);</div></pre></td></tr></table></figure><h2 id="废弃的代码"><a href="#废弃的代码" class="headerlink" title="废弃的代码."></a>废弃的代码.</h2><p>不应该出现注释的代码, 注释掉的代码需要及时删除,版本控制系统会记录没一次的修改,不需要通过注释的形式.</p><h1 id="一般性问题"><a href="#一般性问题" class="headerlink" title="一般性问题"></a>一般性问题</h1><h2 id="理所当然的行为未被实现"><a href="#理所当然的行为未被实现" class="headerlink" title="理所当然的行为未被实现."></a>理所当然的行为未被实现.</h2><p>根据”最小惊异原则”,函数或类应该实现用户或程序员有理由期待的行为.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Day day = DayDate.StringToDay(String dayName);</div></pre></td></tr></table></figure><p>我们期望字符串Monday转化为Day类型的<code>Day.MONDAY</code>，也期望可以转化为常用缩写的<code>Day.MON</code>,还期望可以忽略大小写,<code>Day.mon</code>，这个再正常不过了.<br>还比如，一个EXCEL的字段解析,一次web页面的字符串输入，至少要保证忽略两边的空格.</p><h2 id="不正确的边界行为"><a href="#不正确的边界行为" class="headerlink" title="不正确的边界行为."></a>不正确的边界行为.</h2><p>单元测试需要追索每种边界条件,并编写测试.</p><h2 id="忽略安全"><a href="#忽略安全" class="headerlink" title="忽略安全."></a>忽略安全.</h2><p>不要关闭编译器的告警,不要忽略编译告警,甚至可以引入**Lint等语法静态编译校验工具来提高代码质量.</p><h2 id="重复"><a href="#重复" class="headerlink" title="重复."></a>重复.</h2><p>牢记<em>DRY</em>原则(Don’t Repeat Yourself). 发现重复代码就表示遗漏了抽象.<code>复制粘贴</code>式的编码会造成大量的重复,你需要不断的重构，将重复的代码叠放成抽象对象.</p><h2 id="代码出现在错误的抽象层级上"><a href="#代码出现在错误的抽象层级上" class="headerlink" title="代码出现在错误的抽象层级上."></a>代码出现在错误的抽象层级上.</h2><p>良好的软件设计要求将代码,文件,组件和模块，根据层级分离,将它们放到不同的位置.</p><h2 id="基类依赖于派生类"><a href="#基类依赖于派生类" class="headerlink" title="基类依赖于派生类."></a>基类依赖于派生类.</h2><p>基类不应该依赖派生类,抽象类不依赖于实体类，这是面向对象设计的基本准则，篇幅有限，具体详细查看设计模式.</p><h2 id="信息过多"><a href="#信息过多" class="headerlink" title="信息过多"></a>信息过多</h2><ul><li>设计良好的模块有非常小的接口,耦合度低.</li><li>限制类或模块中暴露的接口数量.类中的方法越少越好.函数知道的变量越少越好.</li><li>隐藏模块和类中的数据和工具函数,隐藏常量和你的临时变量,不要创建有大量方法或大量实体变量的类,保持接口紧凑.</li></ul><h2 id="混淆视听"><a href="#混淆视听" class="headerlink" title="混淆视听"></a>混淆视听</h2><p>未被执行的代码,没有用到的变量,没有信息量的注释等需要尽早删除,保持源文件整洁和良好.</p><h2 id="垂直分割"><a href="#垂直分割" class="headerlink" title="垂直分割."></a>垂直分割.</h2><ul><li>变量和函数应该在靠近被使用的地方定义.</li><li>本地变量应该正好在其首次被使用的位置上面声明,垂直距离要短.</li><li>私有函数应该刚好在其首次被使用的位置下面定义.</li></ul><h2 id="前后不一致"><a href="#前后不一致" class="headerlink" title="前后不一致."></a>前后不一致.</h2><p>命名要保持一致性.如果在特定函数中用名为response的变量来持有HttpServletResponse对象,则在其他用到该对象的地方也使用response变量名.</p><h2 id="设计耦合"><a href="#设计耦合" class="headerlink" title="设计耦合"></a>设计耦合</h2><ul><li>不相互依赖的东西不该耦合.例如,普通的enum不应该包含在特殊类里,否则使用这些enum就需要了解这个特殊类.</li><li>花点时间设计代码结构,研究应该在什么地方声明函数,常量和变量.不要为了方便而随手放置,放置后又置之不理.</li></ul><h2 id="隐晦的意图"><a href="#隐晦的意图" class="headerlink" title="隐晦的意图."></a>隐晦的意图.</h2><ul><li>代码尽可能具有表达力.</li><li>短小紧凑的代码不一定是最好的代码,魔法数字应该拆分到具备解释性的变量里.如下代码你能明白什么意思吗？</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> init <span class="title">m_otCalc</span><span class="params">()</span> </span>&#123;</div><div class="line">     <span class="keyword">return</span> iThsWkd * iThsRte + (<span class="keyword">int</span>) Math.round(<span class="number">0.5</span> * iThsRte * Math.max(<span class="number">0</span>, iThsWkd - <span class="number">400</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="代码位置错误"><a href="#代码位置错误" class="headerlink" title="代码位置错误."></a>代码位置错误.</h2><p>开发人员做出的最重要决定之一就是在哪里放代码. 比如做一个考勤模块的功能,可以在打印报表的代码中做工作时间统计,或者在刷卡代码中保留一份工作时间记录.<br>这个时候最小惊异原则就起了作用.代码应该放在读者自然而然的地方，期待它所在的地方，就和老婆一样，每天早上醒来就在边上.</p><p>所以说编程其实是一种艺术行为. PI应该出现在声明三角函数的地方，而不是和一只老虎困在大海里.</p><h2 id="不恰当的静态方法"><a href="#不恰当的静态方法" class="headerlink" title="不恰当的静态方法."></a>不恰当的静态方法.</h2><ul><li>通常应该倾向于选用非静态方法,如果需要静态函数,确保不会让它有多态行为.</li><li><code>Math.max(double a, double)</code>是个良好的静态方法,因为它并不在需要在的那个实体上运作.</li></ul><h2 id="使用解释性变量"><a href="#使用解释性变量" class="headerlink" title="使用解释性变量."></a>使用解释性变量.</h2><p>和G16类同,使用解释性变量,只要把计算过程打散成一系列良好命名的中间值,就可以提高代码的可读性,</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Matcher match = headerPattern.matcher(line);</div><div class="line"><span class="keyword">if</span>(match.find())&#123;</div><div class="line">     String key = match.gourp(<span class="number">1</span>);</div><div class="line">     String value = match.group(<span class="number">2</span>);</div><div class="line">     headers.put(key.toLowerCase(), value);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="函数名称应该表达其行为"><a href="#函数名称应该表达其行为" class="headerlink" title="函数名称应该表达其行为."></a>函数名称应该表达其行为.</h2><p>如果必须要通过查看函数的实现(或文档)才知道它是做什么的,那是时候该换个更好的函数名了.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Date newDate = date.add(<span class="number">5</span>);</div></pre></td></tr></table></figure><p>从函数调用中看不出函数的行为,如果是添加5天并修改日期,那么命名需要调整为increaseByDays.</p><h2 id="理解算法"><a href="#理解算法" class="headerlink" title="理解算法."></a>理解算法.</h2><ul><li>很多可笑代码的出现,是因为没花时间去理解公式和算法,硬塞进足够的if语句和标示,让系统勉强运作.</li><li>在完成某个函数之前,要确认自己完全理解了它是怎么工作的,只有理解了公式,才能更好的进行优化.</li></ul><h2 id="遵循标准约定"><a href="#遵循标准约定" class="headerlink" title="遵循标准约定."></a>遵循标准约定.</h2><p>每个团队都应遵循基于通用行业规范的一套编码标准.</p><h2 id="魔法数"><a href="#魔法数" class="headerlink" title="魔法数."></a>魔法数.</h2><p>用常量代替魔法数字.</p><h2 id="封装条件语句"><a href="#封装条件语句" class="headerlink" title="封装条件语句."></a>封装条件语句.</h2><p>如果没有if或while语句的上下文,布尔逻辑就难以理解,应该把解释了条件意图的函数抽离出来.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (timer.hasExpired() &amp;&amp; !timer.isRecurrent()) <span class="comment">//bad</span></div></pre></td></tr></table></figure><p>换成</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (shouldBeDeleted(timer)) <span class="comment">//good</span></div></pre></td></tr></table></figure><h2 id="避免否定性条件"><a href="#避免否定性条件" class="headerlink" title="避免否定性条件."></a>避免否定性条件.</h2><p>人的逆向思维能力一般都比较差，否定式要比肯定式难明白一些.所以,尽可能将条件表示为肯定形式.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (!buffer.shouldNotompact())  <span class="comment">//bad</span></div></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (buffer.shouldCompact())  <span class="comment">//good</span></div></pre></td></tr></table></figure><h2 id="函数只该做一件事"><a href="#函数只该做一件事" class="headerlink" title="函数只该做一件事."></a>函数只该做一件事.</h2><p>遵循职责单一原则.以下的代码完成了太多的事情，我们需要拆分.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pay</span><span class="params">()</span> </span>&#123;</div><div class="line">     <span class="keyword">for</span> (Employee e : employees) &#123;</div><div class="line">         <span class="keyword">if</span> (e.isPayday()) &#123;</div><div class="line">              Money pay = e.calculatePay();</div><div class="line">               e.deliverPay(pay)</div><div class="line">          &#125;</div><div class="line">     &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>遍历雇员<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pay</span><span class="params">()</span> </span>&#123;</div><div class="line">     <span class="keyword">for</span> (Employee e : employees) &#123;</div><div class="line">          payIfNecessary(e);</div><div class="line">     &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>检查是否该给雇员付工资<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">payIfNecessary</span><span class="params">(Employee e)</span> </span>&#123;</div><div class="line">     <span class="keyword">if</span> (e.isPayday())&#123;</div><div class="line">         calculateAndDeliverPay(e);</div><div class="line">     &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>给雇员付工资<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">caculateAndDeliverPay</span><span class="params">(Employee e)</span> </span>&#123;</div><div class="line">     Money pay = e.calculatePay();</div><div class="line">     e.deliverPay.pay()</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="掩藏时序耦合"><a href="#掩藏时序耦合" class="headerlink" title="掩藏时序耦合."></a>掩藏时序耦合.</h2><p>不要隐藏时序耦合.如下代码，三个函数存在时序,捕鱼之前先织网,织网之前先编绳.如果调用倒换,可能就导致抛出异常.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MoogDiver</span> </span>&#123;</div><div class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dive</span><span class="params">(String reson)</span> </span>&#123;</div><div class="line">          saturateGradient();</div><div class="line">          reticulateSplines();</div><div class="line">          diveForMoog(reason);</div><div class="line">     &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>我们需要做调整，该耦合的还是得耦合,要符合实际的业务逻辑.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MoogDiver</span> </span>&#123;</div><div class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dive</span><span class="params">(String reson)</span> </span>&#123;</div><div class="line">          Gradient gradient = saturateGradient();</div><div class="line">          List&lt;Spline&gt; splines = reticulateSplines(gradient );</div><div class="line">          diveForMoog(splines ,reason);</div><div class="line">     &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="函数应该只在一个抽象层级上"><a href="#函数应该只在一个抽象层级上" class="headerlink" title="函数应该只在一个抽象层级上."></a>函数应该只在一个抽象层级上.</h2><h2 id="避免传递浏览"><a href="#避免传递浏览" class="headerlink" title="避免传递浏览,"></a>避免传递浏览,</h2><p>函数或者接口调用者不需要了解太多架构相关的东西.如果A与B协作,B与C协作,我们不想让使用A的模块了解C的信息</p><p><code>bad: a.getB().getC().doSomething()</code></p><p><code>good: myCollaborator.doSomething()</code></p><h1 id="环境问题"><a href="#环境问题" class="headerlink" title="环境问题"></a>环境问题</h1><h2 id="需要多步才能实现的构建"><a href="#需要多步才能实现的构建" class="headerlink" title="需要多步才能实现的构建."></a>需要多步才能实现的构建.</h2><p>构建系统应到是单步的操作, 执行一条命令,就可以从版本控制系统里拉下源代码,并完成构建.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">svn get myPorject</div><div class="line"><span class="built_in">cd</span> myProject</div><div class="line">ant all</div></pre></td></tr></table></figure><p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> *******</div><div class="line"><span class="built_in">cd</span> **</div><div class="line">npm intall</div><div class="line">npm start</div></pre></td></tr></table></figure></p><h2 id="需要多步才能做到的测试"><a href="#需要多步才能做到的测试" class="headerlink" title="需要多步才能做到的测试"></a>需要多步才能做到的测试</h2><p>单个命令应该可以运行全部的单元测试，并输出结果和报告.</p><h1 id="测试问题"><a href="#测试问题" class="headerlink" title="测试问题"></a>测试问题</h1><h2 id="测试不足-未使用覆盖率工具"><a href="#测试不足-未使用覆盖率工具" class="headerlink" title="测试不足,未使用覆盖率工具."></a>测试不足,未使用覆盖率工具.</h2><ul><li>一套测试中应该有多少个测试?CMMI将单元测试作为QA考核项,单元测试需考虑测试用例的代码覆盖率.</li><li>使用覆盖率工具能更容易地找到测试不足的模块,类和函数.</li></ul><h2 id="测试边界条件"><a href="#测试边界条件" class="headerlink" title="测试边界条件."></a>测试边界条件.</h2><p>特别需要注意测试边界条件.这是最基本的测试方法.</p><h2 id="测试覆盖率都具备启发性"><a href="#测试覆盖率都具备启发性" class="headerlink" title="测试覆盖率都具备启发性,"></a>测试覆盖率都具备启发性,</h2><p>查看未执行和已执行测试的代码,往往能发现线索,有效的定位问题.</p><h2 id="测试应该快速"><a href="#测试应该快速" class="headerlink" title="测试应该快速"></a>测试应该快速</h2><h2 id="单元测试保障了代码的重构"><a href="#单元测试保障了代码的重构" class="headerlink" title="单元测试保障了代码的重构."></a>单元测试保障了代码的重构.</h2><p>重构行为给代码带来更长的生命周期和更高的质量.</p><h1 id="函数问题"><a href="#函数问题" class="headerlink" title="函数问题"></a>函数问题</h1><h2 id="过多的参数"><a href="#过多的参数" class="headerlink" title="过多的参数."></a>过多的参数.</h2><p>最理想的参数数量是零,其次是一,再次是三,此类推,应避免三个以上的参数,符合职责单一原则.</p><h2 id="输出参数"><a href="#输出参数" class="headerlink" title="输出参数."></a>输出参数.</h2><p>容易把输出参数误看做输入参数,应少用或不用输出参数.</p><h2 id="标示参数"><a href="#标示参数" class="headerlink" title="标示参数."></a>标示参数.</h2><p>不要向函数传入布尔值.这不符合职责单一原则.</p><h2 id="不被调用的函数"><a href="#不被调用的函数" class="headerlink" title="不被调用的函数."></a>不被调用的函数.</h2><p>用不被调用的方法应该丢弃,直接删除,保留代码的整洁.</p><h2 id="命名不明确"><a href="#命名不明确" class="headerlink" title="命名不明确."></a>命名不明确.</h2><p>使用动词与关键字给函数去个好名字,能较好的解释方法的意图,以及参数的顺序和意图.</p>]]></content>
    
    <summary type="html">
    
      整洁的代码简单直接;整洁的代码如同优美的散文;整洁的代码从不隐藏设计者的意图,充满了干净利落的抽象和直截了当的控制语句.
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="新知类" scheme="http://zfeiyu.com/tags/%E6%96%B0%E7%9F%A5%E7%B1%BB/"/>
    
      <category term="编码规则" scheme="http://zfeiyu.com/tags/%E7%BC%96%E7%A0%81%E8%A7%84%E5%88%99/"/>
    
      <category term="代码的味道" scheme="http://zfeiyu.com/tags/%E4%BB%A3%E7%A0%81%E7%9A%84%E5%91%B3%E9%81%93/"/>
    
  </entry>
  
  <entry>
    <title>Google的职业生涯：技术开发指导(学生)</title>
    <link href="http://zfeiyu.com/2016/10/13/google-guide-to-development/"/>
    <id>http://zfeiyu.com/2016/10/13/google-guide-to-development/</id>
    <published>2016-10-12T16:00:00.000Z</published>
    <updated>2016-11-05T00:59:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Google的职业生涯：技术开发指导-面向学生"><a href="#Google的职业生涯：技术开发指导-面向学生" class="headerlink" title="Google的职业生涯：技术开发指导(面向学生)"></a>Google的职业生涯：技术开发指导(面向学生)</h1><p>本指南列举各项领域知识和相关资源来帮助你学习和提高相关技术能力。</p><table><thead><tr><th>建议</th><th>资源</th></tr></thead><tbody><tr><td>基础知识</td><td><a href="https://www.udacity.com/course/intro-to-computer-science--cs101" target="_blank" rel="external">计算机科学</a></td></tr><tr><td>掌握至少一门面向对象语言(C++, Java®, Python®)</td><td>初级程序员在线资源:<br> - <a href="https://www.coursera.org/specializations/java-programming" target="_blank" rel="external">Java 程序设计</a><br> - <a href="https://www.coursera.org/learn/learn-to-program" target="_blank" rel="external">学习编程：基础</a> <em>多伦多大学</em><br> - <a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-092-introduction-to-programming-in-java-january-iap-2010/index.htm" target="_blank" rel="external">java编程介绍</a> <em>MIT</em><br> - <a href="https://developers.google.com/edu/python/" target="_blank" rel="external">谷歌python教学</a><br> - <a href="https://www.coursera.org/learn/interactive-python-1" target="_blank" rel="external">python编程</a> <em>莱斯大学</em> <br>在线高级教程: <br> - <a href="https://www.coursera.org/specializations/java-object-oriented" target="_blank" rel="external">面向对象 Java 程序设计</a> <em>加州大学圣迭戈分校</em><br> - <a href="https://www.udacity.com/course/design-of-computer-programs--cs212" target="_blank" rel="external">计算机编程设计</a><br> - <a href="https://www.coursera.org/learn/program-code" target="_blank" rel="external">学习编程：撰写高质量代码</a> <em>多伦多大学</em></td></tr><tr><td>学习其他编程语言</td><td>- JavaScript®<br> - CSS &amp; HTML<br> - Ruby®<br> - PHP®<br> - C®<br> - Perl®<br> - Shell® script<br> - Lisp®<br> - Scheme®<br> - CSS &amp; HTML<br> - Ruby®<br> - PHP®<br> - Go® <br>在线资源:<br> - <a href="https://www.codecademy.com/learn/all" target="_blank" rel="external">Codecademy</a></td></tr><tr><td>调试代码</td><td>学习如何catch bugs，进行代码测试.<br>在线资源:<br>- <a href="https://www.udacity.com/course/software-testing--cs258" target="_blank" rel="external">软件测试</a><br>- <a href="https://www.udacity.com/course/software-debugging--cs259" target="_blank" rel="external">软件调试</a></td></tr><tr><td>提高离散数学的逻辑推理和知识</td><td>在线资源<br> - <a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-fall-2010/index.htm" target="_blank" rel="external">计算机科学数学应用</a> <em>MIT</em><br> - <a href="https://www.coursera.org/learn/mathematical-thinking" target="_blank" rel="external">数学思维</a> <em>斯坦福大学</em><br> - <a href="https://www.coursera.org/learn/probabilistic-graphical-models" target="_blank" rel="external">概率图模型</a> <em>斯坦福大学</em><br> - <a href="https://www.coursera.org/learn/game-theory-1" target="_blank" rel="external">博弈论</a> <em>斯坦福科伦比亚大学</em><br></td></tr><tr><td>提高对算法和数据结构有很强的理解能力</td><td>熟悉基础数据类型（栈，队列，包），排序算法（快速排序，合并排序，堆排序），数据结构（二分搜索树，红黑树，哈希表）以及BIG O.<br> <em>在线资源：</em><br> - <a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-spring-2008/index.htm" target="_blank" rel="external">算法简介</a> <em>斯坦福大学</em><br> - <a href="https://www.coursera.org/learn/introduction-to-algorithms" target="_blank" rel="external">算法1</a>&amp;<a href="https://www.coursera.org/learn/java-data-structures-algorithms-2" target="_blank" rel="external">算法2</a> <em>普林斯顿大学</em><br> - <a href="https://en.wikipedia.org/wiki/List_of_algorithms" target="_blank" rel="external">算法总览</a> <em>维基百科</em><br> - <a href="https://en.wikipedia.org/wiki/List_of_data_structures" target="_blank" rel="external">数据结构总览</a> <em>维基百科</em><br></td></tr><tr><td>操作系统</td><td><em>在线资源：</em><br> - <a href="https://www.youtube.com/watch?v=XgQo4JkN4Bw&amp;list=PL3289DD0D0F0CD4A3" target="_blank" rel="external">操作系统和系统编程</a></td></tr><tr><td>人工智能和机器学习</td><td><em>在线资源：</em><br> - <a href="https://www.udacity.com/course/machine-learning-engineer-nanodegree--nd009" target="_blank" rel="external">机器学习工程师Nanodegree</a> <em>Udacity</em><br>  - <a href="https://www.udacity.com/course/deep-learning--ud730" target="_blank" rel="external">深度学习</a> <em>Udacity</em><br>  - <a href="https://see.stanford.edu/Course/CS223A" target="_blank" rel="external">机器人技术</a> <em>斯坦福大学</em><br>  - <a href="https://see.stanford.edu/Course/CS229" target="_blank" rel="external">机器学习</a> <em>斯坦福大学</em></td></tr><tr><td>安卓开发</td><td><em>在线资源：</em><br> - <a href="https://developers.google.com/training/android/" target="_blank" rel="external">谷歌Android开发教学</a></td></tr><tr><td>web开发</td><td><em>在线资源：</em><br> - <a href="https://developers.google.com/training/web/" target="_blank" rel="external">谷歌web开发教学</a></td></tr><tr><td>学习其他开发技术</td><td><em>在线资源：</em><br> - <a href="https://developers.google.com/training/" target="_blank" rel="external">谷歌工程师培训站点</a></td></tr><tr><td>学习密码学</td><td><em>在线资源：</em><br> - <a href="https://www.coursera.org/learn/crypto" target="_blank" rel="external">密码学</a><br> - <a href="https://www.udacity.com/course/applied-cryptography--cs387" target="_blank" rel="external">密码学应用</a></td></tr><tr><td>在一个代码库里工作，通过阅读优秀的代码来提高你的编码，文档以及debug能力</td><td>- <a href="https://github.com/" target="_blank" rel="external">Github</a><br> - <a href="https://www.fogcreek.com/fogbugz/devhub" target="_blank" rel="external">Klin</a></td></tr><tr><td>和其他程序员一起工作</td><td>这将有利于锻炼你的团队合作能力并使你从学习其他人的优点</td></tr><tr><td>锻炼你的算法知识和编程技巧</td><td>通过编程竞赛（<a href="https://code.google.com/codejam/" target="_blank" rel="external">CodeJam</a>，<a href="https://icpc.baylor.edu/" target="_blank" rel="external">ACM</a>）锻炼你的算法知识</td></tr><tr><td>成为导师助理</td><td>通过指导其他学生将能有效增强和巩固你的知识体系</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      本指南列举各项领域知识和相关资源来帮助你学习和提高相关技术能力。
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="新知类" scheme="http://zfeiyu.com/tags/%E6%96%B0%E7%9F%A5%E7%B1%BB/"/>
    
      <category term="Google" scheme="http://zfeiyu.com/tags/Google/"/>
    
      <category term="职业指导" scheme="http://zfeiyu.com/tags/%E8%81%8C%E4%B8%9A%E6%8C%87%E5%AF%BC/"/>
    
  </entry>
  
  <entry>
    <title>Docker使用手册</title>
    <link href="http://zfeiyu.com/2016/09/27/docker-manual/"/>
    <id>http://zfeiyu.com/2016/09/27/docker-manual/</id>
    <published>2016-09-26T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是Docker"><a href="#什么是Docker" class="headerlink" title="什么是Docker?"></a>什么是Docker?</h1><p>先看一段Docker创始人的一段视频:<br><iframe src="http://player.youku.com/embed/XODc2MjUwNDU2" width="510" height="310" frameborder="0" allowfullscreen></iframe></p><p>Ship! Docker就是用来解决日渐繁杂的开发和生产环境的痛点问题的!大大简化了软件开发的流程和环境搭建的复杂性,解放重复劳动,让技术人员更关注功能和需求.</p><p>Docker的产生是为了解决以下的问题:</p><ol><li>环境管理复杂:从各种OS到中间件到APP,开发者需要关心太多的东西,Docker可以通过镜像分享的形式简化部署多应用实例.</li><li>虚拟化手段变化:采用虚拟化手段满足用户按需分配的资源需求以及保证可用性和隔离型.</li></ol><h1 id="如何学习一种工具和技术"><a href="#如何学习一种工具和技术" class="headerlink" title="如何学习一种工具和技术?"></a>如何学习一种工具和技术?</h1><p>入门非常的容易</p><ol><li>上<a href="https://docs.docker.com/docker-for-windows/" target="_blank" rel="external">官网</a>,跟着教程走</li><li>下载<a href="http://www.docker.com/products/docker#/windows" target="_blank" rel="external">DOCKER FOR WINDOWS SERVER</a>安装</li><li>非win10 pro,得安装<a href="http://www.docker.com/products/docker-toolbox" target="_blank" rel="external">docker toolbox</a></li><li>安装后,上<a href="https://hub.docker.com/" target="_blank" rel="external">docker hub</a> pull一个镜像下来.</li><li>试运行下 <code>Docker run hello-world</code></li></ol><p>发现已经被墙了,google之,配置DaoCloud的<a href="https://www.daocloud.io/mirror#accelerator-doc" target="_blank" rel="external">Docker加速器</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">docker-machine ssh default</div><div class="line">sudo sed -i &quot;s|EXTRA_ARGS=&apos;|EXTRA_ARGS=&apos;--registry-mirror=加速地址 |g&quot; /var/lib/boot2docker/profile</div><div class="line">exit</div><div class="line">docker-machine restart default</div></pre></td></tr></table></figure><p>开胃菜结束,进入主菜</p><h1 id="Docker-Overview"><a href="#Docker-Overview" class="headerlink" title="Docker Overview"></a>Docker Overview</h1><p>Docker是一个用于Developing,shipping,running应用的开放平台.</p><p>先预览一下,之后我们需要弄清楚以下几个问题.</p><ol><li>Docker是什么?</li><li>Docker是如何驱动的?</li><li>Docker能解决什么问题?</li><li>Docker的架构?</li></ol><h2 id="什么是Docker平台"><a href="#什么是Docker平台" class="headerlink" title="什么是Docker平台?"></a>什么是Docker平台?</h2><p>Docker提供管理容器生命周期的工具和平台:</p><ul><li>将你的应用[包括组件]打包到Docker容器内</li><li>分发这些容器到团队,进行进一步的开发和测试</li><li>将应用发布到生产环境</li></ul><h2 id="Docker引擎"><a href="#Docker引擎" class="headerlink" title="Docker引擎?"></a>Docker引擎?</h2><p>Docker是C/S结构的应用,Server是守护程序常驻内存,Client通过REST API和Server交互.</p><p><img src="/res/img/docker/engine-components-flow.png" alt=""></p><h2 id="Docker解决什么问题"><a href="#Docker解决什么问题" class="headerlink" title="Docker解决什么问题?"></a>Docker解决什么问题?</h2><h3 id="快速可持续行的发布应用"><a href="#快速可持续行的发布应用" class="headerlink" title="快速可持续行的发布应用"></a><em>快速可持续行的发布应用</em></h3><p>开发人员本地编码并通过分享Dorker容器进行集成,测试,发布</p><h3 id="按需部署和裁剪"><a href="#按需部署和裁剪" class="headerlink" title="按需部署和裁剪"></a><em>按需部署和裁剪</em></h3><p>Docker容器具备很高的移植性,它可以在开发人员的本地环境运行,也可以在数据中心,云的物理和虚拟环境中运行.</p><h3 id="同一个硬件环境提供更高的负载"><a href="#同一个硬件环境提供更高的负载" class="headerlink" title="同一个硬件环境提供更高的负载"></a><em>同一个硬件环境提供更高的负载</em></h3><h2 id="Docker的架构"><a href="#Docker的架构" class="headerlink" title="Docker的架构?"></a>Docker的架构?</h2><p><img src="/res/img/docker/architecture.svg" alt=""></p><h3 id="Docker-daemon"><a href="#Docker-daemon" class="headerlink" title="Docker daemon"></a>Docker daemon</h3><p>Server守护程序,用户通过Docker client和它交互</p><h3 id="Docker-Client"><a href="#Docker-Client" class="headerlink" title="Docker Client"></a>Docker Client</h3><p>用户和Docker交互的主要工具,使用命令行和配置和Docker damon进行交互.</p><h3 id="Docker内部结构"><a href="#Docker内部结构" class="headerlink" title="Docker内部结构"></a>Docker内部结构</h3><h4 id="images"><a href="#images" class="headerlink" title="images"></a>images</h4><p>Docker的镜像是只读的模板,用于指示Docker创建容器的,由Dockerfile文本文件来描述.说白了就是Docker的Build组件.</p><h4 id="containers"><a href="#containers" class="headerlink" title="containers"></a>containers</h4><p>可运行的Docker image实例.是Docker的运行组件.</p><h4 id="registries"><a href="#registries" class="headerlink" title="registries"></a>registries</h4><p>docker registry是镜像库,是Docker的分发组件.</p><h2 id="Docker的容器如何加载和运行"><a href="#Docker的容器如何加载和运行" class="headerlink" title="Docker的容器如何加载和运行?"></a>Docker的容器如何加载和运行?</h2><p><code>$ docker run -i -t ubuntu /bin/bash</code></p><p>当运行一条命令,Docker引擎会进行一系列的处理来加载和运行容器:</p><ol><li>获取<code>ubuntu</code>镜像: Docker引擎首先在本地查找镜像,如果存在就作为新的容器加载进来,如不存在就从<a href="https://hub.docker.com/" target="_blank" rel="external">Docker hub</a>获取镜像</li><li>创建一个新的容器:Docker使用image创建容器</li><li>配置文件系统并加载一个读写层: 在文件系统里创建容器并将读写层让入image</li><li>配置网络接口:创建一个网络接口,允许Docker容器和local host交互</li><li>配置IP地址: 查找并绑定一个可用的ip地址</li><li>执行命令: 执行<code>/bin/bash</code></li><li>应用输出:连接应用标准输入,输出,错误接口,供交互.</li></ol><h1 id="入门示例"><a href="#入门示例" class="headerlink" title="入门示例"></a>入门示例</h1><h2 id="构建image"><a href="#构建image" class="headerlink" title="构建image"></a>构建image</h2><h3 id="从Docker-hub获取whalesay镜像"><a href="#从Docker-hub获取whalesay镜像" class="headerlink" title="从Docker hub获取whalesay镜像"></a>从<a href="https://hub.docker.com/r/docker/whalesay/" target="_blank" rel="external">Docker hub</a>获取whalesay镜像</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">$ docker run docker/whalesay cowsay boo</div><div class="line">Unable to find image &apos;docker/whalesay:latest&apos; locally</div><div class="line">latest: Pulling from docker/whalesay</div><div class="line">e9e06b06e14c: Pull complete</div><div class="line">a82efea989f9: Pull complete</div><div class="line">37bea4ee0c81: Pull complete</div><div class="line">07f8e8c5e660: Pull complete</div><div class="line">676c4a1897e6: Pull complete</div><div class="line">5b74edbcaa5b: Pull complete</div><div class="line">1722f41ddcb5: Pull complete</div><div class="line">99da72cfe067: Pull complete</div><div class="line">5d5bd9951e26: Pull complete</div><div class="line">fb434121fc77: Already exists</div><div class="line">Digest: sha256:d6ee73f978a366cf97974115abe9c4099ed59c6f75c23d03c64446bb9cd49163</div><div class="line">Status: Downloaded newer image for docker/whalesay:latest</div><div class="line"> _____</div><div class="line">&lt; boo &gt;</div><div class="line"> -----</div><div class="line">    \</div><div class="line">     \</div><div class="line">      \     </div><div class="line">                    ##        .            </div><div class="line">              ## ## ##       ==            </div><div class="line">           ## ## ## ##      ===            </div><div class="line">       /&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;___/ ===        </div><div class="line">  ~~~ &#123;~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~   </div><div class="line">       \______ o          __/            </div><div class="line">        \    \        __/             </div><div class="line">          \____\______/</div></pre></td></tr></table></figure><h3 id="写一个Dockerfile"><a href="#写一个Dockerfile" class="headerlink" title="写一个Dockerfile"></a>写一个Dockerfile</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">FROM docker/whalesay:latest</div><div class="line">RUN apt-get -y update &amp;&amp; apt-get install -y fortunes</div><div class="line">CMD /usr/games/fortune -a | cowsay</div></pre></td></tr></table></figure><h3 id="编译image"><a href="#编译image" class="headerlink" title="编译image"></a>编译image</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker build -t docker-whale .</div></pre></td></tr></table></figure><h3 id="编译流程"><a href="#编译流程" class="headerlink" title="编译流程"></a>编译流程</h3><ul><li>首先,Docker校验编译所需要素.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Sending build context to Docker daemon 2.048 kB</div></pre></td></tr></table></figure><ul><li>Docker加载<code>whalesay</code>镜像.镜像已经在本地,所以不需要再去下载.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Step 1 : FROM docker/whalesay:latest</div><div class="line"> ---&gt; 6b362a9f73eb</div></pre></td></tr></table></figure><ul><li>Docker更新<code>apt-get</code>包管理器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Step 2 : RUN apt-get -y update &amp;&amp; apt-get install -y fortunes</div><div class="line"> ---&gt; Running in 21b7de6678a8</div><div class="line">Ign http://archive.ubuntu.com trusty InRelease</div><div class="line">Get:1 http://archive.ubuntu.com trusty-updates InRelease [65.9 kB]</div><div class="line">Get:2 http://archive.ubuntu.com trusty-security InRelease [65.9 kB]</div><div class="line">Hit http://archive.ubuntu.com trusty Release.gpg</div><div class="line">Get:3 http://archive.ubuntu.com trusty-updates/main Sources [474 kB]</div></pre></td></tr></table></figure><ul><li>安装<code>fortunes</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Reading state information...</div><div class="line">The following extra packages will be installed:</div><div class="line">  fortune-mod fortunes-min librecode0</div><div class="line">Suggested packages:</div><div class="line">  x11-utils bsdmainutils</div><div class="line">The following NEW packages will be installed:</div><div class="line">  fortune-mod fortunes fortunes-min librecode0</div><div class="line">0 upgraded, 4 newly installed, 0 to remove and 87 not upgraded.</div></pre></td></tr></table></figure><ul><li>完成编译</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Step 3 : CMD /usr/games/fortune -a | cowsay</div><div class="line"> ---&gt; Running in 3a10806db557</div><div class="line"> ---&gt; e02e38c358db</div><div class="line">Removing intermediate container 3a10806db557</div><div class="line">Successfully built e02e38c358db</div></pre></td></tr></table></figure><h3 id="运行新的docker-whale"><a href="#运行新的docker-whale" class="headerlink" title="运行新的docker-whale"></a>运行新的<code>docker-whale</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">docker run docker-whale</div><div class="line"></div><div class="line">/ Everyone has a purpose in life. Perhaps \</div><div class="line">| yours is watching television.           |</div><div class="line">|                                         |</div><div class="line">\ -- David Letterman                      /</div><div class="line">-----------------------------------------</div><div class="line">  \</div><div class="line">   \</div><div class="line">    \</div><div class="line">                  ##        .</div><div class="line">            ## ## ##       ==</div><div class="line">         ## ## ## ##      ===</div><div class="line">     /&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;___/ ===</div><div class="line">~~~ &#123;~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~</div><div class="line">     \______ o          __/</div><div class="line">      \    \        __/</div><div class="line">        \____\______/</div></pre></td></tr></table></figure><h2 id="Docker-hub"><a href="#Docker-hub" class="headerlink" title="Docker hub"></a>Docker hub</h2><p><a href="https://docs.docker.com/engine/getstarted/step_five/" target="_blank" rel="external">使用Docker hub对镜像进行配置管理</a>,和Git使用方式类似.</p><h2 id="容器命名"><a href="#容器命名" class="headerlink" title="容器命名"></a>容器命名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker run -d -P --name web training/webapp python app.py</div></pre></td></tr></table></figure><h1 id="容器挂载管理"><a href="#容器挂载管理" class="headerlink" title="容器挂载管理"></a><a href="https://docs.docker.com/engine/tutorials/dockervolumes/" target="_blank" rel="external">容器挂载管理</a></h1><h1 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h1><p><code>Compose</code>是一个定义和运行多Docker容器应用的工具.</p><p>使用<code>Compose</code>通常有3个步骤:</p><ol><li>将应用的环境定义到<code>Dockerfile</code>,以便在其他地方可以复用.</li><li>在<code>docker-compose.yml</code>将应用定义为服务,这样你可以在解耦的环境中运行</li><li>最后,执行<code>docker-compose up</code></li></ol><p><code>docker-compose.yml</code>大致内容如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">version: &apos;2&apos;</div><div class="line">services:</div><div class="line">  web:</div><div class="line">    build: .</div><div class="line">    ports:</div><div class="line">    - &quot;5000:5000&quot;</div><div class="line">    volumes:</div><div class="line">    - .:/code</div><div class="line">    - logvolume01:/var/log</div><div class="line">    links:</div><div class="line">    - redis</div><div class="line">  redis:</div><div class="line">    image: redis</div><div class="line">volumes:</div><div class="line">  logvolume01: &#123;&#125;</div></pre></td></tr></table></figure><h2 id="Compose的使用场景"><a href="#Compose的使用场景" class="headerlink" title="Compose的使用场景"></a>Compose的使用场景</h2><ol><li>开发环境</li><li>自动化测试环境</li><li>单站部署</li></ol><h2 id="使用指南"><a href="#使用指南" class="headerlink" title="使用指南"></a>使用指南</h2><p>跟着<a href="https://docs.docker.com/compose/gettingstarted/" target="_blank" rel="external">官网教程</a></p><h1 id="Docker-Machine"><a href="#Docker-Machine" class="headerlink" title="Docker Machine"></a><a href="https://docs.docker.com/machine/" target="_blank" rel="external">Docker Machine</a></h1><p>Docker Machine说白了就是个Docker Server集群管理的client端,便于远程发布和部署Docker应用</p><h1 id="Docker应用到项目开发方法"><a href="#Docker应用到项目开发方法" class="headerlink" title="Docker应用到项目开发方法"></a>Docker应用到项目开发方法</h1><p><img src="/res/img/docker/CI.png" alt=""></p><p>如果是新的团队,那没什么问题,起初就可以商量好.如果是已经比较成熟的团队,Docker逐步嵌入到几个持续集成的流程中去.应用Docker到软件开发的流程,首先需要解决几个问题.</p><ol><li>Base Image的选择, <a href="https://phusion.github.io/baseimage-docker/" target="_blank" rel="external">phusion-baseimage</a></li><li>配置管理Docker镜像的工具的选择，如Ansible、Chef、Puppet</li><li>Host主机系统的选择，如CoreOS、Ubuntu</li><li>使用持续集成工具(Jenkins)进行管道部署进行持续集成</li><li>使用<a href="https://github.com/kubernetes/kubernetes" target="_blank" rel="external">Google Kubernetes</a>进行生产部署</li></ol><p><a href="http://www.infoq.com/cn/articles/docker-integrated-test-and-deployment" target="_blank" rel="external">Docker的集成测试部署之道</a></p><h2 id="Docker文件挂载"><a href="#Docker文件挂载" class="headerlink" title="Docker文件挂载"></a>Docker文件挂载</h2><p>Docker image打包发布的时候,如果源码也一并放在image里是不合理的,所以具体开发过程中需要将宿主文件挂载到Docker容器里.</p><h3 id="windows下开发环境"><a href="#windows下开发环境" class="headerlink" title="windows下开发环境"></a>windows下开发环境</h3><p>windows在vxbox的虚拟机在起Docker,所以需要迂回挂载.</p><h4 id="利用vxbox共享"><a href="#利用vxbox共享" class="headerlink" title="利用vxbox共享"></a>利用vxbox共享</h4><ul><li>设置vxbox共享文件夹</li></ul><p><img src="/res/img/docker/vxbox.png" alt=""></p><ul><li>进入vxbox虚拟机,将windows目录挂载到虚拟机,如：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mount -t vboxsf project /mnt/data</div></pre></td></tr></table></figure><ul><li>进入Docker终端，-v启动挂载到容器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run -it -v /mnt/data:/usr/data ubuntu:trusty</div></pre></td></tr></table></figure><h1 id="Docker常用命令"><a href="#Docker常用命令" class="headerlink" title="Docker常用命令"></a>Docker常用命令</h1><h2 id="清除"><a href="#清除" class="headerlink" title="清除"></a>清除</h2><ul><li>停止所有container</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker stop $(docker ps -a -q)</div></pre></td></tr></table></figure><ul><li>删除所有container</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker rm $(docker ps -a -q)</div></pre></td></tr></table></figure><ul><li>删除所有images</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker rmi $(docker images -q)</div></pre></td></tr></table></figure><h1 id="Docker的坑"><a href="#Docker的坑" class="headerlink" title="Docker的坑"></a>Docker的坑</h1><p><a href="https://t.co/cmXB2Clj8D" target="_blank" rel="external">希特勒吐槽Docker</a></p><h1 id="Docker工具"><a href="#Docker工具" class="headerlink" title="Docker工具"></a>Docker工具</h1><ol><li><a href="http://kubernetes.io/" target="_blank" rel="external">Kubernetes</a></li><li><a href="http://www.infoq.com/cn/DockerDeep" target="_blank" rel="external">InfoQ上的Docker</a></li></ol>]]></content>
    
    <summary type="html">
    
      现在Docker这么火,怎么能不用
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="新知" scheme="http://zfeiyu.com/tags/%E6%96%B0%E7%9F%A5/"/>
    
      <category term="开发环境" scheme="http://zfeiyu.com/tags/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
      <category term="Docker" scheme="http://zfeiyu.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>攻城狮周记(五)</title>
    <link href="http://zfeiyu.com/2016/09/26/readmemo/"/>
    <id>http://zfeiyu.com/2016/09/26/readmemo/</id>
    <published>2016-09-25T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Fintech细分领域研究报告"><a href="#Fintech细分领域研究报告" class="headerlink" title="Fintech细分领域研究报告"></a>Fintech细分领域研究报告</h1><p>随着科技的发展，大数据和人工智能等前沿科技早已介入金融领域。Fintech美国已经领先中国很多,是一个好的领域.<br><a href="http://36kr.com/p/5053161.html" target="_blank" rel="external">原文</a></p><h1 id="大数据团队建设"><a href="#大数据团队建设" class="headerlink" title="大数据团队建设"></a>大数据团队建设</h1><ol><li>数据基础服务团队，负责Hadoop、Spark、Hbase、Hive等基础组件的运维、开发和优化；</li><li>数据开放平台团队；</li><li>数据仓库团队，负责统一的数据仓库，力图解决数据不一致、口径不一致、模型不一致以及数据质量等问题；</li><li>数据挖掘团队，偏算法研究与建模，负责核心应用开发。</li><li>质量控制（QA）团队，主要负责软件测试及DevOps流程贯彻落地。</li><li>项目管理团队，有专门的项目管理团队负责项目需求及进度。</li></ol><h1 id="数据分析纬度"><a href="#数据分析纬度" class="headerlink" title="数据分析纬度"></a>数据分析纬度</h1><p><a href="http://36kr.com/p/5053800.html" target="_blank" rel="external">一个优秀的数据分析师是怎样炼成的？</a></p><p>#　前端知识库<br><a href="http://geek.csdn.net/news/detail/103138" target="_blank" rel="external">知识库</a></p><h1 id="开源大数据工具"><a href="#开源大数据工具" class="headerlink" title="开源大数据工具"></a>开源大数据工具</h1><p><a href="http://geek.csdn.net/news/detail/103253" target="_blank" rel="external">原文</a></p><h1 id="微信小程序"><a href="#微信小程序" class="headerlink" title="微信小程序"></a>微信小程序</h1><p><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/?t=1474644083132" target="_blank" rel="external">微信小程序简易教程</a></p><h1 id="如何讲故事"><a href="#如何讲故事" class="headerlink" title="如何讲故事?"></a>如何讲故事?</h1><p><a href="http://36kr.com/p/5053696.html" target="_blank" rel="external">原文</a></p><h1 id="数据挖掘四大信仰"><a href="#数据挖掘四大信仰" class="headerlink" title="数据挖掘四大信仰"></a>数据挖掘四大信仰</h1><p>信仰1：不以具体业务场景出发，不考虑大数据并发实现的数据挖掘，都在耍流氓；<br>信仰2：知其然，晓其所以然，万变不离其宗，必定变化莫测，这正是算法魅力；<br>信仰3：在DataMining领域，不做两种人。一种是工具人，一种是研究者；<br>信仰4：拥有健康、丰满的数据，业务场景建模已经成功90%以上了；</p>]]></content>
    
    <summary type="html">
    
      Fintech领域研究报告/大数据团队结构/数据分析纬度/如何讲故事
    
    </summary>
    
      <category term="攻城狮周记" scheme="http://zfeiyu.com/categories/%E6%94%BB%E5%9F%8E%E7%8B%AE%E5%91%A8%E8%AE%B0/"/>
    
    
      <category term="大数据" scheme="http://zfeiyu.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="新知" scheme="http://zfeiyu.com/tags/%E6%96%B0%E7%9F%A5/"/>
    
      <category term="前端" scheme="http://zfeiyu.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="数据挖掘" scheme="http://zfeiyu.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
  </entry>
  
  <entry>
    <title>IONIC2使用感想</title>
    <link href="http://zfeiyu.com/2016/09/22/ionic2-/"/>
    <id>http://zfeiyu.com/2016/09/22/ionic2-/</id>
    <published>2016-09-21T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>IONIC2基于Angular2,属于Ponegap体系,和RN都是我比较看好的框架,都还未正式发布.之所以会去使用它,完全是因为Typescript的缘故,TS作为ES/JS的超集使用起来比较方便.</p><p>Ionic2处于Beta阶段,现在社区不活跃,资源也相对比较少,和我去年预研RN时候不同,RN是由于迭代太快,坑太多,但社区还是比较活跃的.如今RN已如日中天…,但不差钱还是要选择原生技术.</p><p>期间看了下官网的一个实例<a href="https://github.com/driftyco/ionic-conference-app" target="_blank" rel="external">conference</a>,并移植和改写了一个示例<a href="https://github.com/LiZoRN/ionic2-realty" target="_blank" rel="external">ionic2-realty</a>,也算入了门了.</p><p>这类框架也称不上预研,入门门槛比较低,当然要精通都不是一蹴而就的,需要时间和经验的积累.</p><p>过早的使用某种技术势必要填很多的坑.于是在不断的填坑和弃坑中,度日如年…</p>]]></content>
    
    <summary type="html">
    
      过早的使用某种技术势必要填很多的坑.于是在不断的填坑和弃坑中,我们度日如年...
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="Ionic" scheme="http://zfeiyu.com/tags/Ionic/"/>
    
      <category term="移动开发" scheme="http://zfeiyu.com/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
      <category term="混合开发" scheme="http://zfeiyu.com/tags/%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>My little trouble</title>
    <link href="http://zfeiyu.com/2016/09/22/my-little-upset/"/>
    <id>http://zfeiyu.com/2016/09/22/my-little-upset/</id>
    <published>2016-09-21T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>碎片化的时代,获取了太多的垃圾信息,最近又想的太多.于是最近就变得比较焦虑,异常的焦虑.</p><p>两年前回到宁波,这里的好企业真的太少了,尤其是技术类的.最后进入互联网的领域,web,app大部分都毫无技术含量,发现已于<code>研发</code>越走越远.</p><p>反复思考自己的职业规划,思考自己想要什么.近几年换工作比较频繁,切换了不同的领域,由于具备通用的专业能力,知识的转化率都还算高.眼界虽宽了很多,但还是缺乏某一个领域深度,没有享受到领域知识的时间复利,一直处于开荒状态,不能进行有效的farm.</p><p>我觉得必须开始经营自己的品牌:</p><ol><li>精进一项核心技能</li><li>混圈子</li><li>持续的自我进化</li></ol><p>于是问题来了,这次换还是不换呢?</p>]]></content>
    
    <summary type="html">
    
      人不是混圈子才会牛逼，而是牛逼了才会有圈子
    
    </summary>
    
      <category term="随笔" scheme="http://zfeiyu.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>攻城狮周记(四)</title>
    <link href="http://zfeiyu.com/2016/09/12/readmemo/"/>
    <id>http://zfeiyu.com/2016/09/12/readmemo/</id>
    <published>2016-09-11T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="你的收入，为什么还没有指数增长？"><a href="#你的收入，为什么还没有指数增长？" class="headerlink" title="你的收入，为什么还没有指数增长？"></a>你的收入，为什么还没有指数增长？</h1><blockquote><p>两个乞丐在比划说，我要是当上了皇帝，我要饭时候的那个碗，必须是纯金的。</p></blockquote><ol><li>打造自己能力的”单品爆款”,要专注,专业需要时间的积累.</li><li>做有价值的事,让自己增值.</li><li>经常复盘,我们要在有限的时间里，多做些战略上的努力，而不是战术层面的付出。<br><a href="http://36kr.com/p/5052997.html" target="_blank" rel="external">原文</a></li></ol><h1 id="Saas产品如何运营"><a href="#Saas产品如何运营" class="headerlink" title="Saas产品如何运营"></a>Saas产品如何运营</h1><p><a href="http://36kr.com/p/5053097.html" target="_blank" rel="external">原文</a></p><h1 id="在大数据时代，每家公司都要有大数据部门吗？"><a href="#在大数据时代，每家公司都要有大数据部门吗？" class="headerlink" title="在大数据时代，每家公司都要有大数据部门吗？"></a>在大数据时代，每家公司都要有大数据部门吗？</h1><p>大数据都知道是一个方向,问题是谁能站在浪潮之巅?<br><a href="http://geek.csdn.net/news/detail/101287" target="_blank" rel="external">原文</a></p><h1 id="邮件营销平台实践"><a href="#邮件营销平台实践" class="headerlink" title="邮件营销平台实践"></a>邮件营销平台实践</h1><p>没接触过这个领域,长了点见识.<br><a href="http://geek.csdn.net/news/detail/101185" target="_blank" rel="external">邮件营销平台实践</a></p><h1 id="直播技术"><a href="#直播技术" class="headerlink" title="直播技术"></a>直播技术</h1><p>代码居多<br><a href="http://blog.csdn.net/xwl198937/article/category/6386061" target="_blank" rel="external">原文</a></p><h1 id="深度学习主题"><a href="#深度学习主题" class="headerlink" title="深度学习主题"></a>深度学习主题</h1><p>下周专题深入研究<br><a href="https://code.csdn.net/blog/41" target="_blank" rel="external">原文</a></p><h1 id="Git配置管理"><a href="#Git配置管理" class="headerlink" title="Git配置管理"></a>Git配置管理</h1><p>git的配置管理和SVN有较多不同.SVN默认有三条配置流,trunk,branch,tag. git的master并不是svn的trunk,趋同于svn的tag,是对外可发布版本的最终标示,是一个完整的可部署的生产版本.</p><p>以下是一个不错的git配置管理模型:</p><p><img src="/res/img/gitmodel/gitmodel.png" alt=""></p><ul><li>feature（多个、玫红）。主要是自己玩了，差不多的时候要合并回develop去。从不与master交互。</li><li>develop（1个、黄色）。主要是和feature以及release交互。</li><li>release（同一时间1个、绿色）。总是基于develop，最后又合并回develop。当然对应的tag跑到master这边去了。生命周期很短，只是为了发布</li><li>hotfix（同一时间1个、红色）。总是基于master，并最后合并到master和develop。生命周期较短，用了修复bug或小粒度修改发布。</li><li>master（1个蓝色）。没有什么东西，仅是一些关联的tag，因从不在master上开发。</li></ul><p>在这个模型中，master和develop都具有象征意义。master分支上的代码总是稳定的（stable build），随时可以发布出去。develop上的代码总是从feature上合并过来的，可以进行Nightly Builds，但不直接在develop上进行开发。当develop上的feature足够多以至于可以进行新版本的发布时，可以创建release分 支。</p><p>release分支基于develop，进行很简单的修改后就被合并到master，并打上tag，表示可以发布了。紧接着release将被合 并到develop；此时develop可能往前跑了一段，出现合并冲突，需要手工解决冲突后再次合并。这步完成后就删除release分支。</p><p>当从已发布版本中发现bug要修复时，就应用到hotfix分支了。hotfix基于master分支，完成bug修复或紧急修改后，要merge回master，打上一个新的tag，并merge回develop，删除hotfix分支</p><p>主分支:master,develop, master分支为稳定版本,develop为整合分支可在之上进行日编译和持续集成.<br>辅助分支:feature(功能开发),hotfix(热补丁),release(发布整合),生命周期较短</p><h3 id="feature-分支使用规范："><a href="#feature-分支使用规范：" class="headerlink" title="feature 分支使用规范："></a>feature 分支使用规范：</h3><ol><li>可以从develop分支发起feature分支</li><li>代码必须合并回develop分支</li><li>feature分支的命名可以使用除master，develop，release-<em>，hotfix-</em>之外的任何名称</li></ol><h3 id="release分支使用规范"><a href="#release分支使用规范" class="headerlink" title="release分支使用规范"></a>release分支使用规范</h3><ol><li>可以从develop分支派生</li><li>必须合并回develop分支和master分支</li><li>分支命名惯例：release-*</li></ol><p>release分支是为发布新的产品版本而设计的。在这个分支上的代码允许做小的缺陷修正、准备发布版本所需的各项说明信息（版本号、发布时间、 编译时间等等）。<br>当develop分支上的代码已经包含了所有即将发布的版本中所计划包含的软件功能，并且已通过所有测试时，我们就可以考虑准备创建 release分支了。<br>成功的派生了release分支，并被赋予版本号之后，develop分支就可以为“下一个版本”服务了。所谓的“下一个版本”是在当前即将发布的版本之后发布的版本。版本号的命名可以依据项目定义的版本号命名规则进行。</p><h3 id="hotfix分支"><a href="#hotfix分支" class="headerlink" title="hotfix分支"></a>hotfix分支</h3><p>使用规范：</p><ol><li>可以从master分支派生</li><li>必须合并回master分支和develop分支</li><li>分支命名惯例：hotfix-*<br>和release分支一样hotfix分支都会产生新的版本号.</li></ol><h3 id="人员权限"><a href="#人员权限" class="headerlink" title="人员权限"></a>人员权限</h3><p>开发人员:feature,hotfix<br>技术经理:feature,develop,hotfix,release<br>运维:release,master<br>测试人员:develop,release,master</p><ol><li><a href="http://nvie.com/posts/a-successful-git-branching-model/" target="_blank" rel="external">原文</a></li><li><a href="http://blog.jobbole.com/78960/" target="_blank" rel="external">git基础</a></li></ol><h1 id="VC经济基本概念"><a href="#VC经济基本概念" class="headerlink" title="VC经济基本概念"></a>VC经济基本概念</h1><ol><li><a href="http://36kr.com/p/5053245.html" target="_blank" rel="external">VC经济基本概念</a></li><li><a href="http://36kr.com/p/5053195.html" target="_blank" rel="external">决策分析模型</a></li></ol>]]></content>
    
    <summary type="html">
    
      对于未来，看得更远一些，想得更大一些吧.(git配置管理,sass运营)
    
    </summary>
    
      <category term="攻城狮周记" scheme="http://zfeiyu.com/categories/%E6%94%BB%E5%9F%8E%E7%8B%AE%E5%91%A8%E8%AE%B0/"/>
    
    
      <category term="大数据" scheme="http://zfeiyu.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="新知" scheme="http://zfeiyu.com/tags/%E6%96%B0%E7%9F%A5/"/>
    
      <category term="Git配置管理" scheme="http://zfeiyu.com/tags/Git%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/"/>
    
      <category term="Sass" scheme="http://zfeiyu.com/tags/Sass/"/>
    
  </entry>
  
  <entry>
    <title>攻城狮周记(三)</title>
    <link href="http://zfeiyu.com/2016/09/05/readmemo/"/>
    <id>http://zfeiyu.com/2016/09/05/readmemo/</id>
    <published>2016-09-04T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Yahoo开源Pulsar：大规模的发布-订阅（Pub-Sub）消息传递平台"><a href="#Yahoo开源Pulsar：大规模的发布-订阅（Pub-Sub）消息传递平台" class="headerlink" title="Yahoo开源Pulsar：大规模的发布/订阅（Pub-Sub）消息传递平台"></a>Yahoo开源Pulsar：大规模的发布/订阅（Pub-Sub）消息传递平台</h1><p><a href="https://github.com/yahoo/pulsar" target="_blank" rel="external">yahoo/pulsar</a></p><h1 id="python进行数据分析"><a href="#python进行数据分析" class="headerlink" title="python进行数据分析"></a>python进行数据分析</h1><ol><li>基础知识:set,list,dict等数据架构</li><li>学习数据处理库:numpy,pandas等模块</li><li>csv,数据库等导入导出</li><li>爬虫:爬豆瓣,然后爬动态网站,爬的动80%的网站后,再挑战下淘宝,天猫等</li><li>web: django, flask, <a href="http://www.highcharts.com/" target="_blank" rel="external">highcharts</a></li><li>文本挖掘:jieba分词模块</li></ol><p><a href="http://blog.csdn.net/BaiHuaXiu123/article/details/52464510" target="_blank" rel="external">人工智能之机器学习路线图</a></p><h1 id="精通机器学习的5本免费电子书"><a href="#精通机器学习的5本免费电子书" class="headerlink" title="精通机器学习的5本免费电子书"></a>精通机器学习的5本免费电子书</h1><p><a href="http://geek.csdn.net/news/detail/100024" target="_blank" rel="external">原文</a></p><h1 id="医学影像-成像蓝海"><a href="#医学影像-成像蓝海" class="headerlink" title="医学影像,成像蓝海"></a>医学影像,成像蓝海</h1><p><a href="http://36kr.com/p/5052501.html" target="_blank" rel="external">原文</a></p><h1 id="互联网数据分析书籍清单"><a href="#互联网数据分析书籍清单" class="headerlink" title="互联网数据分析书籍清单"></a>互联网数据分析书籍清单</h1><p>数据分析是一个好行当,部分书籍已看过.<br><a href="http://36kr.com/p/5052301.html" target="_blank" rel="external">原文</a></p><h1 id="打破定制旅游的产能边界"><a href="#打破定制旅游的产能边界" class="headerlink" title="打破定制旅游的产能边界"></a>打破定制旅游的产能边界</h1><p><a href="http://36kr.com/p/5052293.html" target="_blank" rel="external">原文</a></p><h1 id="视频直播技术编码和封装"><a href="#视频直播技术编码和封装" class="headerlink" title="视频直播技术编码和封装"></a>视频直播技术编码和封装</h1><p><a href="http://geek.csdn.net/news/detail/99498" target="_blank" rel="external">原文</a></p><h1 id="如何成为一名数据科学家"><a href="#如何成为一名数据科学家" class="headerlink" title="如何成为一名数据科学家"></a>如何成为一名数据科学家</h1><p><a href="http://daily.zhihu.com/story/3909126" target="_blank" rel="external">原文</a></p>]]></content>
    
    <summary type="html">
    
      python大数据分析,医学影像研究报告.
    
    </summary>
    
      <category term="攻城狮周记" scheme="http://zfeiyu.com/categories/%E6%94%BB%E5%9F%8E%E7%8B%AE%E5%91%A8%E8%AE%B0/"/>
    
    
      <category term="新知" scheme="http://zfeiyu.com/tags/%E6%96%B0%E7%9F%A5/"/>
    
      <category term="数据分析" scheme="http://zfeiyu.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="机器学习" scheme="http://zfeiyu.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>我皮肤上的字</title>
    <link href="http://zfeiyu.com/2016/09/02/the-words-on-my-skin/"/>
    <id>http://zfeiyu.com/2016/09/02/the-words-on-my-skin/</id>
    <published>2016-09-01T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>翻译自科幻小小说,转载请注明出处. <a href="http://uncannymagazine.com/article/the-words-on-my-skin/" target="_blank" rel="external">原文</a></p></blockquote><p>我的皮肤上写着字,字代表了我的个性.</p><p>我身上最大那几个字是母亲写的-<code>机灵</code>,<code>有爱</code>,<code>随和</code>,<code>守记</code>.它们写在我的背上,这是我自己无法接触的皮肤.</p><p>母亲的那几个最大的字叫<code>体贴</code>,由她的爸爸所赐,整个字填满了她的整个右手臂.</p><p>六岁,我还不太识字,我偷了母亲的<em>那个笔</em>,为自己选择了第一个词–<code>快乐</code>.当这两个字歪歪扭扭的出现在我的整个左前臂上时,母亲震惊了.私下在皮肤上写字的是违法的,母亲可能会因此失去<em>持笔者</em>的资格.但是母亲没有生气,她的身上没有<code>愤怒</code>,取而代之的是<code>耐心</code>和<code>谅解</code>.</p><p>持笔机制是这样的,只有少数的家庭成员负责持笔,成为持笔者就意味着更多的权利和责任,他们需要对用笔情况做备案报告,还时不时要受审查.违背了持笔规则会受到非常严厉的制裁.这种规则意图控制笔的滥用,但事实上,审查人员非常的腐败,用点金钱就可以买通了.</p><p>于是十岁,我又几次偷偷的在身上写了字–<code>聪明</code>,<code>鬼祟</code>,<code>独立</code>,一次也没被抓住.</p><p>十四岁,我半夜起来,再次在自己的大腿内侧写上–<code>热情</code>,<code>敏感</code>,<code>轻浮</code>.母亲为此多年没有和我说话,她默默在我的背上增加了三个词–<code>责任</code>,<code>真实</code>,<code>谨慎</code>.</p><p>母亲的管教激发了我的叛逆,我报复性在整个左身体写上了–<code>艺术</code>,<code>粗鲁</code>,<code>野心</code>,<code>玩乐</code>,<code>爱交际</code>,<code>固执</code>.母亲假装没有看到,她可能不想激化我们之间的矛盾,她也可能默许了我的选择,总之,她沉默了.</p><p>十八岁,我搬出了家,我给自己写上<code>自信</code>和<code>性感</code>.</p><p>我开始和一个老男人约会,我疯狂的爱上了他.他并不来自持笔者的家庭,所以他身上的词语非常匮乏,只有三个–<code>勇敢</code>,<code>健壮</code>,<code>迷人</code>.和他在一起很幸福,直到我发现了他的秘密和谎言.于是趁他睡着的时候,我冲动的在他的后劲(靠近耳朵那,他永远也不会看到那个地方)写上–<code>忠诚</code>,<code>信任</code>,<code>诚实</code>,<code>有爱</code>.结果第二天早上,他离我而去,再也没有回来.</p><p>我不知道他应该忠于谁,但我知道那个人不是我.</p><p>之后我又陷入到几场短暂的关系里,我的<code>责任感</code>和<code>谨慎</code>已经被<code>刺激</code>,<code>狂野</code>淹没了.我变得鲁莽而歇斯底里,虽然我身上并没有这些字.我感到茫然,我举足无措,更让我沮丧的是,我还怀孕了…</p><p>虽然母亲和我已经几个月没有联系了,我还是去了她那里.我很害怕她又会在我身上写字,害怕她会把我变成另外一个人,但她没有,她倾听了我的遭遇,安抚了我的焦虑,她耐心的等待着我,等待我持笔为自己写下此刻最需要的那几个字–<code>母爱</code>,<code>信赖</code>,<code>聪慧</code>.</p><p>现在,我的身上已经没有太多的位置可以写了,字越写越小,我的个性也变得越来越固定,不大会有太大的变化.我必须得小心翼翼的选词了,想着想着,我开始为年幼时候的冲动选择后悔万分,我对着母亲大声发泄着,”就让我这样吧”,我的眼泪和悔恨绝提而出.</p><p>随着宝宝的成长,我肚子上的皮肤延伸开来了,我落笔在这个额外的空间写上了–<code>坚韧</code>,<code>力量</code>,<code>坚持</code>,<code>冷静</code>, 这将有助于我的分娩.</p><p>我顺利产下了一个健康的男孩,他的皮肤就像一块空帆布,崭新而又纯粹,也承载了太多别人的期许.</p><p>母亲递给我<code>那支笔</code>,我准备在那张空白的背上写下什么.</p><p>什么词是宝宝最适合的?母亲和我苦思冥想.</p><p>我终于明白了应该写的字,但那些字不应该由我来写.</p><p>我于掰断了笔芯,把笔扔的远远的.</p><p>我爱我的儿子,不管他会变成什么.</p><p>他可以去做<code>自己</code>了.</p>]]></content>
    
    <summary type="html">
    
      我的皮肤上写着字,字代表了我的个性.
    
    </summary>
    
      <category term="小说" scheme="http://zfeiyu.com/categories/%E5%B0%8F%E8%AF%B4/"/>
    
    
      <category term="翻译" scheme="http://zfeiyu.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
</feed>
