<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lizorn</title>
  <subtitle>子非鱼</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.lizorn.com/"/>
  <updated>2016-11-19T01:44:22.000Z</updated>
  <id>http://www.lizorn.com/</id>
  
  <author>
    <name>lizorn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>中文技术文档写作规范</title>
    <link href="http://www.lizorn.com//2016/11/06/document-style-guide/"/>
    <id>http://www.lizorn.com//2016/11/06/document-style-guide/</id>
    <published>2016-11-06T08:38:30.000Z</published>
    <updated>2016-11-19T01:44:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>国外有非常多优秀的技术文档，黑客也大多擅长写作，无奈<code>墙</code>以及国内外文化差异的原因，总是会让你对文档的理解有或多或少的偏差。而国内技术氛围对敏捷开发理解有误，不重视文档。仅有的技术文档，也是挠痒之作。技术类的书，不管是出自翻译，还是由国内技术人员编写，质量普遍不高。</p>
<p>我一直都觉得：中文博大精深，要写出优秀的作品远比英文要难，尤其是技术文档，会有大量中英文的结合，即使是标点符号的运用都是一件烦恼的事情。最近一直在思考如何写出优秀的技术文档，其实技术文档的规范和编码规范差不多：要语法统一、用词精准、多用短句、不应该存在歧义、同样不应该有<a href="2016-10-25-Taste-of-code">坏味道</a>。看到这篇出自阮一峰的<a href="https://github.com/ruanyf/document-style-guide" target="_blank" rel="external">《中文技术文档的写作规范》</a>，很有启发。该指导文档比较系统，遂摘录，共勉！</p>
<p>另附上维基百科的各组织的写作要求<a href="https://en.wikipedia.org/wiki/List_of_style_guides" target="_blank" rel="external">写作要求</a>。</p>
<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h2 id="层级"><a href="#层级" class="headerlink" title="层级"></a>层级</h2><h3 id="标题分为四级。"><a href="#标题分为四级。" class="headerlink" title="标题分为四级。"></a>标题分为四级。</h3><ul>
<li>一级标题：文章的标题</li>
<li>二级标题：文章主要部分的大标题</li>
<li>三级标题：二级标题下面一级的小标题</li>
<li>四级标题：三级标题下面某一方面的小标题</li>
</ul>
<h2 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h2><ul>
<li>一级标题下，不能直接出现三级标题。</li>
<li>标题要避免孤立编号（即同级标题只有一个）。</li>
<li>下级标题不重复上一级标题的内容。</li>
<li>谨慎使用四级标题，尽量避免出现，保持层级的简单和防止出现过于复杂的章节。如果三级标题下有并列性的内容，建议只使用项目列表（Item list）。</li>
</ul>
<h1 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h1><h2 id="字间距"><a href="#字间距" class="headerlink" title="字间距"></a>字间距</h2><p>全角中文字符与半角英文字符之间，应有一个半角空格。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：本文介绍如何快速启动Windows系统。</div><div class="line"></div><div class="line">正确：本文介绍如何快速启动 Windows 系统。</div></pre></td></tr></table></figure>
<p>全角中文字符与半角阿拉伯数字之间，有没有半角空格都可，但必须保证风格统一，不能两种风格混杂。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">正确：2011年5月15日，我订购了5台笔记本电脑与10台平板电脑。</div><div class="line"></div><div class="line">正确：2011 年 5 月 15 日，我订购了 5 台笔记本电脑与 10 台平板电脑。</div></pre></td></tr></table></figure>
<p>半角的百分号，视同阿拉伯数字。</p>
<p>英文单位若不翻译，单位前的阿拉伯数字与单位间不留空格。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：一部容量为 16 GB 的智能手机</div><div class="line"></div><div class="line">正确：一部容量为 16GB 的智能手机</div></pre></td></tr></table></figure>
<p>半角英文字符和半角阿拉伯数字，与全角标点符号之间不留空格。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：他的电脑是 MacBook Air 。</div><div class="line"></div><div class="line">正确：他的电脑是 MacBook Air。</div></pre></td></tr></table></figure>
<h2 id="句子"><a href="#句子" class="headerlink" title="句子"></a>句子</h2><ul>
<li>避免使用长句。一个句子建议不超过 100 字或者正文的 3 行。</li>
<li>尽量使用简单句和并列句，避免使用复合句。</li>
</ul>
<h2 id="写作风格"><a href="#写作风格" class="headerlink" title="写作风格"></a>写作风格</h2><p>尽量不使用被动语态，改为使用主动语态。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：假如此软件尚未被安装，</div><div class="line"></div><div class="line">正确：假如尚未安装这个软件，</div></pre></td></tr></table></figure>
<p>不使用非正式的语言风格。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：Lady Gaga 的演唱会真是酷毙了，从没看过这么给力的表演！！！</div><div class="line"></div><div class="line">正确：无法参加本次活动，我深感遗憾。</div></pre></td></tr></table></figure>
<p>用对“的”、“地”、“得”。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">她露出了开心的笑容。</div><div class="line">（形容词＋的＋名词）</div><div class="line"></div><div class="line">她开心地笑了。</div><div class="line">（副词＋地＋动词）</div><div class="line"></div><div class="line">她笑得很开心。</div><div class="line">（动词＋得＋副词）</div></pre></td></tr></table></figure>
<p>使用代词时（比如“其”、“该”、“此”、“这”等词），必须明确指代的内容，保证只有一个含义。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：从管理系统可以监视中继系统和受其直接控制的分配系统。</div><div class="line"></div><div class="line">正确：从管理系统可以监视两个系统：中继系统和受中继系统直接控制的分配系统。</div></pre></td></tr></table></figure>
<p>名词前不要使用过多的形式词。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：此设备的使用必须在接受过本公司举办的正式的设备培训的技师的指导下进行。</div><div class="line"></div><div class="line">正确：此设备必须在技师的指导下使用，且指导技师必须接受过由本公司举办的正式设备培训。</div></pre></td></tr></table></figure>
<p>单个句子的长度尽量保持在 20 个字以内；20～29 个字的句子，可以接受；30～39 个字的句子，语义必须明确，才能接受；多于 40 个字的句子，在任何情况下都不能接受。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：本产品适用于从由一台服务器进行动作控制的单一节点结构到由多台服务器进行动作控制的并行处理程序结构等多种体系结构。</div><div class="line"></div><div class="line">正确：本产品适用于多种体系结构。无论是由一台服务器（单一节点结构），还是由多台服务器（并行处理结构）进行动作控制，均可以使用本产品。</div></pre></td></tr></table></figure>
<p>同样一个意思，尽量使用肯定句表达，不使用否定句表达。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：请确认没有接通装置的电源。</div><div class="line"></div><div class="line">正确：请确认装置的电源已关闭。</div></pre></td></tr></table></figure>
<p>避免使用双重否定句。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：没有删除权限的用户，不能删除此文件。</div><div class="line"></div><div class="line">正确：用户必须拥有删除权限，才能删除此文件。</div></pre></td></tr></table></figure>
<h2 id="英文处理"><a href="#英文处理" class="headerlink" title="英文处理"></a>英文处理</h2><p>英文原文如果使用了复数形式，翻译成中文时，应该将其还原为单数形式。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">英文：⋯information stored in random access memory (RAMs)⋯</div><div class="line"></div><div class="line">中文：……存储在随机存取存储器（RAM）里的信息……</div></pre></td></tr></table></figure>
<p>外文缩写可以使用半角圆点(<code>.</code>)表示缩写。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">U.S.A.</div><div class="line">Apple, Inc.</div></pre></td></tr></table></figure>
<p>表示中文时，英文省略号（<code>⋯</code>）应改为中文省略号（<code>……</code>）。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">英文：5 minutes later⋯</div><div class="line"></div><div class="line">中文：5 分钟过去了⋯⋯</div></pre></td></tr></table></figure>
<p>英文书名或电影名改用中文表达时，双引号应改为书名号。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">英文：He published an article entitled &quot;The Future of the Aviation&quot;.</div><div class="line"></div><div class="line">中文：他发表了一篇名为《航空业的未来》的文章。</div></pre></td></tr></table></figure>
<p>第一次出现英文词汇时，在括号中给出中文标注。此后再次出现时，直接使用英文缩写即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">IOC（International Olympic Committee，国际奥林匹克委员会）。这样定义后，便可以直接使用“IOC”了。</div></pre></td></tr></table></figure>
<p>专有名词中每个词第一个字母均应大写，非专有名词则不需要大写。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">“American Association of Physicists in Medicine”（美国医学物理学家协会）是专有名词，需要大写。</div><div class="line"></div><div class="line">“online transaction processing”（在线事务处理）不是专有名词，不应大写。</div></pre></td></tr></table></figure>
<h1 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h1><h2 id="原则-1"><a href="#原则-1" class="headerlink" title="原则"></a>原则</h2><ul>
<li>一个段落只能有一个主题，或一个中心句子。</li>
<li>段落的中心句子放在段首，对全段内容进行概述。后面陈述的句子为核心句服务。</li>
<li>一个段落的长度不能超过七行，最佳段落长度小于等于四行。</li>
<li>段落的句子语气要使用陈述和肯定语气，避免使用感叹语气。</li>
<li>段落之间使用一个空行隔开。</li>
<li>段落开头不要留出空白字符。</li>
</ul>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>引用第三方内容时，应注明出处。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">One man’s constant is another man’s variable. — Alan Perlis</div></pre></td></tr></table></figure>
<p>如果是全篇转载，请在全文开头显著位置注明作者和出处，并链接至原文。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">本文转载自 WikiQuote</div></pre></td></tr></table></figure>
<p>使用外部图片时，必须在图片下方或文末标明来源。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">本文部分图片来自 Wikipedia</div></pre></td></tr></table></figure>
<h1 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h1><h2 id="半角数字"><a href="#半角数字" class="headerlink" title="半角数字"></a>半角数字</h2><p>数字一律使用半角形式，不得使用全角形式。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误： 这件商品的价格是１０００元。</div><div class="line"></div><div class="line">正确： 这件商品的价格是 1000 元。</div></pre></td></tr></table></figure>
<h2 id="千分号"><a href="#千分号" class="headerlink" title="千分号"></a>千分号</h2><p>数值为千位以上，应添加千分号（半角逗号）。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XXX 公司的实收资本为 RMB1,258,000。</div></pre></td></tr></table></figure>
<p>对于 4 ～ 6 位的数值，千分号是选用的，比如<code>1000</code>和<code>1,000</code>都可以接受。对于7位及以上的数值，千分号是必须的。</p>
<p>多位小数要从小数点后从左向右添加千分号，比如<code>4.234,345</code>。</p>
<h2 id="货币"><a href="#货币" class="headerlink" title="货币"></a>货币</h2><p>货币应为阿拉伯数字，并在数字前写出货币符号，或在数字后写出货币中文名称。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$1,000</div><div class="line">1,000 美元</div></pre></td></tr></table></figure>
<h2 id="数值范围"><a href="#数值范围" class="headerlink" title="数值范围"></a>数值范围</h2><p>表示数值范围时，用<code>～</code>连接。参见《标点符号》一节的“连接号”部分。</p>
<p>带有单位或百分号时，两个数字都要加上单位或百分号，不能只加后面一个。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">正确：132kg～234kg</div><div class="line">错误：132～234kg</div><div class="line"></div><div class="line">正确：67%～89%</div><div class="line">错误：67～89%</div></pre></td></tr></table></figure>
<h2 id="变化程度的表示法"><a href="#变化程度的表示法" class="headerlink" title="变化程度的表示法"></a>变化程度的表示法</h2><p>数字的增加要使用“增加了”、“增加到”。“了”表示增量，“到”表示定量。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">增加到过去的两倍</div><div class="line">（过去为一，现在为二）</div><div class="line"></div><div class="line">增加了两倍</div><div class="line">（过去为一，现在为三）</div></pre></td></tr></table></figure>
<p>数字的减少要使用“降低了”、“降低到”。“了”表示增量，“到”表示定量。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">降低到百分之八十</div><div class="line">（定额是一百，现在是八十）</div><div class="line"></div><div class="line">降低了百分之八十</div><div class="line">（原来是一百，现在是二十）</div></pre></td></tr></table></figure>
<p>不能用“降低N倍”或“减少N倍”的表示法，要用“降低百分之几”或“减少百分之几”。因为减少（或降低）一倍表示数值原来为一百，现在等于零。</p>
<h1 id="标点符号"><a href="#标点符号" class="headerlink" title="标点符号"></a>标点符号</h1><h2 id="原则-2"><a href="#原则-2" class="headerlink" title="原则"></a>原则</h2><ul>
<li>中文语句的标点符号，均应该采取全角符号，这样可以保证视觉的一致。</li>
<li>如果整句为英文，则该句使用英文/半角标点。</li>
<li>句号、问号、叹号、逗号、顿号、分号和冒号不得出现在一行之首。</li>
</ul>
<h2 id="句号"><a href="#句号" class="headerlink" title="句号"></a>句号</h2><p>中文语句中的结尾处应该用全角句号（<code>。</code>）。</p>
<p>句子末尾用括号加注时，句号应在括号之外。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：关于文件的输出，请参照第 1.3 节（见第 26 页。）</div><div class="line"></div><div class="line">正确：关于文件的输出，请参照第 1.3 节（见第 26 页）。</div></pre></td></tr></table></figure>
<h2 id="逗号"><a href="#逗号" class="headerlink" title="逗号"></a>逗号</h2><p>逗号<code>，</code>表示句子内部的一般性停顿。</p>
<p>注意避免“一逗到底”，即整个段落除了结尾，全部停顿都使用逗号。</p>
<h2 id="顿号"><a href="#顿号" class="headerlink" title="顿号"></a>顿号</h2><p>句子内部的并列词，应该用全角顿号(<code>、</code>) 分隔，而不用逗号，即使并列词是英语也是如此。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：我最欣赏的科技公司有 Google, Facebook, 腾讯, 阿里和百度等。</div><div class="line"></div><div class="line">正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里和百度等。</div></pre></td></tr></table></figure>
<p>英文句子中，并列词语之间使用半角逗号（<code>,</code>）分隔。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：Microsoft Office includes Word, Excel, PowerPoint, Outlook and other components.</div></pre></td></tr></table></figure>
<h2 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h2><p>分号<code>；</code>表示复句内部并列分句之间的停顿。</p>
<h2 id="引号"><a href="#引号" class="headerlink" title="引号"></a>引号</h2><p>引用时，应该使用全角双引号（<code>“ ”</code>），注意前后双引号不同。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：许多人都认为客户服务的核心是“友好”和“专业”。</div></pre></td></tr></table></figure>
<p>引号里面还要用引号时，外面一层用双引号，里面一层用单引号（<code>‘ ’</code>），注意前后单引号不同。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：鲍勃解释道：“我要放音乐，可萨利说，‘不行！’。”</div></pre></td></tr></table></figure>
<h2 id="圆括号"><a href="#圆括号" class="headerlink" title="圆括号"></a>圆括号</h2><p>补充说明时，使用全角圆括号<code>（）</code>，括号前后不加空格。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：请确认所有的连接（电缆和接插件）均安装牢固。</div></pre></td></tr></table></figure>
<h2 id="冒号"><a href="#冒号" class="headerlink" title="冒号"></a>冒号</h2><p>全角冒号（<code>：</code>）常用在需要解释的词语后边，引出解释和说明。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：请确认以下几项内容：时间、地点、活动名称，以及来宾数量。</div></pre></td></tr></table></figure>
<p>表示时间时，应使用半角冒号（<code>:</code>）。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：早上 8:00</div></pre></td></tr></table></figure>
<h2 id="省略号"><a href="#省略号" class="headerlink" title="省略号"></a>省略号</h2><p>省略号<code>……</code>表示语句未完、或者语气的不连续。它占两个汉字空间、包含六个省略点，不要使用<code>。。。</code>或<code>...</code>等非标准形式。</p>
<p>省略号不应与“等”这个词一起使用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">错误：我们为会餐准备了香蕉、苹果、梨…等各色水果。</div><div class="line"></div><div class="line">正确：我们为会餐准备了各色水果，有香蕉、苹果、梨……</div><div class="line"></div><div class="line">正确：我们为会餐准备了香蕉、苹果、梨等各色水果。</div></pre></td></tr></table></figure>
<h2 id="感叹号"><a href="#感叹号" class="headerlink" title="感叹号"></a>感叹号</h2><p>应该使用平静的语气叙述，尽量避免使用感叹号<code>！</code>。</p>
<p>不得多个感叹号连用，比如<code>！！</code>和<code>!!!</code>。</p>
<h2 id="破折号"><a href="#破折号" class="headerlink" title="破折号"></a>破折号</h2><p>破折号<code>————</code>一般用于做进一步解释。破折号应占两个汉字的位置。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：直觉————尽管它并不总是可靠的————告诉我，这事可能出了些问题。</div></pre></td></tr></table></figure>
<h2 id="连接号"><a href="#连接号" class="headerlink" title="连接号"></a>连接号</h2><p>连接号用于连接两个类似的词。</p>
<p>以下场合应该使用直线连接号（<code>-</code>），占一个半角字符的位置。</p>
<ul>
<li>两个名词的复合</li>
<li>图表编号</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">例句：氧化-还原反应</div><div class="line"></div><div class="line">例句：图 1-1</div></pre></td></tr></table></figure>
<p>以下场合应该使用波浪连接号（<code>～</code>），占一个全角字符的位置。</p>
<ul>
<li>数值范围（例如日期、时间或数字）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：2009 年～2011 年</div></pre></td></tr></table></figure>
<p>注意，波浪连接号前后两个值都应该加上单位。</p>
<p>波浪连接号也可以用汉字“至”代替。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：周围温度：-20°C 至 -10°C</div></pre></td></tr></table></figure>
<h1 id="章节结构"><a href="#章节结构" class="headerlink" title="章节结构"></a>章节结构</h1><p>软件手册是一部完整的书，建议采用下面的结构。</p>
<ul>
<li><strong>简介</strong>（Introduction）： [必备] [文件] 提供对产品和文档本身的总体的、扼要的说明</li>
<li><strong>快速上手</strong>（Getting Started）：[可选] [文件] 如何最快速地使用产品</li>
<li><strong>入门篇</strong>（Basics）： [必备] [目录] 又称”使用篇“，提供初级的使用教程<ul>
<li><strong>环境准备</strong>（Prerequisite）：[必备] [文件] 软件使用需要满足的前置条件</li>
<li><strong>安装</strong>（Installation）：[可选] [文件] 软件的安装方法</li>
<li><strong>设置</strong>（Configuration）：[必备] [文件] 软件的设置</li>
</ul>
</li>
<li><strong>进阶篇</strong>（Advanced)：[可选] [目录] 又称”开发篇“，提供中高级的开发教程</li>
<li><strong>API</strong>（Reference）：[可选] [目录|文件] 软件API的逐一介绍</li>
<li><strong>FAQ</strong>：[可选] [文件] 常见问题解答</li>
<li><strong>附录</strong>（Appendix）：[可选] [目录] 不属于教程本身、但对阅读教程有帮助的内容<ul>
<li><strong>Glossary</strong>：[可选] [文件] 名词解释</li>
<li><strong>Recipes</strong>：[可选] [文件] 最佳实践</li>
<li><strong>Troubleshooting</strong>：[可选] [文件] 故障处理</li>
<li><strong>ChangeLog</strong>：[可选] [文件] 版本说明</li>
<li><strong>Feedback</strong>：[可选] [文件] 反馈方式</li>
</ul>
</li>
</ul>
<p><strong>范例</strong></p>
<ul>
<li><a href="http://redux.js.org/index.html" target="_blank" rel="external">Redux 手册</a></li>
<li><a href="http://flight-manual.atom.io/" target="_blank" rel="external">Atom 手册</a></li>
</ul>
<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul>
<li><a href="http://wenku.baidu.com/view/23cc1a6527d3240c8447efbf.html" target="_blank" rel="external">产品手册中文写作规范</a>, by 华为</li>
<li><a href="http://docs.daocloud.io/write-docs/format" target="_blank" rel="external">写作规范和格式规范</a>, by DaoCloud</li>
<li><a href="http://www.hitachi-tc.co.jp/company/thesis/thesis.pdf" target="_blank" rel="external">技术写作技巧在日汉翻译中的应用</a>, by 刘方</li>
<li><a href="https://www.lengoo.de/documents/styleguides/lengoo_styleguide_ZH.pdf" target="_blank" rel="external">简体中文规范指南</a>，by lengoo</li>
<li><a href="https://open.leancloud.cn/copywriting-style-guide.html" target="_blank" rel="external">文档风格指南</a>, by LeanCloud</li>
<li><a href="https://docs.google.com/document/d/1R8lMCPf6zCD5KEA8ekZ5knK77iw9J-vJ6vEopPemqZM/edit" target="_blank" rel="external">豌豆荚文案风格指南</a>, by 豌豆荚</li>
<li><a href="https://github.com/sparanoid/chinese-copywriting-guidelines" target="_blank" rel="external">中文文案排版指北</a>，by sparanoid</li>
<li><a href="http://w3c.github.io/clreq/" target="_blank" rel="external">中文排版需求</a>，by W3C</li>
</ul>
]]></content>
    
    <summary type="html">
    
      国外有非常多优秀的技术文档,黑客也大多擅长写作,无奈`墙`以及国内外文化差异的原因,总是会让你对文档的理解有或多或少的偏差.而国内技术氛围对敏捷开发理解有误,不重视文档.仅有的技术文档,不管是出自翻译,还是由国内技术人员编写,质量高的也很少.看到这篇出自阮一峰的&lt;中文技术文档的写作规范&gt;,很有启发,遂摘录共勉!
    
    </summary>
    
      <category term="转" scheme="http://www.lizorn.com/categories/%E8%BD%AC/"/>
    
    
      <category term="写作规范" scheme="http://www.lizorn.com/tags/%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu docker镜像问题</title>
    <link href="http://www.lizorn.com//2016/11/02/docker-ubuntu-issue/"/>
    <id>http://www.lizorn.com//2016/11/02/docker-ubuntu-issue/</id>
    <published>2016-11-02T03:22:51.000Z</published>
    <updated>2016-11-05T00:59:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>emacs使用多年,发现spacemacs的配置还算符合胃口,于是想做一个基于Ubuntu16.04的Docker镜像,以后就可以带着这粒胶囊行走天下了.</p>
<p>没想到踩到一个坑…</p>
<p><em>Dockerfile:</em></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">RUN \</div><div class="line"> DEBIAN_FRONTEND=noninteractive apt-get update &amp;&amp; \</div><div class="line"> DEBIAN_FRONTEND=noninteractive apt-get -y install wget curl git emacs&amp;&amp; \</div><div class="line"> DEBIAN_FRONTEND=noninteractive apt-get -y autoremove &amp;&amp; \</div><div class="line"> DEBIAN_FRONTEND=noninteractive git <span class="built_in">clone</span> https://github.com/syl20bnr/spacemacs ~/.emacs.d &amp;&amp; \</div></pre></td></tr></table></figure>
<p>镜像build完成,启动emacs报错:<br><code>Debugger entered--Lisp error:(Wrong-type-argument stringp nil)</code></p>
<p>打开<code>--debug-info</code>进行调试,出错的堆栈信息如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">string-match(&quot;\\(fish\\|t?csh\\)$&quot; nil)</div><div class="line">exec-path-from-shell--standard-shell-p(nil)</div><div class="line">exec-path-from-shell-printf(&quot;%S\\000%s&quot; (&quot;$&#123;PATH-ad3306701bb5eb9f528b5c1b34485248&#125;&quot; &quot;$&#123;MANPYTHON-ad3306701bb5eb9f528b5c1b34485248&#125;&quot;))</div><div class="line">exec-path-from-shell-getenvs((&quot;PATH&quot; &quot;MANPATH&quot;))</div><div class="line">exec-path-from-shell-copy-envs((&quot;PATH&quot; &quot;MANPATH&quot;))</div><div class="line">exec-path-from-shell-initialize()</div><div class="line">(progn (exec-path-from-shell-initialize))</div><div class="line">...</div></pre></td></tr></table></figure>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>Emacs本质上是个操作系统,它有自己的环境变量.</p>
<p>所以为了让它可以使用宿主的<code>shell</code>,首先需要确保宿主和Emacs自身环境变量的一致性.</p>
<p><code>exec-path-from-shell</code> 就是一这么个<code>GNU Emacs</code>库,它将宿主的关键<code>SHELL</code>环境复制到EMACS的环境变量里,从而确保Emacs可以正常调用宿主机的<code>BASH</code>.</p>
<p>查看<code>exec-path-from-shell-printf</code>的代码:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">(defun exec-path-from-shell-printf (str &amp;optional args)</div><div class="line">  "Return the result of printing STR in the user's shell.</div><div class="line">  Executes $SHELL as interactive login shell.</div><div class="line">  STR is inserted literally in a single-quoted argument to printf,</div><div class="line">  and may therefore contain backslashed escape sequences understood</div><div class="line">  by printf.</div><div class="line">  ARGS is an optional list of args which will be inserted by printf</div><div class="line">  in place of any % placeholders in STR.  ARGS are not automatically</div><div class="line">  shell-escaped, so they may contain $ etc."</div><div class="line">  (let* ((printf-bin (or (executable-find "printf") "printf"))</div><div class="line">         (printf-command</div><div class="line">          (concat printf-bin</div><div class="line">                  " '__RESULT\\000" str "' "</div><div class="line">                  (mapconcat #'exec-path-from-shell--double-quote args " ")))</div><div class="line">         (shell-args (append exec-path-from-shell-arguments</div><div class="line">                             (list "-c"</div><div class="line">                                   (if (exec-path-from-shell--standard-shell-p (getenv "SHELL"))</div><div class="line">                                       printf-command</div><div class="line">                                     (concat "sh -c " (shell-quote-argument printf-command))))))</div><div class="line">         (shell (getenv "SHELL")))</div></pre></td></tr></table></figure>
<p>结合出错堆栈分析,问题基本可以定位,即: <code>(getenv &quot;SHELL&quot;)</code>去获取”SHELL”的环境变量,返回为空.</p>
<p>接着来查看<code>getenv</code>方法,它通过调用<code>getenv-internal</code>用来获取系统<code>environment</code>的变量.</p>
<p>查看系统环境变量,<code>env|grep SHELL</code>,果然无值.</p>
<p>那么只需要设置Docker-Ubuntu16.04容器的<code>SHELL</code>环境变量到<code>env</code>里就可以了.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">echo &quot;export SHELL=/bin/bash&quot; &gt;&gt; ~/.bashrc</div><div class="line">source ~/.bashrc</div></pre></td></tr></table></figure>
<p>运行<code>emacs</code>,问题解决.<br>此时Dockerfile可以配置如下:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">RUN \</div><div class="line"> DEBIAN_FRONTEND=noninteractive apt-get update &amp;&amp; \</div><div class="line"> DEBIAN_FRONTEND=noninteractive apt-get -y install wget curl git emacs&amp;&amp; \</div><div class="line"> DEBIAN_FRONTEND=noninteractive apt-get -y autoremove &amp;&amp; \</div><div class="line"> DEBIAN_FRONTEND=noninteractive git <span class="built_in">clone</span> https://github.com/syl20bnr/spacemacs ~/.emacs.d &amp;&amp; \</div><div class="line"> DEBIAN_FRONTEND=noninteractive <span class="built_in">echo</span> <span class="string">"export SHELL=/bin/bash"</span> &gt;&gt; ~/.bashrc &amp;&amp; \</div><div class="line"> ...</div></pre></td></tr></table></figure>
<h1 id="疑问"><a href="#疑问" class="headerlink" title="疑问"></a>疑问</h1><p>为什么官方Ubuntu Docker镜像没有将SHELL加到环境变量里?</p>
<ol>
<li><p>有一点很明确,Docker不同于虚拟机,它的镜像文件确实需要保持精简,只需为容器保留必要的linux核心功能就可以了.</p>
<p>Docker官方也给出了,<code>-env</code>的选项命令,用于自行进行环境变量配置.<br>在Dockerfile中也可以使用<code>ENV</code>进行环境变量的配置,我们的Dockerfile可以写成如下的形式.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">RUN \</div><div class="line"> ...</div><div class="line"> DEBIAN_FRONTEND=noninteractive ENV SHELL /bin/bash</div><div class="line"> ...</div></pre></td></tr></table></figure>
</li>
<li><p>那么,这个Docker镜像连<code>$SHELL</code>,<code>$BASH</code>等环境变量都省略了,是否还有其他功能被阉割了呢?</p>
<p>确实是的,问题还很多.</p>
<p>比如Docker下的ubuntu有一个很大的问题,它的<code>PID1</code>是<code>bash</code>!</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">root@0d9e754629e0:/<span class="comment"># ps</span></div><div class="line">  PID TTY          TIME CMD</div><div class="line">    1 ?        00:00:00 bash</div><div class="line">   37 ?        00:00:00 ps</div></pre></td></tr></table></figure>
<p>而完整的系统应该是<code>init</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">lizorn@lizorn:/etc$ ps aux</div><div class="line">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</div><div class="line">root         1  0.0  0.0 185604  6388 ?        Ss   10:39   0:01 /sbin/init splash</div><div class="line">root         2  0.0  0.0      0     0 ?        S    10:39   0:00 [kthreadd]</div></pre></td></tr></table></figure>
<p><code>PID1 init</code>是系统所有进程的祖先,同时它还负责接收和处理僵尸进程,<a href="https://blog.phusion.nl/2015/01/20/docker-and-the-pid-1-zombie-reaping-problem/" target="_blank" rel="external">the PID 1 zombie reaping problem</a>.</p>
<p>这个问题会导致docker-ubuntu系统有可能产生无法回收的僵尸进程,造成内存孤岛,浪费系统性能.需要额外的补丁程序来完成<code>PID1</code>任务的回收工作,修复该问题的轮子已经具备,你可以直接使用<a href="https://github.com/phusion/baseimage-docker" target="_blank" rel="external">phusion的baseimage</a>来制作Docker基础镜像文件.</p>
</li>
</ol>
<h1 id="附录-linux-环境变量"><a href="#附录-linux-环境变量" class="headerlink" title="附录: linux 环境变量"></a>附录: linux 环境变量</h1><h2 id="shell变量-amp-用户变量"><a href="#shell变量-amp-用户变量" class="headerlink" title="shell变量&amp;用户变量"></a>shell变量&amp;用户变量</h2><ul>
<li>set:显示当前shell的变量</li>
<li>env:显示当前用户的环境变量</li>
<li>export可将当前shell变量导出成用户变量.</li>
</ul>
<p><code>set</code>下的环境变量不等同于<code>env</code>下的用户变量,两者是有区分的,因为一个用户可以有多个<code>SHELL</code>,如<code>fish</code>,<code>tsh</code>等.</p>
<h2 id="linux-shell环境初始化流程"><a href="#linux-shell环境初始化流程" class="headerlink" title="linux shell环境初始化流程"></a>linux shell环境初始化流程</h2><p>Linux系统登录，<code>bash</code>其初始化过程依次加载如下文件(文件不存在就跳过):</p>
<p> <code>/etc/profile</code>-&gt;<code>/etc/profile.d</code>~<code>/.bash_profile</code>-&gt;<code>~/.bashrc</code>-&gt;<code>~/.bash_logout</code></p>
<ul>
<li>/etc/profile: 系统级用户环境变量.当用户第一次登录时,该文件被加载.设置命令行提示符<code>$PS</code>,并从/etc/profile.d目录的配置文件中搜集shell的设置.</li>
<li>/etc/bashrc: 系统级用户环境变量.当bash shell被打开时加载.</li>
<li>~/.bash_profile: 用户级环境变量.用户登录时加载,默认情况下,他设置一些环境变量,执行用户的.bashrc文件.</li>
<li>~/.bashrc: 用户级环境变量.该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时加载该文件.</li>
<li>~/.bash_logout:当每次退出系统(退出bash shell)时执行该文件.</li>
</ul>
]]></content>
    
    <summary type="html">
    
      emacs使用多年,发现spacemacs的配置还算符合胃口,于是想做一个基于Ubuntu16.04的Docker镜像,以后就可以带着这粒胶囊行走天下了.没想到踩到一个坑...
    
    </summary>
    
      <category term="开发者手册" scheme="http://www.lizorn.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="docker" scheme="http://www.lizorn.com/tags/docker/"/>
    
      <category term="spacemacs" scheme="http://www.lizorn.com/tags/spacemacs/"/>
    
      <category term="emacs" scheme="http://www.lizorn.com/tags/emacs/"/>
    
      <category term="linux环境变量" scheme="http://www.lizorn.com/tags/linux%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>键盘键位映射</title>
    <link href="http://www.lizorn.com//2016/11/01/keymap/"/>
    <id>http://www.lizorn.com//2016/11/01/keymap/</id>
    <published>2016-11-01T00:21:30.000Z</published>
    <updated>2016-11-05T00:59:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>自从<code>HHKB</code>键盘败家卖了后,其他键盘一直用着不爽,只能稍微设置下,聊以自慰.</p>
<p>首先,<code>capslock</code>必须死,这么好的位置居然被这废材占据着.</p>
<h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h1><h2 id="capslock-gt-ctrl"><a href="#capslock-gt-ctrl" class="headerlink" title="capslock-&gt;ctrl"></a>capslock-&gt;ctrl</h2><p><code>sudo emacs /etc/default/keyboard</code></p>
<p>修改下面这一行：</p>
<p><code>XKBOPTIONS=&quot;ctrl:nocaps&quot;</code></p>
<p>重新配置系统键盘，全部选默认：</p>
<p><code>sudo dpkg-reconfigure keyboard-configuration</code></p>
<h1 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h1><h2 id="capslock-gt-ctrl-1"><a href="#capslock-gt-ctrl-1" class="headerlink" title="capslock-&gt;ctrl"></a>capslock-&gt;ctrl</h2><p><a href="https://technet.microsoft.com/en-us/sysinternals/bb897578.aspx?f=255&amp;MSPPError=-2147217396" target="_blank" rel="external">Ctrl2Cap</a></p>
<h1 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h1><h2 id="capslock-gt-ctrl-2"><a href="#capslock-gt-ctrl-2" class="headerlink" title="capslock-&gt;ctrl"></a>capslock-&gt;ctrl</h2><p> 打开<code>System Preferences</code> → <code>Keyboard</code> → <code>Modifier Keys</code></p>
]]></content>
    
    <summary type="html">
    
      自从`HHKB`键盘败家卖了后,其他键盘一直用着不爽,只能稍微设置下,聊以自慰.
    
    </summary>
    
      <category term="杂货摊" scheme="http://www.lizorn.com/categories/%E6%9D%82%E8%B4%A7%E6%91%8A/"/>
    
    
      <category term="keymap" scheme="http://www.lizorn.com/tags/keymap/"/>
    
  </entry>
  
  <entry>
    <title>hadoop快速入门</title>
    <link href="http://www.lizorn.com//2016/10/27/hadoop-quick-start/"/>
    <id>http://www.lizorn.com//2016/10/27/hadoop-quick-start/</id>
    <published>2016-10-27T04:53:48.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是hadoop"><a href="#什么是hadoop" class="headerlink" title="什么是hadoop?"></a>什么是hadoop?</h1><p>Hadoop是一个由Apache基金会所开发的分布式系统基础架构，用户可以在不知道底层细节的情况下,将可自己的程序运行在分布式系统上,利用计算机集群对海量数据进行高速的数据运算和存储.</p>
<p>要学习hadoop,首先要了解它的核心设计:MapReduce和HDFS.</p>
<h2 id="HDFS"><a href="#HDFS" class="headerlink" title="HDFS"></a>HDFS</h2><p>HDFS(Hadoop Distributed File System，Hadoop分布式文件系统),是一个具备高度容错性的文件系统,可以部署在廉价的系统上.</p>
<h3 id="基本架构"><a href="#基本架构" class="headerlink" title="基本架构"></a>基本架构</h3><p><img src="/res/img/hadoop/hdfsarchitecture.png" alt=""></p>
<ul>
<li><code>Block</code>: 块文件,通常是64M.</li>
<li><code>DataNode</code>：用于存储Block块文件.</li>
<li><code>NameNode</code>: 保存整个文件系统的目录,文件和分布信息.指示文件是如何被拆分成block以及这些block都存储到了哪些DateNode节点上.通常只有一台,<code>2.X</code>版本提供了master-slave模式.</li>
</ul>
<h2 id="MapReduce"><a href="#MapReduce" class="headerlink" title="MapReduce"></a>MapReduce</h2><p>MapReduce是一种编程模型,用于大规模数据集(大于1TB)的并行运算.基本原理就是：分析大数据，然后析分成小块逐个分析，最后再将提取出来的数据汇总分析，最终获得我们想要的内容。</p>
<p>MapReduce操作的都是<key, value="">键值对上,大致流程如下:</key,></p>
<blockquote><p>(input) <k1, v1=""> -&gt; map -&gt; <k2, v2=""> -&gt; combine -&gt; <k2, v2=""> -&gt; reduce -&gt; <k3, v3=""> (output)</k3,></k2,></k2,></k1,></p>
</blockquote>
<h2 id="Apache-hadoop家族"><a href="#Apache-hadoop家族" class="headerlink" title="Apache hadoop家族"></a>Apache hadoop家族</h2><h3 id="基础成员"><a href="#基础成员" class="headerlink" title="基础成员"></a>基础成员</h3><ul>
<li>Hadoop Common</li>
<li>Hadoop Distributed File System (HDFS™)</li>
<li>Hadoop MapReduce</li>
</ul>
<h3 id="其他成员"><a href="#其他成员" class="headerlink" title="其他成员"></a>其他成员</h3><ul>
<li>Hadoop YARN: 用于工作调度和集群资源管理的框架.</li>
<li>Avro™: 是一个数据序列化系统,设计用于支持数据密集型,大批量数据交换的应用.Avro是新的数据序列化格式与传输工具,将逐步取代Hadoop原有的IPC机制.</li>
<li>Cassandra™:是一套开源分布式NoSQL数据库系统.</li>
<li>Chukwa™: 是一个开源的用于监控大型分布式系统的数据收集系统，它可以将各种各样类型的数据收集成适合Hadoop处理的文件,并保存在HDFS中供Hadoop进行各种MapReduce操作.</li>
<li>HBase™: 是一个高可靠性、高性能、面向列、可伸缩的分布式存储系统,利用HBase技术可在廉价PC Server上搭建起大规模结构化存储集群.</li>
<li>Hive™: 基于Hadoop的一个数据仓库工具,可以将结构化的数据文件映射为一张数据库表,通过类SQL语句快速实现简单的MapReduce统计,不必开发专门的MapReduce应用,十分适合数据仓库的统计分析.</li>
<li>Mahout™: 基于Hadoop的机器学习和数据挖掘的一个分布式框架.Mahout用MapReduce实现了部分数据挖掘算法,解决了并行挖掘的问题。</li>
<li>Pig™: Pig提供更高级的数据流语言，类似SQL的语言(Pig Latin),有效提高MapReduce编写的抽象表现能力.</li>
<li>Spark™: 一个新兴的大数据处理引擎,提供了一个集群的分布式抽象模型RDD(Resilient Distributed Dataset).支持的实际应用范围非常广,如:ETL,机器学习,图像处理等.</li>
<li>Tez™: 是Apache最新开源的支持DAG作业的计算框架,它直接源于MapReduce框架,核心思想是将Map和Reduce两个操作进一步拆分,即Map被拆分成Input、Processor、Sort、Merge和Output,Reduce被拆分成Input、Shuffle、Sort、Merge、Processor和Output等,这样,这些分解后的元操作可以任意灵活组合,产生新的操作,这些操作经过一些控制程序组装后,可形成一个大的DAG作业.</li>
<li>ZooKeeper™: 是一个为分布式应用所设计的分布的、开源的协调服务，它主要是用来解决分布式应用中经常遇到的一些数据管理问题,简化分布式应用协调及其管理的难度,提供高性能的分布式服务.</li>
</ul>
<h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p><code>docker run -it invain/hadoop</code></p>
<h1 id="hadoop案例-统计词频"><a href="#hadoop案例-统计词频" class="headerlink" title="hadoop案例:统计词频"></a>hadoop案例:统计词频</h1><p>统计一个文本文件,一本书，或者一个web上各个单词出现的频率.</p>
<h2 id="WordCount-java源码"><a href="#WordCount-java源码" class="headerlink" title="WordCount.java源码"></a>WordCount.java源码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.util.StringTokenizer;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WordCount</span> </span>&#123;</div><div class="line"></div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">TokenizerMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">Object</span>, <span class="title">Text</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt;</span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> IntWritable one = <span class="keyword">new</span> IntWritable(<span class="number">1</span>);</div><div class="line">    <span class="keyword">private</span> Text word = <span class="keyword">new</span> Text();</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">map</span><span class="params">(Object key, Text value, Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</div><div class="line">      StringTokenizer itr = <span class="keyword">new</span> StringTokenizer(value.toString());</div><div class="line">      <span class="keyword">while</span> (itr.hasMoreTokens()) &#123;</div><div class="line">        word.set(itr.nextToken());</div><div class="line">        context.write(word, one);</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">IntSumReducer</span> <span class="keyword">extends</span> <span class="title">Reducer</span>&lt;<span class="title">Text</span>,<span class="title">IntWritable</span>,<span class="title">Text</span>,<span class="title">IntWritable</span>&gt; </span>&#123;</div><div class="line">    <span class="keyword">private</span> IntWritable result = <span class="keyword">new</span> IntWritable();</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reduce</span><span class="params">(Text key, Iterable&lt;IntWritable&gt; values,</span></span></div><div class="line">                        Context context) <span class="keyword">throws</span> IOException, InterruptedException &#123;</div><div class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (IntWritable val : values) &#123;</div><div class="line">          sum += val.get();</div><div class="line">        &#125;</div><div class="line">        result.set(sum);</div><div class="line">        context.write(key, result);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">    Configuration conf = <span class="keyword">new</span> Configuration();</div><div class="line">    Job job = Job.getInstance(conf, <span class="string">"word count"</span>);</div><div class="line">    job.setJarByClass(WordCount.class);</div><div class="line">    job.setMapperClass(TokenizerMapper.class);</div><div class="line">    job.setCombinerClass(IntSumReducer.class);</div><div class="line">    job.setReducerClass(IntSumReducer.class);</div><div class="line">    job.setOutputKeyClass(Text.class);</div><div class="line">    job.setOutputValueClass(IntWritable.class);</div><div class="line">    FileInputFormat.addInputPath(job, <span class="keyword">new</span> Path(args[<span class="number">0</span>]));</div><div class="line">    FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> Path(args[<span class="number">1</span>]));</div><div class="line">    System.exit(job.waitForCompletion(<span class="keyword">true</span>) ? <span class="number">0</span> : <span class="number">1</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hadoop com.sun.tools.javac.Main WordCount.java</div><div class="line">jar cf wc.jar WordCount*.class</div></pre></td></tr></table></figure>
<h2 id="创建FS"><a href="#创建FS" class="headerlink" title="创建FS"></a>创建FS</h2><p>在hdfs上的用户目录下创建输入/输出文件的文件夹.</p>
<p><code>hadoop fs -mkdir -p /user/{whoami}/wordcount/input</code></p>
<p>下本书</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir -p ~/tmp/book/</div><div class="line">cd ~/tmp/book</div><div class="line">wget http://www.gutenberg.org/files/5000/5000-8.txt</div></pre></td></tr></table></figure>
<p>将书放到HDFS上</p>
<p><code>hadoop fs -put ~/tmp/book/*.txt /user/${whoami}/input</code></p>
<h2 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hadoop jar wc.jar WordCount /user/$&#123;whoami&#125;/wordcount/input /user/$&#123;whoami&#125;/wordcount/output</div></pre></td></tr></table></figure>
<p>查看解析内容<br><code>hadoop fs -cat /user/${whoami}/wordcount/output/part-r-00000</code></p>
<h1 id="hadoop-steaming"><a href="#hadoop-steaming" class="headerlink" title="hadoop steaming"></a>hadoop steaming</h1><p>Hadoop是使用Java语言编写的,所以最直接的方式的就是使用Java语言来实现Mapper和Reducer,然后配置MapReduce Job,提交到集群计算环境来完成计算.<br>hadoop也为其它语言，如C++、Shell、Python、 Ruby、PHP、Perl等提供了支持，这个工具就是Hadoop Streaming.</p>
<h2 id="wordcount的python实现"><a href="#wordcount的python实现" class="headerlink" title="wordcount的python实现"></a>wordcount的python实现</h2><h3 id="mapper-py源码"><a href="#mapper-py源码" class="headerlink" title="mapper.py源码"></a>mapper.py源码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_input</span><span class="params">(file)</span>:</span></div><div class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> file:</div><div class="line">        <span class="keyword">yield</span> line.split()</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(separator=<span class="string">'\t'</span>)</span>:</span></div><div class="line">    data = read_input(sys.stdin)</div><div class="line">    <span class="keyword">for</span> words <span class="keyword">in</span> data:</div><div class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> words:</div><div class="line">            <span class="keyword">print</span> <span class="string">"%s%s%d"</span> % (word, separator, <span class="number">1</span>)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="reducer-py"><a href="#reducer-py" class="headerlink" title="reducer.py"></a>reducer.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="keyword">from</span> operator <span class="keyword">import</span> itemgetter</div><div class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> groupby</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_mapper_output</span><span class="params">(file, separator = <span class="string">'\t'</span>)</span>:</span></div><div class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> file:</div><div class="line">        <span class="keyword">yield</span> line.rstrip().split(separator, <span class="number">1</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(separator = <span class="string">'\t'</span>)</span>:</span></div><div class="line">    data = read_mapper_output(sys.stdin, separator = separator)</div><div class="line">    <span class="keyword">for</span> current_word, group <span class="keyword">in</span> groupby(data, itemgetter(<span class="number">0</span>)):</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            total_count = sum(int(count) <span class="keyword">for</span> current_word, count <span class="keyword">in</span> group)</div><div class="line">            <span class="keyword">print</span> <span class="string">"%s%s%d"</span> % (current_word, separator, total_count)</div><div class="line">        <span class="keyword">except</span> valueError:</div><div class="line">            <span class="keyword">pass</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>可以写个sh脚本运行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">hadoop jar $STREAM  \</div><div class="line">-files ./mapper.py,./reducer.py \</div><div class="line">-mapper ./mapper.py \</div><div class="line">-reducer ./reducer.py \</div><div class="line">-input /user/$&#123;whoami&#125;/input/ \</div><div class="line">-output ~/output</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      hadoop不只是hadoop而已
    
    </summary>
    
      <category term="开发者手册" scheme="http://www.lizorn.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="大数据" scheme="http://www.lizorn.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="hadoop" scheme="http://www.lizorn.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Docker环境</title>
    <link href="http://www.lizorn.com//2016/10/27/docker-developer-env/"/>
    <id>http://www.lizorn.com//2016/10/27/docker-developer-env/</id>
    <published>2016-10-27T03:03:37.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>如今技术革新非常快,搭建环境也日趋繁杂.我是个爱好折腾之人,时不时的总想把玩下新的技术,每天在win10,ubuntu,mac系统间来回切换,感谢Docker,救我于水火.</p>
<h1 id="基础镜像"><a href="#基础镜像" class="headerlink" title="基础镜像"></a>基础镜像</h1><p>自己裁剪一个baseImage,带emacs编辑器.编写Dockerfile,并编译</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/LiZoRN/DockerBaseImage.git</div><div class="line"><span class="built_in">cd</span> DockerBseImage</div><div class="line">docker build -t invain/ubuntu .</div></pre></td></tr></table></figure>
<p>将镜像文件push到<code>Docker hub</code></p>
<p><code>docker push invain/ubuntu</code></p>
<p>其他环境下就可以直接使用</p>
<p><code>docker pull invain/ubuntu</code></p>
<p><em>注意</em>: Docker镜像共享，不建议直接拿Dockerfile build生产, 而应从Docker镜像库里拉,避免镜像Build的过程中引入编译环境差异.</p>
<h1 id="Hadoop环境搭建-单站"><a href="#Hadoop环境搭建-单站" class="headerlink" title="Hadoop环境搭建(单站)"></a>Hadoop环境搭建(单站)</h1><h2 id="创建hadoop用户"><a href="#创建hadoop用户" class="headerlink" title="创建hadoop用户"></a>创建hadoop用户</h2><p>增加hadoop用户，授予管理员权限，并登录</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sudo useradd -m hadoop</div><div class="line">$ sudo passwd hadoop</div><div class="line">$ sudo adduser hadoop sudo</div><div class="line">$ sudo su hadoop</div></pre></td></tr></table></figure>
<h2 id="安装并配置SSH"><a href="#安装并配置SSH" class="headerlink" title="安装并配置SSH"></a>安装并配置SSH</h2><p>安装openssh</p>
<p><code>$ sudo apt-get install openssh-server</code></p>
<p>启动</p>
<p><code>$ sudo /etc/init.d/ssh start</code></p>
<p>设置免密码登录，生成私钥和公钥,并将公钥追加到 authorized_keys中，它为用户保存所有允许登录到ssh客户端用户的公钥内容。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -P <span class="string">""</span></div><div class="line">$  cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</div></pre></td></tr></table></figure>
<h2 id="安装Java环境"><a href="#安装Java环境" class="headerlink" title="安装Java环境"></a>安装Java环境</h2><p><code>sudo apt-get install openjdk-7-jdk</code></p>
<p>获取java安装目录.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ update-alternatives --config java</div><div class="line">There is only one alternative <span class="keyword">in</span> link group java (providing /usr/bin/java): /usr</div><div class="line">/lib/jvm/java-7-openjdk-amd64/jre/bin/java</div><div class="line">Nothing to configure.</div></pre></td></tr></table></figure>
<p><code>~/.bashrc</code>中写入JAVA_HOME路径,</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=JDK安装路径</div></pre></td></tr></table></figure>
<h2 id="安装Hadoop"><a href="#安装Hadoop" class="headerlink" title="安装Hadoop"></a>安装Hadoop</h2><p>安装hadoop,如2.7.3版本</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget http://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-2.7.3/hadoop-2.7.3.tar.gz</div><div class="line">sudo tar xzf hadoop-2.7.3.tar.gz</div><div class="line">sudo mv hadoop-2.7.3 /usr/<span class="built_in">local</span>/hadoop</div></pre></td></tr></table></figure>
<p>配置Hadoop的环境变量</p>
<p>给你的<code>~/bashrc</code>添加如下内容.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#HADOOP VARIABLES START</span></div><div class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64</div><div class="line"><span class="built_in">export</span> HADOOP_HOME=/usr/<span class="built_in">local</span>/hadoop</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HADOOP_HOME</span>/bin</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HADOOP_HOME</span>/sbin</div><div class="line"><span class="built_in">export</span> HADOOP_MAPRED_HOME=<span class="variable">$HADOOP_HOME</span></div><div class="line"><span class="built_in">export</span> HADOOP_COMMON_HOME=<span class="variable">$HADOOP_HOME</span></div><div class="line"><span class="built_in">export</span> HADOOP_HDFS_HOME=<span class="variable">$HADOOP_HOME</span></div><div class="line"><span class="built_in">export</span> YARN_HOME=<span class="variable">$HADOOP_HOME</span></div><div class="line"><span class="built_in">export</span> HADOOP_COMMON_LIB_NATIVE_DIR=<span class="variable">$HADOOP_HOME</span>/lib/native</div><div class="line"><span class="built_in">export</span> HADOOP_OPTS=<span class="string">"-Djava.library.path=<span class="variable">$HADOOP_HOME</span>/lib"</span></div><div class="line"><span class="built_in">export</span> STREAM=<span class="variable">$HADOOP_HOME</span>/share/hadoop/tools/lib/hadoop-streaming-*.jar</div><div class="line"><span class="built_in">export</span> HADOOP_CLASSPATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib/tools.jar</div><div class="line"><span class="comment">#HADOOP VARIABLES END</span></div></pre></td></tr></table></figure>
<p>验证hadoop是否安装成功</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">hadoop@8bbae082ad69:~$ hadoop version</div><div class="line">Hadoop 2.7.3</div><div class="line">Subversion https://git-wip-us.apache.org/repos/asf/hadoop.git -r baa91f7c6bc9cb92be5982de4719c1c8af91ccff</div><div class="line">Compiled by root on 2016-08-18T01:41Z</div><div class="line">Compiled with protoc 2.5.0</div><div class="line">From <span class="built_in">source</span> with checksum 2e4ce5f957ea4db193bce3734ff29ff4</div><div class="line">This <span class="built_in">command</span> was run using /usr/<span class="built_in">local</span>/hadoop/share/hadoop/common/hadoop-common-2.7.3.jar</div></pre></td></tr></table></figure>
<p>将镜像push到Docker hub</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">docker commit 8bbae082ad69 invain/hadoop</div><div class="line">docker push invain/hadoop</div></pre></td></tr></table></figure>
<h1 id="spark"><a href="#spark" class="headerlink" title="spark"></a>spark</h1><p>运行一个java docker容器.</p>
<p><code>docker run -it invain/java</code></p>
<p>下载spark包.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget http://mirrors.hust.edu.cn/apache/spark/spark-2.0.1/spark-2.0.1-bin-hadoop2.7.tgz</div><div class="line">sudo tar xzf spark-2.0.1-bin-hadoop2.7.tgz</div><div class="line">sudo mv spark-2.0.1-bin-hadoop2.7 /usr/local/spark</div></pre></td></tr></table></figure>
<p>配置好环境变量.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> SPARK_HOME=/usr/<span class="built_in">local</span>/spark</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$SPARK_HOME</span>/bin:<span class="variable">$PATH</span></div></pre></td></tr></table></figure>
<p>跑个小小示例.<br>创建个文本文件,如<code>hellospark.txt</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hello world!</div><div class="line">hello spark!</div></pre></td></tr></table></figure>
<p>运行spark的python交互式控制台,<code>pyspark</code>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">hadoop@4532e4bdaa51:~$ pyspark</div><div class="line">Python 2.7.6 (default, Jun 22 2015, 17:58:13)</div><div class="line">[GCC 4.8.2] on linux2</div><div class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</div><div class="line">Using Spark&apos;s default log4j profile: org/apache/spark/log4j-defaults.properties</div><div class="line">Setting default log level to &quot;WARN&quot;.</div><div class="line">To adjust logging level use sc.setLogLevel(newLevel).</div><div class="line">16/10/28 02:10:51 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</div><div class="line">Welcome to</div><div class="line">      ____              __</div><div class="line">     / __/__  ___ _____/ /__</div><div class="line">    _\ \/ _ \/ _ `/ __/  &apos;_/</div><div class="line">   /__ / .__/\_,_/_/ /_/\_\   version 2.0.1</div><div class="line">      /_/</div><div class="line"></div><div class="line">Using Python version 2.7.6 (default, Jun 22 2015 17:58:13)</div><div class="line">SparkSession available as &apos;spark&apos;.</div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure>
<p>使用textFile加载文本到RDD,进行’wordcount’.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; text = sc.textFile(<span class="string">"hellospark.txt"</span>)</div><div class="line">&gt;&gt;&gt; counts = text.flatMap(lambda line: line.split(<span class="string">" "</span>)).map(lambda word: (word,1)).reduceByKey(lambda x,y: x + y)</div></pre></td></tr></table></figure></p>
<p>调用saveAsTextFile,分布式作业开始了…<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">counts.saveAsTextFile(&quot;hellospark_out&quot;)</div></pre></td></tr></table></figure></p>
<p>可以在工作台输出目录里查看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">hadoop@4532e4bdaa51:~$ cat hellospark_out/part-00000</div><div class="line">(u&apos;&apos;, 1)</div><div class="line">(u&apos;spark!&apos;, 1)</div><div class="line">(u&apos;world!&apos;, 1)</div><div class="line">(u&apos;hello&apos;, 2)</div></pre></td></tr></table></figure></p>
<h1 id="tensorflow"><a href="#tensorflow" class="headerlink" title="tensorflow"></a>tensorflow</h1><p><code>docker run -it b.gcr.io/tensorflow/tensorflow</code></p>
<h1 id="Docker-hub"><a href="#Docker-hub" class="headerlink" title="Docker hub"></a>Docker hub</h1><p>需要什么库可以从<a href="https://hub.docker.com/explore/" target="_blank" rel="external">docker hub</a>找.</p>
<p>Docker hub是一个类似Github一样的地方,只不过前者是一个镜像仓库.</p>
<p>docker可以让你的环境配置异常简单，通常你只需要执行一个命令.</p>
<p><em>Mysql</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker run -p 3306:3306 --name username -e MYSQL_ROOT_PASSWORD=password -d mysql:tag</div></pre></td></tr></table></figure>
<p><em>mongo</em></p>
<p><code>docker run --name some-mongo -d mongo</code></p>
<p><em><a href="https://hub.docker.com/_/oraclelinux/" target="_blank" rel="external">Oracle</a></em></p>
]]></content>
    
    <summary type="html">
    
      如今技术革新非常快,搭建环境也日趋繁杂.我是个爱好折腾之人,时不时的总想把玩下新的技术,每天在win10,ubuntu,mac系统间来回切换,感谢Docker,救我于水火.
    
    </summary>
    
      <category term="开发者手册" scheme="http://www.lizorn.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="开发环境" scheme="http://www.lizorn.com/tags/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
      <category term="docker" scheme="http://www.lizorn.com/tags/docker/"/>
    
      <category term="docker base image" scheme="http://www.lizorn.com/tags/docker-base-image/"/>
    
      <category term="hadoop" scheme="http://www.lizorn.com/tags/hadoop/"/>
    
      <category term="spark" scheme="http://www.lizorn.com/tags/spark/"/>
    
      <category term="tesoflow" scheme="http://www.lizorn.com/tags/tesoflow/"/>
    
  </entry>
  
  <entry>
    <title>代码的味道</title>
    <link href="http://www.lizorn.com//2016/10/25/Taste-of-code/"/>
    <id>http://www.lizorn.com//2016/10/25/Taste-of-code/</id>
    <published>2016-10-25T12:44:06.000Z</published>
    <updated>2016-11-05T00:59:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/res/img/tasteofcode/codereview.png" alt=""></p>
<h1 id="代码的味道"><a href="#代码的味道" class="headerlink" title="代码的味道"></a>代码的味道</h1><h2 id="你的代码臭不可闻，为什么？"><a href="#你的代码臭不可闻，为什么？" class="headerlink" title="你的代码臭不可闻，为什么？"></a>你的代码臭不可闻，为什么？</h2><ul>
<li>工期太赶</li>
<li>前任的坑</li>
<li>还是…水平未到？</li>
</ul>
<p>很多程序员会给自己的代码找很多借口，我认为糟糕代码的产生除了上述原因外，主要是思想问题，要摒弃糟糕的代码，让代码变得整洁，必须要先弄明白一件事情：大家写程序，你的客户是谁?</p>
<h2 id="代码的表现力"><a href="#代码的表现力" class="headerlink" title="代码的表现力"></a>代码的表现力</h2><blockquote>
<p>“程序写出来是给人看的,附带能在机器上运行. “</p>
</blockquote>
<p>代码的表现力主要体现在两个方面:</p>
<ul>
<li>软件的部分功能就是解释自身,为了写出优秀的软件,你必须假定用户对你的软件基本上一无所知.</li>
<li>源代码也应该可以自己解释自己,你需要保证源代码自身的可观赏性.</li>
</ul>
<p>说白了，编程不是简单的完成一次功能交付，代码的表现形式不仅仅是产品本身，还包括代码自己。也就是说在你充分的实现‘功能客户’的需求的同时，你还需要满足‘code reviewer’的胃口。</p>
<p>我们就需要让代码变的整洁。</p>
<h3 id="什么是整洁的代码"><a href="#什么是整洁的代码" class="headerlink" title="什么是整洁的代码?"></a>什么是整洁的代码?</h3><blockquote><p>我喜欢优雅和高效的代码.代码逻辑应当直截了当,叫缺陷难以隐藏;尽量减少依赖关系,使之便于维护;依据某种分层战略完善错误处理代码;性能调至最优,省得引诱别人做没规矩的优化,搞出一堆换乱来.整洁的代码只做好一件事.</p>
<footer><strong>Bjarne Shroustrup</strong><cite>C++程序设计语言</cite></footer></blockquote>
<p>C++之父Bjarne认为代码应该是优雅而高效的.</p>
<blockquote><p>整洁的代码简单直接;整洁的代码如同优美的散文;整洁的代码从不隐藏设计者的意图,充满了干净利落的抽象和直截了当的控制语句.</p>
<footer><strong>rady Booch</strong><cite>面向对象分析与设计</cite></footer></blockquote>
<p>编程是一门技艺，代码是一种艺术，很难有语言表达。我摘录了《clean code》书中‘味道与启发’这一章节部分清单，进行了修整和梳理，清单里的代码会让你非常不舒服，清单的内容需要持续维护和更新。</p>
<h1 id="命名问题"><a href="#命名问题" class="headerlink" title="命名问题"></a>命名问题</h1><h2 id="命名要具备描述性-避免歧义"><a href="#命名要具备描述性-避免歧义" class="headerlink" title="命名要具备描述性,避免歧义"></a>命名要具备描述性,避免歧义</h2><ul>
<li>名副其实, 好的命名不需要额外的注释</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> d; <span class="comment">// 消逝的时间,以日计  ----bad</span></div><div class="line"><span class="keyword">int</span> elapsedTimeInDays; <span class="comment">//  ----good</span></div></pre></td></tr></table></figure>
<ul>
<li>避免误导</li>
</ul>
<p>必须避免留下隐藏代码本意的错误线索,避免使用与本意相悖的词,如系统预留字段要尽量避免,歧义的缩写也应当避免.<br>比如用<code>accountList</code>表示一组账号，会有歧义，这是是List类型? 用<code>accountGroup</code>则能更好的表示。</p>
<ul>
<li>命名要有明显的区别</li>
</ul>
<p>以下的方法很难区分具体含义：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">getActiveCustomer();</div><div class="line">getActiveCustomers();</div><div class="line">getActiveCustomerInfo()</div></pre></td></tr></table></figure></p>
<ul>
<li>命名要具备可读性</li>
</ul>
<p>命名通常要用于交流和沟通，需要具备基本的口语习惯。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> Date modymdhms; <span class="comment">//bad</span></div><div class="line"><span class="keyword">private</span> Date modificationTimestamp; /good</div></pre></td></tr></table></figure></p>
<ul>
<li>类名使用名词,方法名使用动词.</li>
</ul>
<h2 id="名称应与抽象层级相符"><a href="#名称应与抽象层级相符" class="headerlink" title="名称应与抽象层级相符."></a>名称应与抽象层级相符.</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Modem</span> </span>&#123;</div><div class="line">  <span class="function"><span class="keyword">boolean</span> <span class="title">dial</span><span class="params">(String phoneNumber)</span></span>;<span class="comment">//应修改为 boolean connect(String phoneNumber);</span></div><div class="line">  <span class="function"><span class="keyword">boolean</span> <span class="title">disconnect</span><span class="params">()</span></span>;</div><div class="line">  <span class="function"><span class="keyword">boolean</span> <span class="title">send</span><span class="params">(<span class="keyword">char</span> c)</span></span>;</div><div class="line">  <span class="function"><span class="keyword">char</span> <span class="title">recv</span><span class="params">()</span></span>;</div><div class="line">  <span class="function">String <span class="title">getConnectedPhoneNumber</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="尽可能使用标准命名法"><a href="#尽可能使用标准命名法" class="headerlink" title="尽可能使用标准命名法."></a>尽可能使用标准命名法.</h2><ul>
<li>如果名称基于现有的约定或用法,命名就比较容易理解</li>
<li>命名要遵循专业领域的命名</li>
<li>命名要遵循团队的编码规范</li>
</ul>
<h2 id="名称的长度应与作用范围的广泛度相关"><a href="#名称的长度应与作用范围的广泛度相关" class="headerlink" title="名称的长度应与作用范围的广泛度相关."></a>名称的长度应与作用范围的广泛度相关.</h2><ul>
<li>对于较小的作用范围,可以用很短的名称,而对于较大作用范围就该用较长的名称.</li>
<li>作用范围在5行之内,i和j之类的变量名没有问题,如果范围变大,需要加长命名长度,用更有意义的命名.</li>
</ul>
<h2 id="避免编码"><a href="#避免编码" class="headerlink" title="避免编码."></a>避免编码.</h2><p>不应该在名称中包括类型或者作用范围信息，以下命名方法均可以考虑废弃：</p>
<ul>
<li>匈牙利标记法: <code>cClass</code>, <code>init</code>,<code>intNUmber</code>;</li>
<li>成员前缀: <code>private String m_member;</code></li>
<li>接口: 接口已I开头，<code>IInterface</code></li>
</ul>
<h2 id="名称应说明附加功能和副作用"><a href="#名称应说明附加功能和副作用" class="headerlink" title="名称应说明附加功能和副作用"></a>名称应说明附加功能和副作用</h2><ul>
<li>命名应该说明函数,变量或类的一切信息,不要用名称掩蔽副作用</li>
<li>不使用简单的动词来描述不止做了一个简单动作的函数.</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> ObjectOutputStream <span class="title">getOos</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">     <span class="keyword">if</span> (m_oos == <span class="keyword">null</span>) &#123;</div><div class="line">         m_oos = <span class="keyword">new</span> ObjectOutputStream(m_socket.getOutputStream());</div><div class="line">     &#125;</div><div class="line">     <span class="keyword">return</span> m_oos;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>getOos</code>应改为<code>createOrReturnOos</code></p>
<h1 id="注释问题"><a href="#注释问题" class="headerlink" title="注释问题"></a>注释问题</h1><h2 id="不恰当的注释"><a href="#不恰当的注释" class="headerlink" title="不恰当的注释."></a>不恰当的注释.</h2><p>注释只应该描述相关代码和设计的技术信息.<br>如描述一些修改记录,问题追踪等是不恰当的注释,这些注释过时且无实际意义，会扰乱和降低阅读体验.<br>这些工作需要交给版本能控制工具。</p>
<h2 id="废弃的注释"><a href="#废弃的注释" class="headerlink" title="废弃的注释."></a>废弃的注释.</h2><p>注释也需要维护,过时,无关或不正确的注释会引起歧义并影响代码的可读性,需第一时间删除或更新.</p>
<h2 id="冗余注释"><a href="#冗余注释" class="headerlink" title="冗余注释."></a>冗余注释.</h2><p>代码已经充分自我描述了,那么注释就是冗余的. 注释应该是代码未能涉及信息的补充.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">i++;  <span class="comment">// increment i</span></div></pre></td></tr></table></figure>
<h2 id="坏注释"><a href="#坏注释" class="headerlink" title="坏注释."></a>坏注释.</h2><p>注释也是代码的一部分,要保持简洁和语句通顺,别在里面闲扯.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line">I fear that I will always be A lonely number like root three</div><div class="line">A three is all that's good and right</div><div class="line">Why must my three keep out of sight Beneath a vicious square-root sign?</div><div class="line">I wish instead I were a nine</div><div class="line">For nine could thwart this evil trick With just some quick arithmetic</div><div class="line">I know I'll never see the sun</div><div class="line">As 1.7321...</div><div class="line">Such is my reality A sad irrationality</div><div class="line">When,hark, just what is this I see?</div><div class="line">Another square root of a three</div><div class="line">Has quietly come waltzing by</div><div class="line">Together now we multiply</div><div class="line">To form a number we prefer</div><div class="line">Rejoicing as an integer</div><div class="line">We break free from our mortal bonds</div><div class="line">And with a wave of magic wands</div><div class="line">Our square-root signs become unglued</div><div class="line">And love for me has been renewed</div><div class="line"> */</div><div class="line"><span class="keyword">double</span> number = Math.sqrt(<span class="number">3</span>)*Math.sqrt(<span class="number">3</span>);</div></pre></td></tr></table></figure>
<h2 id="废弃的代码"><a href="#废弃的代码" class="headerlink" title="废弃的代码."></a>废弃的代码.</h2><p>不应该出现注释的代码, 注释掉的代码需要及时删除,版本控制系统会记录没一次的修改,不需要通过注释的形式.</p>
<h1 id="一般性问题"><a href="#一般性问题" class="headerlink" title="一般性问题"></a>一般性问题</h1><h2 id="理所当然的行为未被实现"><a href="#理所当然的行为未被实现" class="headerlink" title="理所当然的行为未被实现."></a>理所当然的行为未被实现.</h2><p>根据”最小惊异原则”,函数或类应该实现用户或程序员有理由期待的行为.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Day day = DayDate.StringToDay(String dayName);</div></pre></td></tr></table></figure>
<p>我们期望字符串Monday转化为Day类型的<code>Day.MONDAY</code>，也期望可以转化为常用缩写的<code>Day.MON</code>,还期望可以忽略大小写,<code>Day.mon</code>，这个再正常不过了.<br>还比如，一个EXCEL的字段解析,一次web页面的字符串输入，至少要保证忽略两边的空格.</p>
<h2 id="不正确的边界行为"><a href="#不正确的边界行为" class="headerlink" title="不正确的边界行为."></a>不正确的边界行为.</h2><p>单元测试需要追索每种边界条件,并编写测试.</p>
<h2 id="忽略安全"><a href="#忽略安全" class="headerlink" title="忽略安全."></a>忽略安全.</h2><p>不要关闭编译器的告警,不要忽略编译告警,甚至可以引入**Lint等语法静态编译校验工具来提高代码质量.</p>
<h2 id="重复"><a href="#重复" class="headerlink" title="重复."></a>重复.</h2><p>牢记<em>DRY</em>原则(Don’t Repeat Yourself). 发现重复代码就表示遗漏了抽象.<code>复制粘贴</code>式的编码会造成大量的重复,你需要不断的重构，将重复的代码叠放成抽象对象.</p>
<h2 id="代码出现在错误的抽象层级上"><a href="#代码出现在错误的抽象层级上" class="headerlink" title="代码出现在错误的抽象层级上."></a>代码出现在错误的抽象层级上.</h2><p>良好的软件设计要求将代码,文件,组件和模块，根据层级分离,将它们放到不同的位置.</p>
<h2 id="基类依赖于派生类"><a href="#基类依赖于派生类" class="headerlink" title="基类依赖于派生类."></a>基类依赖于派生类.</h2><p>基类不应该依赖派生类,抽象类不依赖于实体类，这是面向对象设计的基本准则，篇幅有限，具体详细查看设计模式.</p>
<h2 id="信息过多"><a href="#信息过多" class="headerlink" title="信息过多"></a>信息过多</h2><ul>
<li>设计良好的模块有非常小的接口,耦合度低.</li>
<li>限制类或模块中暴露的接口数量.类中的方法越少越好.函数知道的变量越少越好.</li>
<li>隐藏模块和类中的数据和工具函数,隐藏常量和你的临时变量,不要创建有大量方法或大量实体变量的类,保持接口紧凑.</li>
</ul>
<h2 id="混淆视听"><a href="#混淆视听" class="headerlink" title="混淆视听"></a>混淆视听</h2><p>未被执行的代码,没有用到的变量,没有信息量的注释等需要尽早删除,保持源文件整洁和良好.</p>
<h2 id="垂直分割"><a href="#垂直分割" class="headerlink" title="垂直分割."></a>垂直分割.</h2><ul>
<li>变量和函数应该在靠近被使用的地方定义.</li>
<li>本地变量应该正好在其首次被使用的位置上面声明,垂直距离要短.</li>
<li>私有函数应该刚好在其首次被使用的位置下面定义.</li>
</ul>
<h2 id="前后不一致"><a href="#前后不一致" class="headerlink" title="前后不一致."></a>前后不一致.</h2><p>命名要保持一致性.如果在特定函数中用名为response的变量来持有HttpServletResponse对象,则在其他用到该对象的地方也使用response变量名.</p>
<h2 id="设计耦合"><a href="#设计耦合" class="headerlink" title="设计耦合"></a>设计耦合</h2><ul>
<li>不相互依赖的东西不该耦合.例如,普通的enum不应该包含在特殊类里,否则使用这些enum就需要了解这个特殊类.</li>
<li>花点时间设计代码结构,研究应该在什么地方声明函数,常量和变量.不要为了方便而随手放置,放置后又置之不理.</li>
</ul>
<h2 id="隐晦的意图"><a href="#隐晦的意图" class="headerlink" title="隐晦的意图."></a>隐晦的意图.</h2><ul>
<li>代码尽可能具有表达力.</li>
<li>短小紧凑的代码不一定是最好的代码,魔法数字应该拆分到具备解释性的变量里.如下代码你能明白什么意思吗？</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> init <span class="title">m_otCalc</span><span class="params">()</span> </span>&#123;</div><div class="line">     <span class="keyword">return</span> iThsWkd * iThsRte + (<span class="keyword">int</span>) Math.round(<span class="number">0.5</span> * iThsRte * Math.max(<span class="number">0</span>, iThsWkd - <span class="number">400</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="代码位置错误"><a href="#代码位置错误" class="headerlink" title="代码位置错误."></a>代码位置错误.</h2><p>开发人员做出的最重要决定之一就是在哪里放代码. 比如做一个考勤模块的功能,可以在打印报表的代码中做工作时间统计,或者在刷卡代码中保留一份工作时间记录.<br>这个时候最小惊异原则就起了作用.代码应该放在读者自然而然的地方，期待它所在的地方，就和老婆一样，每天早上醒来就在边上.</p>
<p>所以说编程其实是一种艺术行为. PI应该出现在声明三角函数的地方，而不是和一只老虎困在大海里.</p>
<h2 id="不恰当的静态方法"><a href="#不恰当的静态方法" class="headerlink" title="不恰当的静态方法."></a>不恰当的静态方法.</h2><ul>
<li>通常应该倾向于选用非静态方法,如果需要静态函数,确保不会让它有多态行为.</li>
<li><code>Math.max(double a, double)</code>是个良好的静态方法,因为它并不在需要在的那个实体上运作.</li>
</ul>
<h2 id="使用解释性变量"><a href="#使用解释性变量" class="headerlink" title="使用解释性变量."></a>使用解释性变量.</h2><p>和G16类同,使用解释性变量,只要把计算过程打散成一系列良好命名的中间值,就可以提高代码的可读性,</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Matcher match = headerPattern.matcher(line);</div><div class="line"><span class="keyword">if</span>(match.find())&#123;</div><div class="line">     String key = match.gourp(<span class="number">1</span>);</div><div class="line">     String value = match.group(<span class="number">2</span>);</div><div class="line">     headers.put(key.toLowerCase(), value);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="函数名称应该表达其行为"><a href="#函数名称应该表达其行为" class="headerlink" title="函数名称应该表达其行为."></a>函数名称应该表达其行为.</h2><p>如果必须要通过查看函数的实现(或文档)才知道它是做什么的,那是时候该换个更好的函数名了.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Date newDate = date.add(<span class="number">5</span>);</div></pre></td></tr></table></figure>
<p>从函数调用中看不出函数的行为,如果是添加5天并修改日期,那么命名需要调整为increaseByDays.</p>
<h2 id="理解算法"><a href="#理解算法" class="headerlink" title="理解算法."></a>理解算法.</h2><ul>
<li>很多可笑代码的出现,是因为没花时间去理解公式和算法,硬塞进足够的if语句和标示,让系统勉强运作.</li>
<li>在完成某个函数之前,要确认自己完全理解了它是怎么工作的,只有理解了公式,才能更好的进行优化.</li>
</ul>
<h2 id="遵循标准约定"><a href="#遵循标准约定" class="headerlink" title="遵循标准约定."></a>遵循标准约定.</h2><p>每个团队都应遵循基于通用行业规范的一套编码标准.</p>
<h2 id="魔法数"><a href="#魔法数" class="headerlink" title="魔法数."></a>魔法数.</h2><p>用常量代替魔法数字.</p>
<h2 id="封装条件语句"><a href="#封装条件语句" class="headerlink" title="封装条件语句."></a>封装条件语句.</h2><p>如果没有if或while语句的上下文,布尔逻辑就难以理解,应该把解释了条件意图的函数抽离出来.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (timer.hasExpired() &amp;&amp; !timer.isRecurrent()) <span class="comment">//bad</span></div></pre></td></tr></table></figure>
<p>换成</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (shouldBeDeleted(timer)) <span class="comment">//good</span></div></pre></td></tr></table></figure>
<h2 id="避免否定性条件"><a href="#避免否定性条件" class="headerlink" title="避免否定性条件."></a>避免否定性条件.</h2><p>人的逆向思维能力一般都比较差，否定式要比肯定式难明白一些.所以,尽可能将条件表示为肯定形式.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (!buffer.shouldNotompact())  <span class="comment">//bad</span></div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (buffer.shouldCompact())  <span class="comment">//good</span></div></pre></td></tr></table></figure>
<h2 id="函数只该做一件事"><a href="#函数只该做一件事" class="headerlink" title="函数只该做一件事."></a>函数只该做一件事.</h2><p>遵循职责单一原则.以下的代码完成了太多的事情，我们需要拆分.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pay</span><span class="params">()</span> </span>&#123;</div><div class="line">     <span class="keyword">for</span> (Employee e : employees) &#123;</div><div class="line">         <span class="keyword">if</span> (e.isPayday()) &#123;</div><div class="line">              Money pay = e.calculatePay();</div><div class="line">               e.deliverPay(pay)</div><div class="line">          &#125;</div><div class="line">     &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>遍历雇员<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pay</span><span class="params">()</span> </span>&#123;</div><div class="line">     <span class="keyword">for</span> (Employee e : employees) &#123;</div><div class="line">          payIfNecessary(e);</div><div class="line">     &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>检查是否该给雇员付工资<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">payIfNecessary</span><span class="params">(Employee e)</span> </span>&#123;</div><div class="line">     <span class="keyword">if</span> (e.isPayday())&#123;</div><div class="line">         calculateAndDeliverPay(e);</div><div class="line">     &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>给雇员付工资<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">caculateAndDeliverPay</span><span class="params">(Employee e)</span> </span>&#123;</div><div class="line">     Money pay = e.calculatePay();</div><div class="line">     e.deliverPay.pay()</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="掩藏时序耦合"><a href="#掩藏时序耦合" class="headerlink" title="掩藏时序耦合."></a>掩藏时序耦合.</h2><p>不要隐藏时序耦合.如下代码，三个函数存在时序,捕鱼之前先织网,织网之前先编绳.如果调用倒换,可能就导致抛出异常.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MoogDiver</span> </span>&#123;</div><div class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dive</span><span class="params">(String reson)</span> </span>&#123;</div><div class="line">          saturateGradient();</div><div class="line">          reticulateSplines();</div><div class="line">          diveForMoog(reason);</div><div class="line">     &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>我们需要做调整，该耦合的还是得耦合,要符合实际的业务逻辑.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MoogDiver</span> </span>&#123;</div><div class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dive</span><span class="params">(String reson)</span> </span>&#123;</div><div class="line">          Gradient gradient = saturateGradient();</div><div class="line">          List&lt;Spline&gt; splines = reticulateSplines(gradient );</div><div class="line">          diveForMoog(splines ,reason);</div><div class="line">     &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="函数应该只在一个抽象层级上"><a href="#函数应该只在一个抽象层级上" class="headerlink" title="函数应该只在一个抽象层级上."></a>函数应该只在一个抽象层级上.</h2><h2 id="避免传递浏览"><a href="#避免传递浏览" class="headerlink" title="避免传递浏览,"></a>避免传递浏览,</h2><p>函数或者接口调用者不需要了解太多架构相关的东西.如果A与B协作,B与C协作,我们不想让使用A的模块了解C的信息</p>
<p><code>bad: a.getB().getC().doSomething()</code></p>
<p><code>good: myCollaborator.doSomething()</code></p>
<h1 id="环境问题"><a href="#环境问题" class="headerlink" title="环境问题"></a>环境问题</h1><h2 id="需要多步才能实现的构建"><a href="#需要多步才能实现的构建" class="headerlink" title="需要多步才能实现的构建."></a>需要多步才能实现的构建.</h2><p>构建系统应到是单步的操作, 执行一条命令,就可以从版本控制系统里拉下源代码,并完成构建.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">svn get myPorject</div><div class="line"><span class="built_in">cd</span> myProject</div><div class="line">ant all</div></pre></td></tr></table></figure>
<p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> *******</div><div class="line"><span class="built_in">cd</span> **</div><div class="line">npm intall</div><div class="line">npm start</div></pre></td></tr></table></figure></p>
<h2 id="需要多步才能做到的测试"><a href="#需要多步才能做到的测试" class="headerlink" title="需要多步才能做到的测试"></a>需要多步才能做到的测试</h2><p>单个命令应该可以运行全部的单元测试，并输出结果和报告.</p>
<h1 id="测试问题"><a href="#测试问题" class="headerlink" title="测试问题"></a>测试问题</h1><h2 id="测试不足-未使用覆盖率工具"><a href="#测试不足-未使用覆盖率工具" class="headerlink" title="测试不足,未使用覆盖率工具."></a>测试不足,未使用覆盖率工具.</h2><ul>
<li>一套测试中应该有多少个测试?CMMI将单元测试作为QA考核项,单元测试需考虑测试用例的代码覆盖率.</li>
<li>使用覆盖率工具能更容易地找到测试不足的模块,类和函数.</li>
</ul>
<h2 id="测试边界条件"><a href="#测试边界条件" class="headerlink" title="测试边界条件."></a>测试边界条件.</h2><p>特别需要注意测试边界条件.这是最基本的测试方法.</p>
<h2 id="测试覆盖率都具备启发性"><a href="#测试覆盖率都具备启发性" class="headerlink" title="测试覆盖率都具备启发性,"></a>测试覆盖率都具备启发性,</h2><p>查看未执行和已执行测试的代码,往往能发现线索,有效的定位问题.</p>
<h2 id="测试应该快速"><a href="#测试应该快速" class="headerlink" title="测试应该快速"></a>测试应该快速</h2><h2 id="单元测试保障了代码的重构"><a href="#单元测试保障了代码的重构" class="headerlink" title="单元测试保障了代码的重构."></a>单元测试保障了代码的重构.</h2><p>重构行为给代码带来更长的生命周期和更高的质量.</p>
<h1 id="函数问题"><a href="#函数问题" class="headerlink" title="函数问题"></a>函数问题</h1><h2 id="过多的参数"><a href="#过多的参数" class="headerlink" title="过多的参数."></a>过多的参数.</h2><p>最理想的参数数量是零,其次是一,再次是三,此类推,应避免三个以上的参数,符合职责单一原则.</p>
<h2 id="输出参数"><a href="#输出参数" class="headerlink" title="输出参数."></a>输出参数.</h2><p>容易把输出参数误看做输入参数,应少用或不用输出参数.</p>
<h2 id="标示参数"><a href="#标示参数" class="headerlink" title="标示参数."></a>标示参数.</h2><p>不要向函数传入布尔值.这不符合职责单一原则.</p>
<h2 id="不被调用的函数"><a href="#不被调用的函数" class="headerlink" title="不被调用的函数."></a>不被调用的函数.</h2><p>用不被调用的方法应该丢弃,直接删除,保留代码的整洁.</p>
<h2 id="命名不明确"><a href="#命名不明确" class="headerlink" title="命名不明确."></a>命名不明确.</h2><p>使用动词与关键字给函数去个好名字,能较好的解释方法的意图,以及参数的顺序和意图.</p>
]]></content>
    
    <summary type="html">
    
      整洁的代码简单直接;整洁的代码如同优美的散文;整洁的代码从不隐藏设计者的意图,充满了干净利落的抽象和直截了当的控制语句.
    
    </summary>
    
      <category term="开发者手册" scheme="http://www.lizorn.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="新知类" scheme="http://www.lizorn.com/tags/%E6%96%B0%E7%9F%A5%E7%B1%BB/"/>
    
      <category term="编码规则" scheme="http://www.lizorn.com/tags/%E7%BC%96%E7%A0%81%E8%A7%84%E5%88%99/"/>
    
      <category term="代码的味道" scheme="http://www.lizorn.com/tags/%E4%BB%A3%E7%A0%81%E7%9A%84%E5%91%B3%E9%81%93/"/>
    
  </entry>
  
  <entry>
    <title>Google的职业生涯：技术开发指导(学生)</title>
    <link href="http://www.lizorn.com//2016/10/13/google-guide-to-development/"/>
    <id>http://www.lizorn.com//2016/10/13/google-guide-to-development/</id>
    <published>2016-10-12T16:00:00.000Z</published>
    <updated>2016-11-05T00:59:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Google的职业生涯：技术开发指导-面向学生"><a href="#Google的职业生涯：技术开发指导-面向学生" class="headerlink" title="Google的职业生涯：技术开发指导(面向学生)"></a>Google的职业生涯：技术开发指导(面向学生)</h1><p>本指南列举各项领域知识和相关资源来帮助你学习和提高相关技术能力。</p>
<table>
<thead>
<tr>
<th>建议</th>
<th>资源</th>
</tr>
</thead>
<tbody>
<tr>
<td>基础知识</td>
<td><a href="https://www.udacity.com/course/intro-to-computer-science--cs101" target="_blank" rel="external">计算机科学</a></td>
</tr>
<tr>
<td>掌握至少一门面向对象语言(C++, Java®, Python®)</td>
<td>初级程序员在线资源:<br> - <a href="https://www.coursera.org/specializations/java-programming" target="_blank" rel="external">Java 程序设计</a><br> - <a href="https://www.coursera.org/learn/learn-to-program" target="_blank" rel="external">学习编程：基础</a> <em>多伦多大学</em><br> - <a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-092-introduction-to-programming-in-java-january-iap-2010/index.htm" target="_blank" rel="external">java编程介绍</a> <em>MIT</em><br> - <a href="https://developers.google.com/edu/python/" target="_blank" rel="external">谷歌python教学</a><br> - <a href="https://www.coursera.org/learn/interactive-python-1" target="_blank" rel="external">python编程</a> <em>莱斯大学</em> <br>在线高级教程: <br> - <a href="https://www.coursera.org/specializations/java-object-oriented" target="_blank" rel="external">面向对象 Java 程序设计</a> <em>加州大学圣迭戈分校</em><br> - <a href="https://www.udacity.com/course/design-of-computer-programs--cs212" target="_blank" rel="external">计算机编程设计</a><br> - <a href="https://www.coursera.org/learn/program-code" target="_blank" rel="external">学习编程：撰写高质量代码</a> <em>多伦多大学</em></td>
</tr>
<tr>
<td>学习其他编程语言</td>
<td>- JavaScript®<br> - CSS &amp; HTML<br> - Ruby®<br> - PHP®<br> - C®<br> - Perl®<br> - Shell® script<br> - Lisp®<br> - Scheme®<br> - CSS &amp; HTML<br> - Ruby®<br> - PHP®<br> - Go® <br>在线资源:<br> - <a href="https://www.codecademy.com/learn/all" target="_blank" rel="external">Codecademy</a></td>
</tr>
<tr>
<td>调试代码</td>
<td>学习如何catch bugs，进行代码测试.<br>在线资源:<br>- <a href="https://www.udacity.com/course/software-testing--cs258" target="_blank" rel="external">软件测试</a><br>- <a href="https://www.udacity.com/course/software-debugging--cs259" target="_blank" rel="external">软件调试</a></td>
</tr>
<tr>
<td>提高离散数学的逻辑推理和知识</td>
<td>在线资源<br> - <a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-fall-2010/index.htm" target="_blank" rel="external">计算机科学数学应用</a> <em>MIT</em><br> - <a href="https://www.coursera.org/learn/mathematical-thinking" target="_blank" rel="external">数学思维</a> <em>斯坦福大学</em><br> - <a href="https://www.coursera.org/learn/probabilistic-graphical-models" target="_blank" rel="external">概率图模型</a> <em>斯坦福大学</em><br> - <a href="https://www.coursera.org/learn/game-theory-1" target="_blank" rel="external">博弈论</a> <em>斯坦福科伦比亚大学</em><br></td>
</tr>
<tr>
<td>提高对算法和数据结构有很强的理解能力</td>
<td>熟悉基础数据类型（栈，队列，包），排序算法（快速排序，合并排序，堆排序），数据结构（二分搜索树，红黑树，哈希表）以及BIG O.<br> <em>在线资源：</em><br> - <a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-spring-2008/index.htm" target="_blank" rel="external">算法简介</a> <em>斯坦福大学</em><br> - <a href="https://www.coursera.org/learn/introduction-to-algorithms" target="_blank" rel="external">算法1</a>&amp;<a href="https://www.coursera.org/learn/java-data-structures-algorithms-2" target="_blank" rel="external">算法2</a> <em>普林斯顿大学</em><br> - <a href="https://en.wikipedia.org/wiki/List_of_algorithms" target="_blank" rel="external">算法总览</a> <em>维基百科</em><br> - <a href="https://en.wikipedia.org/wiki/List_of_data_structures" target="_blank" rel="external">数据结构总览</a> <em>维基百科</em><br></td>
</tr>
<tr>
<td>操作系统</td>
<td><em>在线资源：</em><br> - <a href="https://www.youtube.com/watch?v=XgQo4JkN4Bw&amp;list=PL3289DD0D0F0CD4A3" target="_blank" rel="external">操作系统和系统编程</a></td>
</tr>
<tr>
<td>人工智能和机器学习</td>
<td><em>在线资源：</em><br> - <a href="https://www.udacity.com/course/machine-learning-engineer-nanodegree--nd009" target="_blank" rel="external">机器学习工程师Nanodegree</a> <em>Udacity</em><br>  - <a href="https://www.udacity.com/course/deep-learning--ud730" target="_blank" rel="external">深度学习</a> <em>Udacity</em><br>  - <a href="https://see.stanford.edu/Course/CS223A" target="_blank" rel="external">机器人技术</a> <em>斯坦福大学</em><br>  - <a href="https://see.stanford.edu/Course/CS229" target="_blank" rel="external">机器学习</a> <em>斯坦福大学</em></td>
</tr>
<tr>
<td>安卓开发</td>
<td><em>在线资源：</em><br> - <a href="https://developers.google.com/training/android/" target="_blank" rel="external">谷歌Android开发教学</a></td>
</tr>
<tr>
<td>web开发</td>
<td><em>在线资源：</em><br> - <a href="https://developers.google.com/training/web/" target="_blank" rel="external">谷歌web开发教学</a></td>
</tr>
<tr>
<td>学习其他开发技术</td>
<td><em>在线资源：</em><br> - <a href="https://developers.google.com/training/" target="_blank" rel="external">谷歌工程师培训站点</a></td>
</tr>
<tr>
<td>学习密码学</td>
<td><em>在线资源：</em><br> - <a href="https://www.coursera.org/learn/crypto" target="_blank" rel="external">密码学</a><br> - <a href="https://www.udacity.com/course/applied-cryptography--cs387" target="_blank" rel="external">密码学应用</a></td>
</tr>
<tr>
<td>在一个代码库里工作，通过阅读优秀的代码来提高你的编码，文档以及debug能力</td>
<td>- <a href="https://github.com/" target="_blank" rel="external">Github</a><br> - <a href="https://www.fogcreek.com/fogbugz/devhub" target="_blank" rel="external">Klin</a></td>
</tr>
<tr>
<td>和其他程序员一起工作</td>
<td>这将有利于锻炼你的团队合作能力并使你从学习其他人的优点</td>
</tr>
<tr>
<td>锻炼你的算法知识和编程技巧</td>
<td>通过编程竞赛（<a href="https://code.google.com/codejam/" target="_blank" rel="external">CodeJam</a>，<a href="https://icpc.baylor.edu/" target="_blank" rel="external">ACM</a>）锻炼你的算法知识</td>
</tr>
<tr>
<td>成为导师助理</td>
<td>通过指导其他学生将能有效增强和巩固你的知识体系</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      本指南列举各项领域知识和相关资源来帮助你学习和提高相关技术能力。
    
    </summary>
    
      <category term="开发者手册" scheme="http://www.lizorn.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="新知类" scheme="http://www.lizorn.com/tags/%E6%96%B0%E7%9F%A5%E7%B1%BB/"/>
    
      <category term="Google" scheme="http://www.lizorn.com/tags/Google/"/>
    
      <category term="职业指导" scheme="http://www.lizorn.com/tags/%E8%81%8C%E4%B8%9A%E6%8C%87%E5%AF%BC/"/>
    
  </entry>
  
  <entry>
    <title>Docker使用手册</title>
    <link href="http://www.lizorn.com//2016/09/27/docker-manual/"/>
    <id>http://www.lizorn.com//2016/09/27/docker-manual/</id>
    <published>2016-09-26T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是Docker"><a href="#什么是Docker" class="headerlink" title="什么是Docker?"></a>什么是Docker?</h1><p>先看一段Docker创始人的一段视频:<br><iframe src="http://player.youku.com/embed/XODc2MjUwNDU2" width="510" height="310" frameborder="0" allowfullscreen></iframe></p>
<p>Ship! Docker就是用来解决日渐繁杂的开发和生产环境的痛点问题的!大大简化了软件开发的流程和环境搭建的复杂性,解放重复劳动,让技术人员更关注功能和需求.</p>
<p>Docker的产生是为了解决以下的问题:</p>
<ol>
<li>环境管理复杂:从各种OS到中间件到APP,开发者需要关心太多的东西,Docker可以通过镜像分享的形式简化部署多应用实例.</li>
<li>虚拟化手段变化:采用虚拟化手段满足用户按需分配的资源需求以及保证可用性和隔离型.</li>
</ol>
<h1 id="如何学习一种工具和技术"><a href="#如何学习一种工具和技术" class="headerlink" title="如何学习一种工具和技术?"></a>如何学习一种工具和技术?</h1><p>入门非常的容易</p>
<ol>
<li>上<a href="https://docs.docker.com/docker-for-windows/" target="_blank" rel="external">官网</a>,跟着教程走</li>
<li>下载<a href="http://www.docker.com/products/docker#/windows" target="_blank" rel="external">DOCKER FOR WINDOWS SERVER</a>安装</li>
<li>非win10 pro,得安装<a href="http://www.docker.com/products/docker-toolbox" target="_blank" rel="external">docker toolbox</a></li>
<li>安装后,上<a href="https://hub.docker.com/" target="_blank" rel="external">docker hub</a> pull一个镜像下来.</li>
<li>试运行下 <code>Docker run hello-world</code></li>
</ol>
<p>发现已经被墙了,google之,配置DaoCloud的<a href="https://www.daocloud.io/mirror#accelerator-doc" target="_blank" rel="external">Docker加速器</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">docker-machine ssh default</div><div class="line">sudo sed -i &quot;s|EXTRA_ARGS=&apos;|EXTRA_ARGS=&apos;--registry-mirror=加速地址 |g&quot; /var/lib/boot2docker/profile</div><div class="line">exit</div><div class="line">docker-machine restart default</div></pre></td></tr></table></figure>
<p>开胃菜结束,进入主菜</p>
<h1 id="Docker-Overview"><a href="#Docker-Overview" class="headerlink" title="Docker Overview"></a>Docker Overview</h1><p>Docker是一个用于Developing,shipping,running应用的开放平台.</p>
<p>先预览一下,之后我们需要弄清楚以下几个问题.</p>
<ol>
<li>Docker是什么?</li>
<li>Docker是如何驱动的?</li>
<li>Docker能解决什么问题?</li>
<li>Docker的架构?</li>
</ol>
<h2 id="什么是Docker平台"><a href="#什么是Docker平台" class="headerlink" title="什么是Docker平台?"></a>什么是Docker平台?</h2><p>Docker提供管理容器生命周期的工具和平台:</p>
<ul>
<li>将你的应用[包括组件]打包到Docker容器内</li>
<li>分发这些容器到团队,进行进一步的开发和测试</li>
<li>将应用发布到生产环境</li>
</ul>
<h2 id="Docker引擎"><a href="#Docker引擎" class="headerlink" title="Docker引擎?"></a>Docker引擎?</h2><p>Docker是C/S结构的应用,Server是守护程序常驻内存,Client通过REST API和Server交互.</p>
<p><img src="/res/img/docker/engine-components-flow.png" alt=""></p>
<h2 id="Docker解决什么问题"><a href="#Docker解决什么问题" class="headerlink" title="Docker解决什么问题?"></a>Docker解决什么问题?</h2><h3 id="快速可持续行的发布应用"><a href="#快速可持续行的发布应用" class="headerlink" title="快速可持续行的发布应用"></a><em>快速可持续行的发布应用</em></h3><p>开发人员本地编码并通过分享Dorker容器进行集成,测试,发布</p>
<h3 id="按需部署和裁剪"><a href="#按需部署和裁剪" class="headerlink" title="按需部署和裁剪"></a><em>按需部署和裁剪</em></h3><p>Docker容器具备很高的移植性,它可以在开发人员的本地环境运行,也可以在数据中心,云的物理和虚拟环境中运行.</p>
<h3 id="同一个硬件环境提供更高的负载"><a href="#同一个硬件环境提供更高的负载" class="headerlink" title="同一个硬件环境提供更高的负载"></a><em>同一个硬件环境提供更高的负载</em></h3><h2 id="Docker的架构"><a href="#Docker的架构" class="headerlink" title="Docker的架构?"></a>Docker的架构?</h2><p><img src="/res/img/docker/architecture.svg" alt=""></p>
<h3 id="Docker-daemon"><a href="#Docker-daemon" class="headerlink" title="Docker daemon"></a>Docker daemon</h3><p>Server守护程序,用户通过Docker client和它交互</p>
<h3 id="Docker-Client"><a href="#Docker-Client" class="headerlink" title="Docker Client"></a>Docker Client</h3><p>用户和Docker交互的主要工具,使用命令行和配置和Docker damon进行交互.</p>
<h3 id="Docker内部结构"><a href="#Docker内部结构" class="headerlink" title="Docker内部结构"></a>Docker内部结构</h3><h4 id="images"><a href="#images" class="headerlink" title="images"></a>images</h4><p>Docker的镜像是只读的模板,用于指示Docker创建容器的,由Dockerfile文本文件来描述.说白了就是Docker的Build组件.</p>
<h4 id="containers"><a href="#containers" class="headerlink" title="containers"></a>containers</h4><p>可运行的Docker image实例.是Docker的运行组件.</p>
<h4 id="registries"><a href="#registries" class="headerlink" title="registries"></a>registries</h4><p>docker registry是镜像库,是Docker的分发组件.</p>
<h2 id="Docker的容器如何加载和运行"><a href="#Docker的容器如何加载和运行" class="headerlink" title="Docker的容器如何加载和运行?"></a>Docker的容器如何加载和运行?</h2><p><code>$ docker run -i -t ubuntu /bin/bash</code></p>
<p>当运行一条命令,Docker引擎会进行一系列的处理来加载和运行容器:</p>
<ol>
<li>获取<code>ubuntu</code>镜像: Docker引擎首先在本地查找镜像,如果存在就作为新的容器加载进来,如不存在就从<a href="https://hub.docker.com/" target="_blank" rel="external">Docker hub</a>获取镜像</li>
<li>创建一个新的容器:Docker使用image创建容器</li>
<li>配置文件系统并加载一个读写层: 在文件系统里创建容器并将读写层让入image</li>
<li>配置网络接口:创建一个网络接口,允许Docker容器和local host交互</li>
<li>配置IP地址: 查找并绑定一个可用的ip地址</li>
<li>执行命令: 执行<code>/bin/bash</code></li>
<li>应用输出:连接应用标准输入,输出,错误接口,供交互.</li>
</ol>
<h1 id="入门示例"><a href="#入门示例" class="headerlink" title="入门示例"></a>入门示例</h1><h2 id="构建image"><a href="#构建image" class="headerlink" title="构建image"></a>构建image</h2><h3 id="从Docker-hub获取whalesay镜像"><a href="#从Docker-hub获取whalesay镜像" class="headerlink" title="从Docker hub获取whalesay镜像"></a>从<a href="https://hub.docker.com/r/docker/whalesay/" target="_blank" rel="external">Docker hub</a>获取whalesay镜像</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">$ docker run docker/whalesay cowsay boo</div><div class="line">Unable to find image &apos;docker/whalesay:latest&apos; locally</div><div class="line">latest: Pulling from docker/whalesay</div><div class="line">e9e06b06e14c: Pull complete</div><div class="line">a82efea989f9: Pull complete</div><div class="line">37bea4ee0c81: Pull complete</div><div class="line">07f8e8c5e660: Pull complete</div><div class="line">676c4a1897e6: Pull complete</div><div class="line">5b74edbcaa5b: Pull complete</div><div class="line">1722f41ddcb5: Pull complete</div><div class="line">99da72cfe067: Pull complete</div><div class="line">5d5bd9951e26: Pull complete</div><div class="line">fb434121fc77: Already exists</div><div class="line">Digest: sha256:d6ee73f978a366cf97974115abe9c4099ed59c6f75c23d03c64446bb9cd49163</div><div class="line">Status: Downloaded newer image for docker/whalesay:latest</div><div class="line"> _____</div><div class="line">&lt; boo &gt;</div><div class="line"> -----</div><div class="line">    \</div><div class="line">     \</div><div class="line">      \     </div><div class="line">                    ##        .            </div><div class="line">              ## ## ##       ==            </div><div class="line">           ## ## ## ##      ===            </div><div class="line">       /&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;___/ ===        </div><div class="line">  ~~~ &#123;~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~   </div><div class="line">       \______ o          __/            </div><div class="line">        \    \        __/             </div><div class="line">          \____\______/</div></pre></td></tr></table></figure>
<h3 id="写一个Dockerfile"><a href="#写一个Dockerfile" class="headerlink" title="写一个Dockerfile"></a>写一个Dockerfile</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">FROM docker/whalesay:latest</div><div class="line">RUN apt-get -y update &amp;&amp; apt-get install -y fortunes</div><div class="line">CMD /usr/games/fortune -a | cowsay</div></pre></td></tr></table></figure>
<h3 id="编译image"><a href="#编译image" class="headerlink" title="编译image"></a>编译image</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker build -t docker-whale .</div></pre></td></tr></table></figure>
<h3 id="编译流程"><a href="#编译流程" class="headerlink" title="编译流程"></a>编译流程</h3><ul>
<li>首先,Docker校验编译所需要素.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Sending build context to Docker daemon 2.048 kB</div></pre></td></tr></table></figure>
<ul>
<li>Docker加载<code>whalesay</code>镜像.镜像已经在本地,所以不需要再去下载.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Step 1 : FROM docker/whalesay:latest</div><div class="line"> ---&gt; 6b362a9f73eb</div></pre></td></tr></table></figure>
<ul>
<li>Docker更新<code>apt-get</code>包管理器</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Step 2 : RUN apt-get -y update &amp;&amp; apt-get install -y fortunes</div><div class="line"> ---&gt; Running in 21b7de6678a8</div><div class="line">Ign http://archive.ubuntu.com trusty InRelease</div><div class="line">Get:1 http://archive.ubuntu.com trusty-updates InRelease [65.9 kB]</div><div class="line">Get:2 http://archive.ubuntu.com trusty-security InRelease [65.9 kB]</div><div class="line">Hit http://archive.ubuntu.com trusty Release.gpg</div><div class="line">Get:3 http://archive.ubuntu.com trusty-updates/main Sources [474 kB]</div></pre></td></tr></table></figure>
<ul>
<li>安装<code>fortunes</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Reading state information...</div><div class="line">The following extra packages will be installed:</div><div class="line">  fortune-mod fortunes-min librecode0</div><div class="line">Suggested packages:</div><div class="line">  x11-utils bsdmainutils</div><div class="line">The following NEW packages will be installed:</div><div class="line">  fortune-mod fortunes fortunes-min librecode0</div><div class="line">0 upgraded, 4 newly installed, 0 to remove and 87 not upgraded.</div></pre></td></tr></table></figure>
<ul>
<li>完成编译</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Step 3 : CMD /usr/games/fortune -a | cowsay</div><div class="line"> ---&gt; Running in 3a10806db557</div><div class="line"> ---&gt; e02e38c358db</div><div class="line">Removing intermediate container 3a10806db557</div><div class="line">Successfully built e02e38c358db</div></pre></td></tr></table></figure>
<h3 id="运行新的docker-whale"><a href="#运行新的docker-whale" class="headerlink" title="运行新的docker-whale"></a>运行新的<code>docker-whale</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">docker run docker-whale</div><div class="line"></div><div class="line">/ Everyone has a purpose in life. Perhaps \</div><div class="line">| yours is watching television.           |</div><div class="line">|                                         |</div><div class="line">\ -- David Letterman                      /</div><div class="line">-----------------------------------------</div><div class="line">  \</div><div class="line">   \</div><div class="line">    \</div><div class="line">                  ##        .</div><div class="line">            ## ## ##       ==</div><div class="line">         ## ## ## ##      ===</div><div class="line">     /&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;___/ ===</div><div class="line">~~~ &#123;~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~</div><div class="line">     \______ o          __/</div><div class="line">      \    \        __/</div><div class="line">        \____\______/</div></pre></td></tr></table></figure>
<h2 id="Docker-hub"><a href="#Docker-hub" class="headerlink" title="Docker hub"></a>Docker hub</h2><p><a href="https://docs.docker.com/engine/getstarted/step_five/" target="_blank" rel="external">使用Docker hub对镜像进行配置管理</a>,和Git使用方式类似.</p>
<h2 id="容器命名"><a href="#容器命名" class="headerlink" title="容器命名"></a>容器命名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker run -d -P --name web training/webapp python app.py</div></pre></td></tr></table></figure>
<h1 id="容器挂载管理"><a href="#容器挂载管理" class="headerlink" title="容器挂载管理"></a><a href="https://docs.docker.com/engine/tutorials/dockervolumes/" target="_blank" rel="external">容器挂载管理</a></h1><h1 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h1><p><code>Compose</code>是一个定义和运行多Docker容器应用的工具.</p>
<p>使用<code>Compose</code>通常有3个步骤:</p>
<ol>
<li>将应用的环境定义到<code>Dockerfile</code>,以便在其他地方可以复用.</li>
<li>在<code>docker-compose.yml</code>将应用定义为服务,这样你可以在解耦的环境中运行</li>
<li>最后,执行<code>docker-compose up</code></li>
</ol>
<p><code>docker-compose.yml</code>大致内容如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">version: &apos;2&apos;</div><div class="line">services:</div><div class="line">  web:</div><div class="line">    build: .</div><div class="line">    ports:</div><div class="line">    - &quot;5000:5000&quot;</div><div class="line">    volumes:</div><div class="line">    - .:/code</div><div class="line">    - logvolume01:/var/log</div><div class="line">    links:</div><div class="line">    - redis</div><div class="line">  redis:</div><div class="line">    image: redis</div><div class="line">volumes:</div><div class="line">  logvolume01: &#123;&#125;</div></pre></td></tr></table></figure>
<h2 id="Compose的使用场景"><a href="#Compose的使用场景" class="headerlink" title="Compose的使用场景"></a>Compose的使用场景</h2><ol>
<li>开发环境</li>
<li>自动化测试环境</li>
<li>单站部署</li>
</ol>
<h2 id="使用指南"><a href="#使用指南" class="headerlink" title="使用指南"></a>使用指南</h2><p>跟着<a href="https://docs.docker.com/compose/gettingstarted/" target="_blank" rel="external">官网教程</a></p>
<h1 id="Docker-Machine"><a href="#Docker-Machine" class="headerlink" title="Docker Machine"></a><a href="https://docs.docker.com/machine/" target="_blank" rel="external">Docker Machine</a></h1><p>Docker Machine说白了就是个Docker Server集群管理的client端,便于远程发布和部署Docker应用</p>
<h1 id="Docker应用到项目开发方法"><a href="#Docker应用到项目开发方法" class="headerlink" title="Docker应用到项目开发方法"></a>Docker应用到项目开发方法</h1><p><img src="/res/img/docker/CI.png" alt=""></p>
<p>如果是新的团队,那没什么问题,起初就可以商量好.如果是已经比较成熟的团队,Docker逐步嵌入到几个持续集成的流程中去.应用Docker到软件开发的流程,首先需要解决几个问题.</p>
<ol>
<li>Base Image的选择, <a href="https://phusion.github.io/baseimage-docker/" target="_blank" rel="external">phusion-baseimage</a></li>
<li>配置管理Docker镜像的工具的选择，如Ansible、Chef、Puppet</li>
<li>Host主机系统的选择，如CoreOS、Ubuntu</li>
<li>使用持续集成工具(Jenkins)进行管道部署进行持续集成</li>
<li>使用<a href="https://github.com/kubernetes/kubernetes" target="_blank" rel="external">Google Kubernetes</a>进行生产部署</li>
</ol>
<p><a href="http://www.infoq.com/cn/articles/docker-integrated-test-and-deployment" target="_blank" rel="external">Docker的集成测试部署之道</a></p>
<h2 id="Docker文件挂载"><a href="#Docker文件挂载" class="headerlink" title="Docker文件挂载"></a>Docker文件挂载</h2><p>Docker image打包发布的时候,如果源码也一并放在image里是不合理的,所以具体开发过程中需要将宿主文件挂载到Docker容器里.</p>
<h3 id="windows下开发环境"><a href="#windows下开发环境" class="headerlink" title="windows下开发环境"></a>windows下开发环境</h3><p>windows在vxbox的虚拟机在起Docker,所以需要迂回挂载.</p>
<h4 id="利用vxbox共享"><a href="#利用vxbox共享" class="headerlink" title="利用vxbox共享"></a>利用vxbox共享</h4><ul>
<li>设置vxbox共享文件夹</li>
</ul>
<p><img src="/res/img/docker/vxbox.png" alt=""></p>
<ul>
<li>进入vxbox虚拟机,将windows目录挂载到虚拟机,如：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mount -t vboxsf project /mnt/data</div></pre></td></tr></table></figure>
<ul>
<li>进入Docker终端，-v启动挂载到容器</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run -it -v /mnt/data:/usr/data ubuntu:trusty</div></pre></td></tr></table></figure>
<h1 id="Docker常用命令"><a href="#Docker常用命令" class="headerlink" title="Docker常用命令"></a>Docker常用命令</h1><h2 id="清除"><a href="#清除" class="headerlink" title="清除"></a>清除</h2><ul>
<li>停止所有container</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker stop $(docker ps <span class="_">-a</span> -q)</div></pre></td></tr></table></figure>
<ul>
<li>删除所有container</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker rm $(docker ps <span class="_">-a</span> -q)</div></pre></td></tr></table></figure>
<ul>
<li>删除所有images</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker rmi $(docker images -q)</div></pre></td></tr></table></figure>
<h1 id="Docker的坑"><a href="#Docker的坑" class="headerlink" title="Docker的坑"></a>Docker的坑</h1><p><a href="https://t.co/cmXB2Clj8D" target="_blank" rel="external">希特勒吐槽Docker</a></p>
<h1 id="Docker工具"><a href="#Docker工具" class="headerlink" title="Docker工具"></a>Docker工具</h1><ol>
<li><a href="http://kubernetes.io/" target="_blank" rel="external">Kubernetes</a></li>
<li><a href="http://www.infoq.com/cn/DockerDeep" target="_blank" rel="external">InfoQ上的Docker</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      现在Docker这么火,怎么能不用
    
    </summary>
    
      <category term="开发者手册" scheme="http://www.lizorn.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="新知" scheme="http://www.lizorn.com/tags/%E6%96%B0%E7%9F%A5/"/>
    
      <category term="开发环境" scheme="http://www.lizorn.com/tags/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
      <category term="Docker" scheme="http://www.lizorn.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>攻城狮周记(五)</title>
    <link href="http://www.lizorn.com//2016/09/26/readmemo/"/>
    <id>http://www.lizorn.com//2016/09/26/readmemo/</id>
    <published>2016-09-25T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Fintech细分领域研究报告"><a href="#Fintech细分领域研究报告" class="headerlink" title="Fintech细分领域研究报告"></a>Fintech细分领域研究报告</h1><p>随着科技的发展，大数据和人工智能等前沿科技早已介入金融领域。Fintech美国已经领先中国很多,是一个好的领域.<br><a href="http://36kr.com/p/5053161.html" target="_blank" rel="external">原文</a></p>
<h1 id="大数据团队建设"><a href="#大数据团队建设" class="headerlink" title="大数据团队建设"></a>大数据团队建设</h1><ol>
<li>数据基础服务团队，负责Hadoop、Spark、Hbase、Hive等基础组件的运维、开发和优化；</li>
<li>数据开放平台团队；</li>
<li>数据仓库团队，负责统一的数据仓库，力图解决数据不一致、口径不一致、模型不一致以及数据质量等问题；</li>
<li>数据挖掘团队，偏算法研究与建模，负责核心应用开发。</li>
<li>质量控制（QA）团队，主要负责软件测试及DevOps流程贯彻落地。</li>
<li>项目管理团队，有专门的项目管理团队负责项目需求及进度。</li>
</ol>
<h1 id="数据分析纬度"><a href="#数据分析纬度" class="headerlink" title="数据分析纬度"></a>数据分析纬度</h1><p><a href="http://36kr.com/p/5053800.html" target="_blank" rel="external">一个优秀的数据分析师是怎样炼成的？</a></p>
<p>#　前端知识库<br><a href="http://geek.csdn.net/news/detail/103138" target="_blank" rel="external">知识库</a></p>
<h1 id="开源大数据工具"><a href="#开源大数据工具" class="headerlink" title="开源大数据工具"></a>开源大数据工具</h1><p><a href="http://geek.csdn.net/news/detail/103253" target="_blank" rel="external">原文</a></p>
<h1 id="微信小程序"><a href="#微信小程序" class="headerlink" title="微信小程序"></a>微信小程序</h1><p><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/?t=1474644083132" target="_blank" rel="external">微信小程序简易教程</a></p>
<h1 id="如何讲故事"><a href="#如何讲故事" class="headerlink" title="如何讲故事?"></a>如何讲故事?</h1><p><a href="http://36kr.com/p/5053696.html" target="_blank" rel="external">原文</a></p>
<h1 id="数据挖掘四大信仰"><a href="#数据挖掘四大信仰" class="headerlink" title="数据挖掘四大信仰"></a>数据挖掘四大信仰</h1><p>信仰1：不以具体业务场景出发，不考虑大数据并发实现的数据挖掘，都在耍流氓；<br>信仰2：知其然，晓其所以然，万变不离其宗，必定变化莫测，这正是算法魅力；<br>信仰3：在DataMining领域，不做两种人。一种是工具人，一种是研究者；<br>信仰4：拥有健康、丰满的数据，业务场景建模已经成功90%以上了；</p>
]]></content>
    
    <summary type="html">
    
      Fintech领域研究报告/大数据团队结构/数据分析纬度/如何讲故事
    
    </summary>
    
      <category term="攻城狮周记" scheme="http://www.lizorn.com/categories/%E6%94%BB%E5%9F%8E%E7%8B%AE%E5%91%A8%E8%AE%B0/"/>
    
    
      <category term="大数据" scheme="http://www.lizorn.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="新知" scheme="http://www.lizorn.com/tags/%E6%96%B0%E7%9F%A5/"/>
    
      <category term="前端" scheme="http://www.lizorn.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="数据挖掘" scheme="http://www.lizorn.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
  </entry>
  
  <entry>
    <title>My little trouble</title>
    <link href="http://www.lizorn.com//2016/09/22/my-little-upset/"/>
    <id>http://www.lizorn.com//2016/09/22/my-little-upset/</id>
    <published>2016-09-21T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>碎片化的时代,获取了太多的垃圾信息,最近又想的太多.于是最近就变得比较焦虑,异常的焦虑.</p>
<p>两年前回到宁波,这里的好企业真的太少了,尤其是技术类的.最后进入互联网的领域,web,app大部分都毫无技术含量,发现已于<code>研发</code>越走越远.</p>
<p>反复思考自己的职业规划,思考自己想要什么.近几年换工作比较频繁,切换了不同的领域,由于具备通用的专业能力,知识的转化率都还算高.眼界虽宽了很多,但还是缺乏某一个领域深度,没有享受到领域知识的时间复利,一直处于开荒状态,不能进行有效的farm.</p>
<p>我觉得必须开始经营自己的品牌:</p>
<ol>
<li>精进一项核心技能</li>
<li>混圈子</li>
<li>持续的自我进化</li>
</ol>
<p>于是问题来了,这次换还是不换呢?</p>
]]></content>
    
    <summary type="html">
    
      人不是混圈子才会牛逼，而是牛逼了才会有圈子
    
    </summary>
    
      <category term="随笔" scheme="http://www.lizorn.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>IONIC2使用感想</title>
    <link href="http://www.lizorn.com//2016/09/22/ionic2-/"/>
    <id>http://www.lizorn.com//2016/09/22/ionic2-/</id>
    <published>2016-09-21T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>IONIC2基于Angular2,属于Ponegap体系,和RN都是我比较看好的框架,都还未正式发布.之所以会去使用它,完全是因为Typescript的缘故,TS作为ES/JS的超集使用起来比较方便.</p>
<p>Ionic2处于Beta阶段,现在社区不活跃,资源也相对比较少,和我去年预研RN时候不同,RN是由于迭代太快,坑太多,但社区还是比较活跃的.如今RN已如日中天…,但不差钱还是要选择原生技术.</p>
<p>期间看了下官网的一个实例<a href="https://github.com/driftyco/ionic-conference-app" target="_blank" rel="external">conference</a>,并移植和改写了一个示例<a href="https://github.com/LiZoRN/ionic2-realty" target="_blank" rel="external">ionic2-realty</a>,也算入了门了.</p>
<p>这类框架也称不上预研,入门门槛比较低,当然要精通都不是一蹴而就的,需要时间和经验的积累.</p>
<p>过早的使用某种技术势必要填很多的坑.于是在不断的填坑和弃坑中,度日如年…</p>
]]></content>
    
    <summary type="html">
    
      过早的使用某种技术势必要填很多的坑.于是在不断的填坑和弃坑中,我们度日如年...
    
    </summary>
    
      <category term="开发者手册" scheme="http://www.lizorn.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="Ionic" scheme="http://www.lizorn.com/tags/Ionic/"/>
    
      <category term="移动开发" scheme="http://www.lizorn.com/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
      <category term="混合开发" scheme="http://www.lizorn.com/tags/%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>攻城狮周记(四)</title>
    <link href="http://www.lizorn.com//2016/09/12/readmemo/"/>
    <id>http://www.lizorn.com//2016/09/12/readmemo/</id>
    <published>2016-09-11T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="你的收入，为什么还没有指数增长？"><a href="#你的收入，为什么还没有指数增长？" class="headerlink" title="你的收入，为什么还没有指数增长？"></a>你的收入，为什么还没有指数增长？</h1><blockquote>
<p>两个乞丐在比划说，我要是当上了皇帝，我要饭时候的那个碗，必须是纯金的。</p>
</blockquote>
<ol>
<li>打造自己能力的”单品爆款”,要专注,专业需要时间的积累.</li>
<li>做有价值的事,让自己增值.</li>
<li>经常复盘,我们要在有限的时间里，多做些战略上的努力，而不是战术层面的付出。<br><a href="http://36kr.com/p/5052997.html" target="_blank" rel="external">原文</a></li>
</ol>
<h1 id="Saas产品如何运营"><a href="#Saas产品如何运营" class="headerlink" title="Saas产品如何运营"></a>Saas产品如何运营</h1><p><a href="http://36kr.com/p/5053097.html" target="_blank" rel="external">原文</a></p>
<h1 id="在大数据时代，每家公司都要有大数据部门吗？"><a href="#在大数据时代，每家公司都要有大数据部门吗？" class="headerlink" title="在大数据时代，每家公司都要有大数据部门吗？"></a>在大数据时代，每家公司都要有大数据部门吗？</h1><p>大数据都知道是一个方向,问题是谁能站在浪潮之巅?<br><a href="http://geek.csdn.net/news/detail/101287" target="_blank" rel="external">原文</a></p>
<h1 id="邮件营销平台实践"><a href="#邮件营销平台实践" class="headerlink" title="邮件营销平台实践"></a>邮件营销平台实践</h1><p>没接触过这个领域,长了点见识.<br><a href="http://geek.csdn.net/news/detail/101185" target="_blank" rel="external">邮件营销平台实践</a></p>
<h1 id="直播技术"><a href="#直播技术" class="headerlink" title="直播技术"></a>直播技术</h1><p>代码居多<br><a href="http://blog.csdn.net/xwl198937/article/category/6386061" target="_blank" rel="external">原文</a></p>
<h1 id="深度学习主题"><a href="#深度学习主题" class="headerlink" title="深度学习主题"></a>深度学习主题</h1><p>下周专题深入研究<br><a href="https://code.csdn.net/blog/41" target="_blank" rel="external">原文</a></p>
<h1 id="Git配置管理"><a href="#Git配置管理" class="headerlink" title="Git配置管理"></a>Git配置管理</h1><p>git的配置管理和SVN有较多不同.SVN默认有三条配置流,trunk,branch,tag. git的master并不是svn的trunk,趋同于svn的tag,是对外可发布版本的最终标示,是一个完整的可部署的生产版本.</p>
<p>以下是一个不错的git配置管理模型:</p>
<p><img src="/res/img/gitmodel/gitmodel.png" alt=""></p>
<ul>
<li>feature（多个、玫红）。主要是自己玩了，差不多的时候要合并回develop去。从不与master交互。</li>
<li>develop（1个、黄色）。主要是和feature以及release交互。</li>
<li>release（同一时间1个、绿色）。总是基于develop，最后又合并回develop。当然对应的tag跑到master这边去了。生命周期很短，只是为了发布</li>
<li>hotfix（同一时间1个、红色）。总是基于master，并最后合并到master和develop。生命周期较短，用了修复bug或小粒度修改发布。</li>
<li>master（1个蓝色）。没有什么东西，仅是一些关联的tag，因从不在master上开发。</li>
</ul>
<p>在这个模型中，master和develop都具有象征意义。master分支上的代码总是稳定的（stable build），随时可以发布出去。develop上的代码总是从feature上合并过来的，可以进行Nightly Builds，但不直接在develop上进行开发。当develop上的feature足够多以至于可以进行新版本的发布时，可以创建release分 支。</p>
<p>release分支基于develop，进行很简单的修改后就被合并到master，并打上tag，表示可以发布了。紧接着release将被合 并到develop；此时develop可能往前跑了一段，出现合并冲突，需要手工解决冲突后再次合并。这步完成后就删除release分支。</p>
<p>当从已发布版本中发现bug要修复时，就应用到hotfix分支了。hotfix基于master分支，完成bug修复或紧急修改后，要merge回master，打上一个新的tag，并merge回develop，删除hotfix分支</p>
<p>主分支:master,develop, master分支为稳定版本,develop为整合分支可在之上进行日编译和持续集成.<br>辅助分支:feature(功能开发),hotfix(热补丁),release(发布整合),生命周期较短</p>
<h3 id="feature-分支使用规范："><a href="#feature-分支使用规范：" class="headerlink" title="feature 分支使用规范："></a>feature 分支使用规范：</h3><ol>
<li>可以从develop分支发起feature分支</li>
<li>代码必须合并回develop分支</li>
<li>feature分支的命名可以使用除master，develop，release-<em>，hotfix-</em>之外的任何名称</li>
</ol>
<h3 id="release分支使用规范"><a href="#release分支使用规范" class="headerlink" title="release分支使用规范"></a>release分支使用规范</h3><ol>
<li>可以从develop分支派生</li>
<li>必须合并回develop分支和master分支</li>
<li>分支命名惯例：release-*</li>
</ol>
<p>release分支是为发布新的产品版本而设计的。在这个分支上的代码允许做小的缺陷修正、准备发布版本所需的各项说明信息（版本号、发布时间、 编译时间等等）。<br>当develop分支上的代码已经包含了所有即将发布的版本中所计划包含的软件功能，并且已通过所有测试时，我们就可以考虑准备创建 release分支了。<br>成功的派生了release分支，并被赋予版本号之后，develop分支就可以为“下一个版本”服务了。所谓的“下一个版本”是在当前即将发布的版本之后发布的版本。版本号的命名可以依据项目定义的版本号命名规则进行。</p>
<h3 id="hotfix分支"><a href="#hotfix分支" class="headerlink" title="hotfix分支"></a>hotfix分支</h3><p>使用规范：</p>
<ol>
<li>可以从master分支派生</li>
<li>必须合并回master分支和develop分支</li>
<li>分支命名惯例：hotfix-*<br>和release分支一样hotfix分支都会产生新的版本号.</li>
</ol>
<h3 id="人员权限"><a href="#人员权限" class="headerlink" title="人员权限"></a>人员权限</h3><p>开发人员:feature,hotfix<br>技术经理:feature,develop,hotfix,release<br>运维:release,master<br>测试人员:develop,release,master</p>
<ol>
<li><a href="http://nvie.com/posts/a-successful-git-branching-model/" target="_blank" rel="external">原文</a></li>
<li><a href="http://blog.jobbole.com/78960/" target="_blank" rel="external">git基础</a></li>
</ol>
<h1 id="VC经济基本概念"><a href="#VC经济基本概念" class="headerlink" title="VC经济基本概念"></a>VC经济基本概念</h1><ol>
<li><a href="http://36kr.com/p/5053245.html" target="_blank" rel="external">VC经济基本概念</a></li>
<li><a href="http://36kr.com/p/5053195.html" target="_blank" rel="external">决策分析模型</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      对于未来，看得更远一些，想得更大一些吧.(git配置管理,sass运营)
    
    </summary>
    
      <category term="攻城狮周记" scheme="http://www.lizorn.com/categories/%E6%94%BB%E5%9F%8E%E7%8B%AE%E5%91%A8%E8%AE%B0/"/>
    
    
      <category term="大数据" scheme="http://www.lizorn.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="新知" scheme="http://www.lizorn.com/tags/%E6%96%B0%E7%9F%A5/"/>
    
      <category term="Git配置管理" scheme="http://www.lizorn.com/tags/Git%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/"/>
    
      <category term="Sass" scheme="http://www.lizorn.com/tags/Sass/"/>
    
  </entry>
  
  <entry>
    <title>攻城狮周记(三)</title>
    <link href="http://www.lizorn.com//2016/09/05/readmemo/"/>
    <id>http://www.lizorn.com//2016/09/05/readmemo/</id>
    <published>2016-09-04T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Yahoo开源Pulsar：大规模的发布-订阅（Pub-Sub）消息传递平台"><a href="#Yahoo开源Pulsar：大规模的发布-订阅（Pub-Sub）消息传递平台" class="headerlink" title="Yahoo开源Pulsar：大规模的发布/订阅（Pub-Sub）消息传递平台"></a>Yahoo开源Pulsar：大规模的发布/订阅（Pub-Sub）消息传递平台</h1><p><a href="https://github.com/yahoo/pulsar" target="_blank" rel="external">yahoo/pulsar</a></p>
<h1 id="python进行数据分析"><a href="#python进行数据分析" class="headerlink" title="python进行数据分析"></a>python进行数据分析</h1><ol>
<li>基础知识:set,list,dict等数据架构</li>
<li>学习数据处理库:numpy,pandas等模块</li>
<li>csv,数据库等导入导出</li>
<li>爬虫:爬豆瓣,然后爬动态网站,爬的动80%的网站后,再挑战下淘宝,天猫等</li>
<li>web: django, flask, <a href="http://www.highcharts.com/" target="_blank" rel="external">highcharts</a></li>
<li>文本挖掘:jieba分词模块</li>
</ol>
<p><a href="http://blog.csdn.net/BaiHuaXiu123/article/details/52464510" target="_blank" rel="external">人工智能之机器学习路线图</a></p>
<h1 id="精通机器学习的5本免费电子书"><a href="#精通机器学习的5本免费电子书" class="headerlink" title="精通机器学习的5本免费电子书"></a>精通机器学习的5本免费电子书</h1><p><a href="http://geek.csdn.net/news/detail/100024" target="_blank" rel="external">原文</a></p>
<h1 id="医学影像-成像蓝海"><a href="#医学影像-成像蓝海" class="headerlink" title="医学影像,成像蓝海"></a>医学影像,成像蓝海</h1><p><a href="http://36kr.com/p/5052501.html" target="_blank" rel="external">原文</a></p>
<h1 id="互联网数据分析书籍清单"><a href="#互联网数据分析书籍清单" class="headerlink" title="互联网数据分析书籍清单"></a>互联网数据分析书籍清单</h1><p>数据分析是一个好行当,部分书籍已看过.<br><a href="http://36kr.com/p/5052301.html" target="_blank" rel="external">原文</a></p>
<h1 id="打破定制旅游的产能边界"><a href="#打破定制旅游的产能边界" class="headerlink" title="打破定制旅游的产能边界"></a>打破定制旅游的产能边界</h1><p><a href="http://36kr.com/p/5052293.html" target="_blank" rel="external">原文</a></p>
<h1 id="视频直播技术编码和封装"><a href="#视频直播技术编码和封装" class="headerlink" title="视频直播技术编码和封装"></a>视频直播技术编码和封装</h1><p><a href="http://geek.csdn.net/news/detail/99498" target="_blank" rel="external">原文</a></p>
<h1 id="如何成为一名数据科学家"><a href="#如何成为一名数据科学家" class="headerlink" title="如何成为一名数据科学家"></a>如何成为一名数据科学家</h1><p><a href="http://daily.zhihu.com/story/3909126" target="_blank" rel="external">原文</a></p>
]]></content>
    
    <summary type="html">
    
      python大数据分析,医学影像研究报告.
    
    </summary>
    
      <category term="攻城狮周记" scheme="http://www.lizorn.com/categories/%E6%94%BB%E5%9F%8E%E7%8B%AE%E5%91%A8%E8%AE%B0/"/>
    
    
      <category term="新知" scheme="http://www.lizorn.com/tags/%E6%96%B0%E7%9F%A5/"/>
    
      <category term="数据分析" scheme="http://www.lizorn.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="机器学习" scheme="http://www.lizorn.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>我皮肤上的字</title>
    <link href="http://www.lizorn.com//2016/09/02/the-words-on-my-skin/"/>
    <id>http://www.lizorn.com//2016/09/02/the-words-on-my-skin/</id>
    <published>2016-09-01T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>翻译自科幻小小说,转载请注明出处. <a href="http://uncannymagazine.com/article/the-words-on-my-skin/" target="_blank" rel="external">原文</a></p>
</blockquote>
<p>我的皮肤上写着字,字代表了我的个性.</p>
<p>我身上最大那几个字是母亲写的-<code>机灵</code>,<code>有爱</code>,<code>随和</code>,<code>守记</code>.它们写在我的背上,这是我自己无法接触的皮肤.</p>
<p>母亲的那几个最大的字叫<code>体贴</code>,由她的爸爸所赐,整个字填满了她的整个右手臂.</p>
<p>六岁,我还不太识字,我偷了母亲的<em>那个笔</em>,为自己选择了第一个词–<code>快乐</code>.当这两个字歪歪扭扭的出现在我的整个左前臂上时,母亲震惊了.私下在皮肤上写字的是违法的,母亲可能会因此失去<em>持笔者</em>的资格.但是母亲没有生气,她的身上没有<code>愤怒</code>,取而代之的是<code>耐心</code>和<code>谅解</code>.</p>
<p>持笔机制是这样的,只有少数的家庭成员负责持笔,成为持笔者就意味着更多的权利和责任,他们需要对用笔情况做备案报告,还时不时要受审查.违背了持笔规则会受到非常严厉的制裁.这种规则意图控制笔的滥用,但事实上,审查人员非常的腐败,用点金钱就可以买通了.</p>
<p>于是十岁,我又几次偷偷的在身上写了字–<code>聪明</code>,<code>鬼祟</code>,<code>独立</code>,一次也没被抓住.</p>
<p>十四岁,我半夜起来,再次在自己的大腿内侧写上–<code>热情</code>,<code>敏感</code>,<code>轻浮</code>.母亲为此多年没有和我说话,她默默在我的背上增加了三个词–<code>责任</code>,<code>真实</code>,<code>谨慎</code>.</p>
<p>母亲的管教激发了我的叛逆,我报复性在整个左身体写上了–<code>艺术</code>,<code>粗鲁</code>,<code>野心</code>,<code>玩乐</code>,<code>爱交际</code>,<code>固执</code>.母亲假装没有看到,她可能不想激化我们之间的矛盾,她也可能默许了我的选择,总之,她沉默了.</p>
<p>十八岁,我搬出了家,我给自己写上<code>自信</code>和<code>性感</code>.</p>
<p>我开始和一个老男人约会,我疯狂的爱上了他.他并不来自持笔者的家庭,所以他身上的词语非常匮乏,只有三个–<code>勇敢</code>,<code>健壮</code>,<code>迷人</code>.和他在一起很幸福,直到我发现了他的秘密和谎言.于是趁他睡着的时候,我冲动的在他的后劲(靠近耳朵那,他永远也不会看到那个地方)写上–<code>忠诚</code>,<code>信任</code>,<code>诚实</code>,<code>有爱</code>.结果第二天早上,他离我而去,再也没有回来.</p>
<p>我不知道他应该忠于谁,但我知道那个人不是我.</p>
<p>之后我又陷入到几场短暂的关系里,我的<code>责任感</code>和<code>谨慎</code>已经被<code>刺激</code>,<code>狂野</code>淹没了.我变得鲁莽而歇斯底里,虽然我身上并没有这些字.我感到茫然,我举足无措,更让我沮丧的是,我还怀孕了…</p>
<p>虽然母亲和我已经几个月没有联系了,我还是去了她那里.我很害怕她又会在我身上写字,害怕她会把我变成另外一个人,但她没有,她倾听了我的遭遇,安抚了我的焦虑,她耐心的等待着我,等待我持笔为自己写下此刻最需要的那几个字–<code>母爱</code>,<code>信赖</code>,<code>聪慧</code>.</p>
<p>现在,我的身上已经没有太多的位置可以写了,字越写越小,我的个性也变得越来越固定,不大会有太大的变化.我必须得小心翼翼的选词了,想着想着,我开始为年幼时候的冲动选择后悔万分,我对着母亲大声发泄着,”就让我这样吧”,我的眼泪和悔恨绝提而出.</p>
<p>随着宝宝的成长,我肚子上的皮肤延伸开来了,我落笔在这个额外的空间写上了–<code>坚韧</code>,<code>力量</code>,<code>坚持</code>,<code>冷静</code>, 这将有助于我的分娩.</p>
<p>我顺利产下了一个健康的男孩,他的皮肤就像一块空帆布,崭新而又纯粹,也承载了太多别人的期许.</p>
<p>母亲递给我<code>那支笔</code>,我准备在那张空白的背上写下什么.</p>
<p>什么词是宝宝最适合的?母亲和我苦思冥想.</p>
<p>我终于明白了应该写的字,但那些字不应该由我来写.</p>
<p>我于掰断了笔芯,把笔扔的远远的.</p>
<p>我爱我的儿子,不管他会变成什么.</p>
<p>他可以去做<code>自己</code>了.</p>
]]></content>
    
    <summary type="html">
    
      我的皮肤上写着字,字代表了我的个性.
    
    </summary>
    
      <category term="小说" scheme="http://www.lizorn.com/categories/%E5%B0%8F%E8%AF%B4/"/>
    
    
      <category term="翻译" scheme="http://www.lizorn.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>攻城狮周记(二)</title>
    <link href="http://www.lizorn.com//2016/08/30/readmemo/"/>
    <id>http://www.lizorn.com//2016/08/30/readmemo/</id>
    <published>2016-08-29T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="百度Github技术栈"><a href="#百度Github技术栈" class="headerlink" title="百度Github技术栈"></a>百度Github技术栈</h1><p><a href="https://github.com/baidu" target="_blank" rel="external">原文</a></p>
<h1 id="众安保险战略路线图"><a href="#众安保险战略路线图" class="headerlink" title="众安保险战略路线图"></a>众安保险战略路线图</h1><p><a href="http://36kr.com/p/5051880.html" target="_blank" rel="external">原文</a></p>
<h1 id="浏览器存储及使用"><a href="#浏览器存储及使用" class="headerlink" title="浏览器存储及使用"></a>浏览器存储及使用</h1><p><a href="http://geek.csdn.net/news/detail/98519" target="_blank" rel="external">原文</a></p>
<h1 id="RN在直播应用中的实践"><a href="#RN在直播应用中的实践" class="headerlink" title="RN在直播应用中的实践"></a>RN在直播应用中的实践</h1><p><a href="http://geek.csdn.net/news/detail/98643" target="_blank" rel="external">原文</a></p>
<h1 id="从0到N建立高性价比的大数据平台"><a href="#从0到N建立高性价比的大数据平台" class="headerlink" title="从0到N建立高性价比的大数据平台"></a>从0到N建立高性价比的大数据平台</h1><p><a href="http://geek.csdn.net/news/detail/92129" target="_blank" rel="external">原文</a></p>
<h1 id="直播技术知识库干活一瞥"><a href="#直播技术知识库干活一瞥" class="headerlink" title="直播技术知识库干活一瞥"></a>直播技术知识库干活一瞥</h1><p><a href="http://geek.csdn.net/news/detail/98354" target="_blank" rel="external">原文</a></p>
<h1 id="一切商业皆内容-一切内容皆IP"><a href="#一切商业皆内容-一切内容皆IP" class="headerlink" title="一切商业皆内容,一切内容皆IP"></a>一切商业皆内容,一切内容皆IP</h1><p><a href="http://36kr.com/p/5051972.html" target="_blank" rel="external">原文</a></p>
]]></content>
    
    <summary type="html">
    
      直播技术,大数据平台架构,浏览器存储,百度开源分布式机器学习框架
    
    </summary>
    
      <category term="攻城狮周记" scheme="http://www.lizorn.com/categories/%E6%94%BB%E5%9F%8E%E7%8B%AE%E5%91%A8%E8%AE%B0/"/>
    
    
      <category term="新知" scheme="http://www.lizorn.com/tags/%E6%96%B0%E7%9F%A5/"/>
    
      <category term="百度技术栈" scheme="http://www.lizorn.com/tags/%E7%99%BE%E5%BA%A6%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    
      <category term="直播技术" scheme="http://www.lizorn.com/tags/%E7%9B%B4%E6%92%AD%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>攻城狮周记(一)</title>
    <link href="http://www.lizorn.com//2016/08/22/readmemo/"/>
    <id>http://www.lizorn.com//2016/08/22/readmemo/</id>
    <published>2016-08-21T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>每周花时间阅读技术文章,摘录精华</p>
<blockquote>
<p>花1小时写代码，就要花10小时检查代码。查找漏洞都成了写代码的一部分了，这个差距太悬殊。就算写代码多费点时间，代码也要简单易懂。<br>—— Robert C. Martin《Clean Code: A Handbook of Agile Software Craftsmanship》</p>
</blockquote>
<h1 id="高性能开源通用RPC框架-谷歌出品"><a href="#高性能开源通用RPC框架-谷歌出品" class="headerlink" title="高性能开源通用RPC框架,谷歌出品"></a>高性能开源通用RPC框架,谷歌出品</h1><p>以前用RPC开发过一个分布式系统,那么gRPC又是什么?</p>
<p>与许多 RPC 系统类似，gRPC 也是基于以下理念：定义一个服务，指定其能够被远程调用的方法（包含参数和返回类型）。在服务端实现这个接口，并运行一个 gRPC 服务器来处理客户端调用。在客户端拥有一个存根能够像服务端一样的方法。</p>
<p><a href="http://www.grpc.io/docs/" target="_blank" rel="external">grpc</a></p>
<h1 id="高并发系统HTTP缓存"><a href="#高并发系统HTTP缓存" class="headerlink" title="高并发系统HTTP缓存"></a>高并发系统HTTP缓存</h1><ol>
<li>服务端响应的Last-Modified会在下次请求时以If-Modified-Since请求头带到服务端进行文档是否修改的验证，如果没有修改则返回304，浏览器可以直接使用缓存内容；</li>
<li>Cache-Control:max-age和Expires用于决定浏览器端内容缓存多久，即多久过期，过期后则删除缓存重新从服务端获取最新的；另外可以用于from cache场景；</li>
<li>http/1.1规范定义的Cache-Control优先级高于http/1.0规范定义的Expires；</li>
<li>一般情况下Expires=当前系统时间+缓存时间（Cache-Control:max-age）；</li>
<li>http/1.1规范定义了ETag来通过文档摘要的方式控制。</li>
</ol>
<p><a href="http://geek.csdn.net/news/detail/96586" target="_blank" rel="external">nginx缓存配置见原文</a></p>
<h1 id="携程大数据实践：高并发应用架构及推荐系统案例"><a href="#携程大数据实践：高并发应用架构及推荐系统案例" class="headerlink" title="携程大数据实践：高并发应用架构及推荐系统案例"></a>携程大数据实践：高并发应用架构及推荐系统案例</h1><p>有比较大的参考价值,当然整体架构都描述的比较笼统.</p>
<h2 id="应用系统的整体架构"><a href="#应用系统的整体架构" class="headerlink" title="应用系统的整体架构"></a>应用系统的整体架构</h2><p><img src="/res/img/weekly/携程应用系统的整体架构.png" alt=""></p>
<p>数据源部分，Hermes是携程框架部门提供的消息队列，基于Kafka和MySQL做为底层实现的封装，应用于系统间实时数据传输交互通道。Hive和HDFS是携程海量数据的主要存储，两者来自Hadoop生态体系。</p>
<p>离线部分，包含的模块有MR、Hive、Mahout、SparkQL/MLLib。Mahout提供基于Hadoop平台进行数据挖掘的一些机器学习的算法包。Spark类似hadoop也是提供大数据并行批量处理平台，但是它是基于内存的。SparkQL 和Spark MLLib是基于Spark平台的SQL查询引擎和数据挖掘相关算法框架。携程主要用Mahout和Spark MLLib进行数据挖掘工作。</p>
<p>调度系统zeus，是淘宝开源大数据平台调度系统.</p>
<p>近线部分，是基于Muise来实现我们的近实时的计算场景，Muise是也是携程OPS提供的实时计算流处理平台，内部是基于Storm实现与HERMES消息队列搭配起来使用。例如，我们使用MUSIE通过消费来自消息队列里的用户实时行为，订单记录，结合画像等一起基础数据，经一系列复杂的规则和算法，实时的识别出用户的行程意图。</p>
<p>后台/线上应用部分，MySQL用于支撑后台系统的数据库。ElasticSearch是基于Lucene实现的分布式搜索引擎，用于索引用户画像的数据，支持离线精准营销的用户筛选，同时支持线上应用推荐系统的选品功能。HBase 基于Hadoop的HDFS 上的列存储NoSQL数据库，用于后台报表可视化系统和线上服务的数据存储。</p>
<p>这里说明一下, 在线和后台应用使用的ElasticSearch和HBase集群是分开的，互不影响。Redis支持在线服务的高速缓存，用于缓存统计分析出来的热点数据。</p>
<h2 id="系统案例"><a href="#系统案例" class="headerlink" title="系统案例"></a>系统案例</h2><p><img src="/res/img/weekly/推荐系统案例.png" alt=""></p>
<ol>
<li>数据源，分结构化数据和非结构化数据.</li>
<li>离线计算,经过数据预处理,数据挖掘,和数据配置后(建立ES索引),输出产品画像,用户画像等.</li>
<li>近线计算,输出用户意图和产品缓存.</li>
</ol>
<p><a href="http://geek.csdn.net/news/detail/96708" target="_blank" rel="external">全文</a></p>
<h1 id="大数据4V特征"><a href="#大数据4V特征" class="headerlink" title="大数据4V特征"></a>大数据4V特征</h1><p>大数据的特点,按照IBM提出的,4V特性:</p>
<ol>
<li>Volume(海量): 数量大</li>
<li>Velocity(速度): 数据量增长快</li>
<li>Variety(多样性): 各种各样类型的数据出现</li>
<li>Varacity(准确性): 数据的准确性</li>
</ol>
<h1 id="日志分析智能化"><a href="#日志分析智能化" class="headerlink" title="日志分析智能化"></a>日志分析智能化</h1><p>日志是企业内部宝贵的IT大数据,相比excel和数据库而言,日志是非结构化数据,需要进行进一步的挖掘.</p>
<p>日志分析产品:<a href="http://www.splunk.com/" target="_blank" rel="external">Splunk</a>,<a href="https://www.elastic.co/" target="_blank" rel="external">ELK</a>,日志易</p>
<p>日志易的技术架构:<br><img src="/res/img/weekly/日志易架构.png" alt=""></p>
<p>实现了搜索处理语言SPL（Search Processing Language），用户可以在搜索框里编写SPL脚本，对日志进行复杂的关联分析，非常强大、灵活，实现了“框计算”</p>
<h1 id="IOS动态更新方案"><a href="#IOS动态更新方案" class="headerlink" title="IOS动态更新方案"></a>IOS动态更新方案</h1><p>JSPatch 是 iOS 平台上的一个开源库，只需接入极小的三个引擎文件，即可以用 JavaScript 调用和替换任意 Objective-C 方法，也就是说可以在 App 上线后通过下发 JavaScript 脚本，实时修改任意 Objective-C 方法的实现，达到修复 Bug 或动态运营的目的。</p>
<p>如果作为热更新工具,相比RN,更轻量级,更稳定些,学习成本也稍低些.</p>
<h1 id="人工智能的挑战"><a href="#人工智能的挑战" class="headerlink" title="人工智能的挑战"></a>人工智能的挑战</h1><h2 id="人工智能技术前景"><a href="#人工智能技术前景" class="headerlink" title="人工智能技术前景?"></a>人工智能技术前景?</h2><ol>
<li>无监督预测学习,例如联想能力;</li>
<li>单例(有限例)学习;</li>
<li>结合贝叶斯统计的深度学习，使得融入由因到果或互为因果的relation变得容易；</li>
<li>层级增强的memory，reasoning，planning的表征方法；</li>
<li>深度增强学习；</li>
<li>动态neural turing machine及其变种。<br>这些技术的落地应用,可以使得相当程度的机器智能改善人类生活,例如机器助理,自动驾驶,智能服务等.</li>
</ol>
<h2 id="技术人员需要学习那些人工智能技术"><a href="#技术人员需要学习那些人工智能技术" class="headerlink" title="技术人员需要学习那些人工智能技术?"></a>技术人员需要学习那些人工智能技术?</h2><ol>
<li>人工智能未来应该是一种工具,会用就好,软件工程师需要考虑如何将人工智能的工具应用到实际产品中.</li>
<li>人工智能是一种思维方式,工程师重新审视自己的工作方式:是否可以借鉴AI来改善和提升现在的工作?</li>
</ol>
<h1 id="移动端高效实用SQLite"><a href="#移动端高效实用SQLite" class="headerlink" title="移动端高效实用SQLite"></a>移动端高效实用SQLite</h1><p><a href="http://geek.csdn.net/news/detail/96248" target="_blank" rel="external">原文</a></p>
<p>移动端少量的KV类型数据库可以直接存在文件上,稍微复杂一点的格式化成JSON或XML保存.在更大的量级上则需要使用SQLite.</p>
<h2 id="数据库初始化"><a href="#数据库初始化" class="headerlink" title="数据库初始化"></a>数据库初始化</h2><h3 id="设置合理的page-size和cache-size"><a href="#设置合理的page-size和cache-size" class="headerlink" title="设置合理的page_size和cache_size"></a>设置合理的page_size和cache_size</h3><p>SQLite 数据库把其所存储的数据以 page 为最小单位进行存储。cache_size 的含义为当进行查询操作时，用多少个 page 来缓存查询结果.</p>
<p>可能影响到 page_size 和 cache_size 最优值选取的三个因素：</p>
<ol>
<li>table_size</li>
<li>存储的数据类型</li>
<li>增删查改比例</li>
</ol>
<h3 id="通过timer控制数据库事务定时提交"><a href="#通过timer控制数据库事务定时提交" class="headerlink" title="通过timer控制数据库事务定时提交"></a>通过timer控制数据库事务定时提交</h3><p>一个Transaction能够大大的提升其内部的增删改查操作的速度.事务的引入能提升性能<em>两个数量级</em>以上.</p>
<h3 id="数据库完整性校验"><a href="#数据库完整性校验" class="headerlink" title="数据库完整性校验"></a>数据库完整性校验</h3><p>移动客户端的数据库运行环境比较复杂,需呀校验数据库的完整性,</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PRAGMA integrity_check</div></pre></td></tr></table></figure>
<p>如执行失败就需要回滚到上一个版本.</p>
<h3 id="数据库升级逻辑"><a href="#数据库升级逻辑" class="headerlink" title="数据库升级逻辑"></a>数据库升级逻辑</h3><p>可以在meta表中并加入版本号,SQL语句需通过版本号来提供兼容性.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE meta (key LONGVARCHAR NOT NULL UNIQUE PRIMARY KEY, value LONGVARCHAR)</div><div class="line">INSERT OR REPLACE INTO meta (key,value) VALUES (version, 1)</div><div class="line">INSERT OR REPLACE INTO meta (key,value) VALUES (last_compatible_version, 1)</div></pre></td></tr></table></figure>
<h2 id="高效SQL语句"><a href="#高效SQL语句" class="headerlink" title="高效SQL语句"></a>高效SQL语句</h2><ol>
<li>建立索引，就是将这列以及主键所有数据取出。以索引列为主键按照升序，原表主键为第二列，重新创建一张新的表。使其搜索速度降低到 Log(N)。</li>
<li>先SELECT 再选择 INSERT OR UPDATE 的方法。</li>
<li>FTS(Full Text Search)是SQLite未加快字符串搜索而创建的虚拟表.通过分词大大加快英文类/中文类字符串(配合ICU)的搜索速度.</li>
<li>为做到数据库Model跨IOS,Android平台,用protobuf作为数据库的输入输出参数.两个平台用一份proto文件分别生成各自的实现文件.</li>
<li>不是用SQLite的多线程实现,多线程会增加线程开销而且操作加锁,性能比较差.</li>
<li>加密数据库.加密对性能损耗大约是3%的CPU时间.</li>
</ol>
<h1 id="移动端开发流程"><a href="#移动端开发流程" class="headerlink" title="移动端开发流程"></a>移动端开发流程</h1><ol>
<li>web端流程. 产品经理提出需求(原型等)&gt;讨论需求&gt;通过需求&gt;交付设计师设计layout&gt;确认&gt;切页面&gt;交付工程师开发&gt;后端(前端)定接口&gt;前后端并行开发&gt;修改细节及bug&gt;上线。</li>
<li>移动客户端. 产品经理提出需求(原型等)&gt;讨论需求&gt;通过需求&gt;设计layout(包括交互设计及ui设计)&gt;确认&gt;切图&gt;交付工程师开发&gt;后端接口开发/移动开发&gt;上线。</li>
</ol>
<p>大体上的流程都不会变,移动端的如果使用Native开发,那前端就消失了,切图部分交给UI来做.</p>
<p>移动端的产品设计交互性和逻辑性会更强,所以原型设计需要由设计把控交互部分,如果产品经理无法把控交互部分,至少要画出概念图和流程图,交给设计师进行设计.</p>
<p>移动设计相比web端设计有一些异同点:</p>
<ol>
<li>字体选用. web端一般是宋体或者微软雅黑. IOS:冬青黑体或者华文黑体. Android: Droid Sans Fallback, 冬青黑或者华文黑也可以考虑.</li>
<li>简单易用.</li>
<li>分辨率. iphone + andorid存在大量的分辨率,需要设计适配.</li>
<li>切图.</li>
<li>安卓和iphone差别交互设计.</li>
</ol>
<p>架构设计主要是后端,需要考虑如何提供高性能的API接口,接口的制定可以由后端牵头也可以由移动开发人员牵头.</p>
<h1 id="运营产品核心指标分析流程"><a href="#运营产品核心指标分析流程" class="headerlink" title="运营产品核心指标分析流程"></a>运营产品核心指标分析流程</h1><h2 id="电商产品"><a href="#电商产品" class="headerlink" title="电商产品"></a>电商产品</h2><p><img src="/res/img/weekly/电商产品.png" alt=""></p>
<h2 id="SaaS类产品和移动用户产品的核心指标"><a href="#SaaS类产品和移动用户产品的核心指标" class="headerlink" title="SaaS类产品和移动用户产品的核心指标"></a>SaaS类产品和移动用户产品的核心指标</h2><p><img src="/res/img/weekly/SAAS.png" alt=""></p>
<h2 id="内容网站关注的核心指标"><a href="#内容网站关注的核心指标" class="headerlink" title="内容网站关注的核心指标"></a>内容网站关注的核心指标</h2><p><img src="/res/img/weekly/内容类核心指标.png" alt=""></p>
<h2 id="UGC-社交站关注的核心指标"><a href="#UGC-社交站关注的核心指标" class="headerlink" title="UGC,社交站关注的核心指标"></a>UGC,社交站关注的核心指标</h2><p><img src="/res/img/weekly/社交类.png" alt=""></p>
<h2 id="双边市场-服务方与提供服务方-关注的指标"><a href="#双边市场-服务方与提供服务方-关注的指标" class="headerlink" title="双边市场(服务方与提供服务方)关注的指标"></a>双边市场(服务方与提供服务方)关注的指标</h2><p><img src="/res/img/weekly/双边市场.png" alt=""></p>
<h1 id="融资相关流程"><a href="#融资相关流程" class="headerlink" title="融资相关流程"></a>融资相关流程</h1><p><a href="http://36kr.com/p/5051647.html" target="_blank" rel="external">异步36氪</a></p>
]]></content>
    
    <summary type="html">
    
      每周花时间阅读技术文章,摘录精华
    
    </summary>
    
      <category term="攻城狮周记" scheme="http://www.lizorn.com/categories/%E6%94%BB%E5%9F%8E%E7%8B%AE%E5%91%A8%E8%AE%B0/"/>
    
    
      <category term="大数据" scheme="http://www.lizorn.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="新知" scheme="http://www.lizorn.com/tags/%E6%96%B0%E7%9F%A5/"/>
    
      <category term="gRpc" scheme="http://www.lizorn.com/tags/gRpc/"/>
    
      <category term="架构" scheme="http://www.lizorn.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="SQLite" scheme="http://www.lizorn.com/tags/SQLite/"/>
    
  </entry>
  
  <entry>
    <title>活着为了讲述</title>
    <link href="http://www.lizorn.com//2016/08/13/vivir-para-contarla/"/>
    <id>http://www.lizorn.com//2016/08/13/vivir-para-contarla/</id>
    <published>2016-08-12T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img3.doubanio.com/lpic/s28606305.jpg" alt=""></p>
<blockquote>
<p>我是个爱讲故事的孩子,我想说的是:爱真的存在,幸福真的可能,死神也会败在幸福的手下.</p>
</blockquote>
<p>《活着为了讲述》是诺贝尔文学奖获得者，《百年孤独》作者加西亚·马尔克斯唯一传记,14年,新闻头条报道了这位文学巨匠的陨落,当时就非常想看这本书.马尔克斯是个爱讲故事的人,在虚实之间，在&lt;&lt;活着为了讲述&gt;&gt;里他亲自讲述了自己的故事。</p>
<p>马尔克斯出生于哥伦比亚马格达莱纳的一个海滨小镇–阿拉卡塔卡,童年和外祖父母一起生活.他的父亲和大多数的欧美父母一样,希望他以后过上体面而稳定的生活–做一个律师,但马尔克斯对写作有着无限的遐想和热情,’要么写作,要么死去!’,’个人志向与生俱来,背道而驰,有违健康.顺势而行,灵丹妙药’.马尔克斯不但成为了一个作家,更跃升成为20世纪伟大的文学大师之一.</p>
<p>自传里提及了他非常多的短篇小说,一个灵感就促成了一篇故事,受卡夫卡《变形记》启发的《第三次忍受》,因美女一句话而写成的《埃娃在猫身体里面》,石鸻鸟啄人一触而就《石鸻鸟之夜》,遗憾的是这本自传并未完成,最后停留在马尔克斯的青年时期,那个时候&lt;&lt;百年孤独&gt;&gt;还未问世,还藏匿在&lt;&lt;家&gt;&gt;中,也许在他心中这才是真实的自己,&lt;&lt;百年孤独&gt;&gt;的成功反而成为一种桎梏.</p>
<p>马尔克斯的&lt;&lt;活着为了讲述&gt;&gt;即像小说又像自传,他自述了一个浓缩的世界,喧嚣纷乱却又生动可信的显示了一片大陆及其人民的富足和贫困,以及,妖娆妩媚的哥伦比亚女人在这个贫穷,落后的,但充满生机的小镇里抽烟,喝酒,调情,生育和生存…</p>
<blockquote>
<p>生活不是我们活过的日子,而是我们记住的日子,我们为了讲述而在记忆中重现的日子.</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      要么写作,要么死!
    
    </summary>
    
      <category term="读书笔记" scheme="http://www.lizorn.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="消遣" scheme="http://www.lizorn.com/tags/%E6%B6%88%E9%81%A3/"/>
    
      <category term="百年孤独" scheme="http://www.lizorn.com/tags/%E7%99%BE%E5%B9%B4%E5%AD%A4%E7%8B%AC/"/>
    
  </entry>
  
  <entry>
    <title>讲故事的人：斯皮尔伯格传</title>
    <link href="http://www.lizorn.com//2016/08/10/Steven-Allan-Spielberg/"/>
    <id>http://www.lizorn.com//2016/08/10/Steven-Allan-Spielberg/</id>
    <published>2016-08-09T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img3.doubanio.com/lpic/s28002452.jpg" alt=""></p>
<blockquote>
<p>其实每一部电影都是一个时间胶囊,当你拍完一部影片,向演职人员道别时,你也把一段生命埋在了那个片场——你知道的,而那段生命将会永远留在那里.</p>
</blockquote>
<p>史蒂文·斯皮尔伯格1946年12月18日出生于俄亥俄州的辛辛那提市一个美国犹太家庭，12岁就开始执导,是个天才.在长达40多年的岁月里,史蒂文·斯皮尔伯格创造了鼓舞人心并且令人难以忘怀的影坛奇迹.他执导的电影范围也很广,惊悚片’&lt;&lt;大白鲨&gt;&gt;’,科幻片’&lt;<e.t.>&gt;’,动作片’&lt;&lt;夺宝奇兵&gt;&gt;’,剧情片’&lt;&lt;辛德勒的名单&gt;&gt;’,战争片’&lt;&lt;太阳帝国&gt;&gt;’钧有代表作.</e.t.></p>
<p>斯皮尔伯格的电影我大部分都看过,印象比较深的还属&lt;&lt;辛德勒的名单&gt;&gt;.那时我还在大学里,不识愁滋味,过着一天5部电影的日子…</p>
<p>评价一本书的好坏需要50年以后,评价一个人一样,所以一本写当世人的传记更是不好写的,这需要岁月的沉淀和时间的审批.不过这本书也不应该称为传记,充其量是一些访谈语录加上对斯皮尔伯格电影创作的一些梳理,有电影创作的幕后故事以及创作意图但并未深入,作者的文笔也比较一般. 全书的插图较多,但排版太差,打乱了几次正文的衔接,尤其是在不熟悉的时候,比如翻看第一页的时候正文断了,第二页接了两页插图,第四页才是续接的正文,实在让人摸不清道不明.</p>
<p>适合电影爱好者购入,翻看,收藏.</p>
<p><img src="/res/weixin.jpg" alt="smiley">{:height=”120px” width=”120px”}</p>
]]></content>
    
    <summary type="html">
    
      其实每一部电影都是一个时间胶囊,当你拍完一部影片,向演职人员道别时,你也把一段生命埋在了那个片场——你知道的,而那段生命将会永远留在那里
    
    </summary>
    
      <category term="读书笔记" scheme="http://www.lizorn.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="博闻" scheme="http://www.lizorn.com/tags/%E5%8D%9A%E9%97%BB/"/>
    
      <category term="电影" scheme="http://www.lizorn.com/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>渴望生活</title>
    <link href="http://www.lizorn.com//2016/08/09/lust-for-life/"/>
    <id>http://www.lizorn.com//2016/08/09/lust-for-life/</id>
    <published>2016-08-08T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img3.doubanio.com/lpic/s27775990.jpg" alt=""></p>
<blockquote>
<p>开启不同于前人的艺术，启发后人的艺术，这就是梵高作品的伟大之处。</p>
</blockquote>
<p>梵高.温森特励志成为一名福音传教士,由于他并未完成传教士的学业,于是屈就到博里那日的矿区传教.他感受到了博里那日煤矿工人生活的艰辛和他们的朴实,然而在一次矿井坍塌事故中,矿产公司的残忍,福音教会的傲慢偏执和不作为,让他开始质疑上帝的存在,上帝放弃了这些朴实和卑微的旷工.他也因此失去了成为传教士的资格,失去了上帝,失去了自己.</p>
<blockquote>
<p>他明白了有些上帝的话,不过是孩子气的借口和托词,是一个吓坏了的孤独的人在寒冷,漫长的黑夜中,由于绝望而散布编造的谎言.没有什么上帝,事情就是这么简单.压根就没有上帝,只有混乱–悲惨的,痛苦的,残忍的,莫名其妙的,无止无休的混乱.</p>
</blockquote>
<p><em>吃土豆的人,1885</em><br><img src="/res/img/lustforlife/The-Potato-Eaters.jpg" alt="吃土豆的人"></p>
<p>梵高在上帝退场后,终于投入了绘画的怀抱.他并没有绘画的基础,虽然他的画比例失调,但他的画有一些说不清道不明的东西…… 梵高过于迷恋绘画,显然他周围的人都无法理解,’有谁会盯着一颗树,顶着一头烈日,画一天的画呢’.在他穷困潦倒的一生里全靠他的弟弟提奥资助过活.在经常饿着肚子,发着烧,身无分文的情况下,梵高完成一副又一副的作品,他对绘画的热爱是狂热的,犹如他对爱情的渴望那样,虽然他的爱情总是不顺的.</p>
<blockquote>
<p>人的行为,非常像画画.整个透视关系随着眼睛的变化而变化,起决定作用的并不是被绘画的对象,而是正在看它的人.</p>
</blockquote>
<p><em>塞纳河上的桥,1886</em><br><img src="/res/img/lustforlife/Bridges-across-the-Seine-at-Asnières.jpg" alt="塞纳河上的桥"></p>
<p>梵高早期在荷兰自学绘画,最后到了巴黎–这座艺术的天堂,他才受到了艺术的召唤,他的艺术形态开始形成.在那他受到了前所未有的冲击,他的画是那么的与众不同,不同到差点让他放弃绘画生涯,梵高的画色彩强烈，色调明亮。他那富于激情的旋转、跃动的笔触，则使他的麦田、柏树、星空等，有如火焰般升腾、颤动，震撼观者的心灵。在他的画上，强烈的情感完全溶化在色彩与笔触的交响乐中,他是表现主义的先驱.</p>
<p>梵高觉得巴黎过于喧嚣于是独自一人来到了法国南方的城市’阿尔勒’,重新过上了贫困的,清苦的,但是纯粹的只有绘画的生活.</p>
<blockquote>
<p>我在寻求,我在奋斗,我在全心全意的投入到艺术之中.我不属于这儿。我是个农民画家，我要回到我的田野上去。我要找到一个太阳，它炽热得能把我心中除了绘画这种慾望以外的一切都烧光。</p>
</blockquote>
<p><em>向日葵,1888</em><br><img src="/res/img/lustforlife/sunflowers-1888.jpg" alt="向日葵"></p>
<p>在阿尔,他精神已经有些不正常了,他知道了,长时间观看事物,才能使他的思想更成熟,理解更深刻.他把他的朋友保尔高更也接到了一起住,于是两个精神病人开始了无止尽的争论.在绘画的领域,梵高是一座真正的火山,而高更则是满腔热血沸腾,即便是没有分歧的部分,他们的讨论也是惊心动魄的.</p>
<p><em>黄房子,1888</em><br><img src="/res/img/lustforlife/The-yellow-house.jpg" alt="黄房子"></p>
<blockquote>
<p>我画太阳时，要画得让人们感觉到它以可怕的速度在旋转。它发射出力量无穷的光波和热波。我画麦田时，要人们感觉到谷粒中的原子在生长、爆裂。我画苹果时，要人们感觉到苹果中的液汁溅到皮肤上，果核中的种籽在往外钻向开花结果！</p>
<p>当我画一个在田里干活的农民的时候,我希望人们感觉到,农民就像庄稼那样正向下融会到土壤里面,而土壤也向上融会到农民身上.我希望人们感受到,太阳正注入到农民,土地,庄稼,犁和马的内部,恰如他们反过来又注入到太阳里面一样.当我开始感受到事件万物运动的这一普遍的节奏时,你才开始懂得了生活.只有这,才是主宰一切的上帝.</p>
</blockquote>
<p>是的,梵高的上帝已经死了,他成为主宰自己生活的上帝,也是他绘画的源泉. 然而正是这份对艺术的热爱和执着与生活的艰辛形成鲜明的对比,时时刻刻折磨着他的神经,’他是一个因善良受苦的天使,也是一个用色彩享乐的天才’,最后他割下了自己的耳朵…随后,他被送入圣雷米的疗养院,在那个安静的世界里,他的内心更为纯净,他画了星空,绽放了他内心最纯净的颜色.</p>
<p><em>星空,1889</em><br><img src="/res/img/lustforlife/starry-night.jpg" alt=""></p>
<p>我想,对生活充满热爱的人们都应该读一下这本书,去感受一下这个崇高的灵魂,感受一下它的孤独,感受一下我们拥有的幸福.</p>
<p>致敬梵高!</p>
<p><em>麦田里的乌鸦,1890</em><br><img src="/res/img/Wheatfield-with-crows-1890.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      他明白了有些上帝的话,不过是孩子气的借口和托词,是一个吓坏了的孤独的人在寒冷,漫长的黑夜中,由于绝望而散布编造的谎言.没有什么上帝,事情就是这么简单.压根就没有上帝,只有混乱--悲惨的,痛苦的,残忍的,莫名其妙的,无止无休的混乱.
    
    </summary>
    
      <category term="读书笔记" scheme="http://www.lizorn.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="博闻" scheme="http://www.lizorn.com/tags/%E5%8D%9A%E9%97%BB/"/>
    
      <category term="梵高" scheme="http://www.lizorn.com/tags/%E6%A2%B5%E9%AB%98/"/>
    
  </entry>
  
  <entry>
    <title>建国大业</title>
    <link href="http://www.lizorn.com//2016/08/08/blockbuster-Founding-of-the-Republic/"/>
    <id>http://www.lizorn.com//2016/08/08/blockbuster-Founding-of-the-Republic/</id>
    <published>2016-08-07T16:00:00.000Z</published>
    <updated>2016-10-30T11:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>‘念奴娇·昆仑</p>
<p>横空出世，莽昆仑，阅尽人间春色。</p>
<p>飞起玉龙三百万，搅得周天寒彻。</p>
<p>夏日消溶，江河横溢，人或为鱼鳖。</p>
<p>千秋功罪，谁人曾与评说?</p>
<p>而今我谓昆仑：不要这高，不要这多雪。</p>
<p>安得倚天抽宝剑，把汝裁为三截?</p>
<p>一截遗欧，一截赠美，一截还东国。</p>
<p>太平世界，环球同此凉热。’</p>
<p>终于读完了这几本书,本意是一周完成的专题阅读,无奈工作过于操心,迟迟未能完成.上面的诗是在长征途中所写，毛泽东登上岷山峰顶，远望青海一带苍茫的昆仑山脉有感而作。整首诗气势磅礴,放眼天下.长征确定了老毛的领袖地位,长征更是宣传书,是宣传队,共产党是播种机.</p>
<p>传记系列的书我本不想涉及,因为传记太虚,虚了那远不如看小说了,而且大部分的自传都是写成他传,他传就是自传,总是会带有一些目的性.尤其是这几人的官方传记,更是具有强烈的政治诉求.所幸挑的这几版书均是国外名人所写,应当还具有一定的客观性吧.</p>
<p>一口气看完这四本书,20世纪的中国从暗潮汹涌,到动荡不安,到建国立业,经历太多.看完后恍如隔世,国外写的传记并未毁三观,大事件还是那几个大事件,想来历史是照妖镜总不至于过于捏造.</p>
<p>几本书都对’大跃进’描述比较少,应该是资料较少的缘故,善长宣传的共产党保密工作确实做的不错.对几个敏感事件也没有太明晰的描述,比如类似89年天安门事件,是谁下令开的枪?并未明说!觉得可能是译者的原因吧,毕竟是要在中国出版的,虽不至于造神但还是有些避讳的,于是翻墙Google了原版,均要收费,无果.</p>
<h1 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h1><p>以史为鉴,20世纪的中国动荡不安,经历了辛亥革命-&gt;五四运动-&gt;国民党成立-&gt;共产党成立-&gt;国共第一次合作-&gt;北伐全国一统一-&gt;剿共-&gt;九一八事变-&gt;西安事变-&gt;国共联合抗日-&gt;抗日胜利-&gt;国共内战-&gt;中华人民共和国成立-&gt;百花齐放-&gt;大跃进-&gt;文化大革命-&gt;四人帮事件-&gt;天安门事件-&gt;中国经济起飞.</p>
<p>从几大事件看来,蒋公失天下是必然的,作为一个政治家和政治领袖,蒋介石是一个战术家而不是战略家,虽然他善于玩弄权术并牢牢的控制了中国人口的大多数,但他实际上不了解整个政权的社会基础.蒋介石是个悲剧人物,他的悲剧是他自己造成的,虽然他有勇气,有精力,有领袖品质,但他缺乏战略眼光,在关键的时刻做了不该做的决定,该攘外的时候坚持按内,该剿匪扫荡的时候又做的不够彻底,丢了民心丢了权利.</p>
<p>而老毛不同,毛虽没有喝过洋墨水,但他有非常高的战略眼光,他从农民中来到农民中去,毛泽东给了农民最想要的东西：“土地和同多年来压迫他们的地主们算帐的机会。”</p>
<p>他来自中国’受虐待的一方’,他所知道是贫困,堕落,剥削和非正义,这些东西他花费了一生在做搏斗.他具备强大的政治野心和执行力,他把改造世界的愿望从教室里带到政治竞技场,在解放人民方面他是光辉的,但在管理复杂的政治军事方面他是不成功的.老毛喜欢斗争,所以他的周围都在斗争中度过.老毛缺乏治理能力,思想极度左倾,而新中国在动荡中最终得以站稳,这都是下面两位的功劳.</p>
<p>周恩来原先在日本留学,五四运动的时候回到上海,随后又到法国求学,回来领导了上海的几次大罢工,早早就成为了中共关键领导人.周的视野比较开阔,有非常大的包容性.他对共产主义的信仰是真诚的,正如他对中国的感情和他那持久的任性也是发自内心的一样.然而他却是典型的儒家政治家,做事比较温和,缺乏领导能力,无法掌舵中国这艘大船,所以最后只能做个大副.周在毛统治的阶段小心翼翼的不进行政治站队,在几次大事件相安无事,充当着调和员和补救者的角色.他并未留恋权利,连子嗣都没有留下,一心辅佐毛,治理中国,对他选择的道路,我们内心感到欣慰,对他身后的中国,我们充满了希望.</p>
<h1 id="lt-lt-邓小平传-gt-gt-英-理查德-伊文思"><a href="#lt-lt-邓小平传-gt-gt-英-理查德-伊文思" class="headerlink" title="&lt;&lt;邓小平传&gt;&gt; (英)理查德.伊文思"></a>&lt;&lt;邓小平传&gt;&gt; <em>(英)理查德.伊文思</em></h1><p><img src="https://img1.doubanio.com/lpic/s25117258.jpg" alt=""><br>伊文思是英国驻中国大使,同时也是一位中国社会问题研究专家,他在20世纪50年代,60年代,80年代先后在中国呆了8年,同时也直接参与了英国问题的谈判,他始终关注着中国,关注着邓小平.他已相对客观公平的眼光展示和解读了邓小平波澜壮阔的一生.</p>
<h1 id="lt-lt-毛泽东传-gt-gt-英-迪克-威尔逊"><a href="#lt-lt-毛泽东传-gt-gt-英-迪克-威尔逊" class="headerlink" title="&lt;&lt;毛泽东传&gt;&gt; (英)迪克.威尔逊"></a>&lt;&lt;毛泽东传&gt;&gt; <em>(英)迪克.威尔逊</em></h1><p><img src="https://img3.doubanio.com/lpic/s6783554.jpg" alt=""></p>
<h1 id="lt-lt-周恩来传-gt-gt-英-迪克-威尔逊"><a href="#lt-lt-周恩来传-gt-gt-英-迪克-威尔逊" class="headerlink" title="&lt;&lt;周恩来传&gt;&gt; (英)迪克.威尔逊"></a>&lt;&lt;周恩来传&gt;&gt; <em>(英)迪克.威尔逊</em></h1><p><img src="https://img1.doubanio.com/lpic/s6886397.jpg" alt=""></p>
<h1 id="lt-lt-蒋介石传-gt-gt-美-布兰恩-克洛泽"><a href="#lt-lt-蒋介石传-gt-gt-美-布兰恩-克洛泽" class="headerlink" title="&lt;&lt;蒋介石传&gt;&gt; (美)布兰恩.克洛泽"></a>&lt;&lt;蒋介石传&gt;&gt; <em>(美)布兰恩.克洛泽</em></h1><p><img src="https://img3.doubanio.com/lpic/s4143764.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      传记系列的书我本不想涉及,因为传记太虚,虚了那远不如看小说了,而且大部分的自传都是写成他传,他传就是自传,总是会带有一些目的性.尤其是这几人的官方传记,更是具有强烈的政治诉求.所幸挑的这几版书均是国外名人所写,应道还具有一定的客观性吧.
    
    </summary>
    
      <category term="读书笔记" scheme="http://www.lizorn.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="博闻" scheme="http://www.lizorn.com/tags/%E5%8D%9A%E9%97%BB/"/>
    
      <category term="传记" scheme="http://www.lizorn.com/tags/%E4%BC%A0%E8%AE%B0/"/>
    
      <category term="毛泽东" scheme="http://www.lizorn.com/tags/%E6%AF%9B%E6%B3%BD%E4%B8%9C/"/>
    
      <category term="邓小平" scheme="http://www.lizorn.com/tags/%E9%82%93%E5%B0%8F%E5%B9%B3/"/>
    
      <category term="周恩来" scheme="http://www.lizorn.com/tags/%E5%91%A8%E6%81%A9%E6%9D%A5/"/>
    
      <category term="蒋介石" scheme="http://www.lizorn.com/tags/%E8%92%8B%E4%BB%8B%E7%9F%B3/"/>
    
  </entry>
  
</feed>
