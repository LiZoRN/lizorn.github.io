<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>临渊羡鱼</title>
  
  <subtitle>丝禽藏荷香，锦鲤绕岛影。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zfeiyu.com/"/>
  <updated>2019-01-15T09:33:56.556Z</updated>
  <id>http://zfeiyu.com/</id>
  
  <author>
    <name>lizorn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>马太效应基模</title>
    <link href="http://zfeiyu.com/2019/01/15/Matthew-Effect/"/>
    <id>http://zfeiyu.com/2019/01/15/Matthew-Effect/</id>
    <published>2019-01-15T08:24:00.000Z</published>
    <updated>2019-01-15T09:33:56.556Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>凡有的，还要加倍给他叫他多余；没有的，连他所有的也要夺过来。资源总是流向原本基础好的地方，形成聚集效应。</p></blockquote><h1 id="因果回路图"><a href="#因果回路图" class="headerlink" title="因果回路图"></a>因果回路图</h1><p><img src="/res/img/Matthew-Effect/Matthew-Effect.jpg" alt=""></p><h1 id="结构特征"><a href="#结构特征" class="headerlink" title="结构特征"></a>结构特征</h1><p><code>马太效应</code>基于两个前提：</p><ol><li>资源是有限的</li><li>怎么分配有限的资源是根据行为者过去的表现来分配的</li></ol><h1 id="如何打破马太效应？"><a href="#如何打破马太效应？" class="headerlink" title="如何打破马太效应？"></a>如何打破马太效应？</h1><ol><li>设法去寻找能够平衡双方绩效表现的上层目标</li><li>改变双方的成功评价标准，引导双方朝不同的方向发展</li></ol>]]></content>
    
    <summary type="html">
    
      凡有的，还要加倍给他叫他多余；没有的，连他所有的也要夺过来。
    
    </summary>
    
      <category term="思维" scheme="http://zfeiyu.com/categories/%E6%80%9D%E7%BB%B4/"/>
    
    
      <category term="逻辑思维" scheme="http://zfeiyu.com/tags/%E9%80%BB%E8%BE%91%E6%80%9D%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>2018读书笔记</title>
    <link href="http://zfeiyu.com/2019/01/06/2018-read-memo/"/>
    <id>http://zfeiyu.com/2019/01/06/2018-read-memo/</id>
    <published>2019-01-06T08:33:00.000Z</published>
    <updated>2019-01-07T06:09:29.167Z</updated>
    
    <content type="html"><![CDATA[<h1 id="系统之美"><a href="#系统之美" class="headerlink" title="系统之美"></a>系统之美</h1><blockquote><p>对于一个系统来说，整体大于部分之和。任何一个系统都包括三种构成要件：要素、连接、功能或目标。它具有适应性、动态性、目的性，并可以自组织、自我保护与演进。</p><p>存量是对系统中变化量的一种历史记录。存量会随着时间的变化而不断改变，使其发生变化的就是“流量”。所谓流量，是一段时间内改变的状况。</p><p>现代工业文明正慢慢侵蚀着人们的美德表现。</p></blockquote><h2 id="常见的系统陷阱与对策"><a href="#常见的系统陷阱与对策" class="headerlink" title="常见的系统陷阱与对策"></a>常见的系统陷阱与对策</h2><h3 id="政策阻力（Policy-Resistance）"><a href="#政策阻力（Policy-Resistance）" class="headerlink" title="政策阻力（Policy Resistance）"></a>政策阻力（Policy Resistance）</h3><h4 id="陷阱"><a href="#陷阱" class="headerlink" title="陷阱"></a>陷阱</h4><p>当系统中多个参与者有不同的目标，从而将系统存量往不同方向拉时，结果就是政策阻力。</p><p>任何新政策，尤其是当它恰好管用时，都会让存量远离其他参与者的目标，因而会产生额外的抵抗，其结果是大家都不愿意看到的，但每个人都要付出相当的努力去维持它。 </p><h4 id="对策"><a href="#对策" class="headerlink" title="对策"></a>对策</h4><p>放弃压制或实现单方面的目标。化阻力为动力，将所有参与者召集起来，用先前用于维持政策刚性的精力，去寻找如何实现所有人的目标，实现“皆大欢喜”，或者重新定义一个更大的、更重要的总体目标，大家愿意齐心协力去实现它。 </p><h3 id="公地悲剧（The-Tragedy-of-the-Commons）"><a href="#公地悲剧（The-Tragedy-of-the-Commons）" class="headerlink" title="公地悲剧（The Tragedy of the Commons）"></a>公地悲剧（The Tragedy of the Commons）</h3><h4 id="陷阱-1"><a href="#陷阱-1" class="headerlink" title="陷阱"></a>陷阱</h4><p>当存在一种公共资源时，每个使用者都可以从这种资源的使用中直接获利，用得越多，收益也越大，但是过度使用的成本却需由所有人来分担。因此，资源的整体状况和单个参与者对资源的使用之间的反馈关联非常弱，结果导致资源的过度使用及耗竭，最终每个人都没有资源可用。 </p><h4 id="对策-1"><a href="#对策-1" class="headerlink" title="对策"></a>对策</h4><p>对使用者进行教育和劝诫，让他们理解滥用资源的后果。同时，也可以恢复或增强资源的状况及其使用之间的弱反馈连接，有两类做法：</p><ul><li>一是将资源私有化，让每个使用者都可以直接感受到对自己那一份资源滥用的后果；</li><li>二是对于那些无法分割和私有化的资源，则要对所有使用者进行监管。 </li></ul><h3 id="目标侵蚀（Drift-to-Low-Performance）"><a href="#目标侵蚀（Drift-to-Low-Performance）" class="headerlink" title="目标侵蚀（Drift to Low Performance）"></a>目标侵蚀（Drift to Low Performance）</h3><h4 id="陷阱-2"><a href="#陷阱-2" class="headerlink" title="陷阱"></a>陷阱</h4><p>绩效标准受过去绩效的影响，尤其是当人们对过去的绩效评价偏负面，也就是过于关注坏消息时，将启动一个恶性循环，使得目标和系统的绩效水平不断下滑。 </p><h4 id="对策-2"><a href="#对策-2" class="headerlink" title="对策"></a>对策</h4><p>保持一个绝对的绩效标准。将绩效标准设定为过去的最佳水平，从而不断提高自己的目标，并以此激励自己，追求更高的绩效。</p><h3 id="竞争升级（Escalation）"><a href="#竞争升级（Escalation）" class="headerlink" title="竞争升级（Escalation）"></a>竞争升级（Escalation）</h3><h4 id="陷阱-3"><a href="#陷阱-3" class="headerlink" title="陷阱"></a>陷阱</h4><p>当系统中一个存量的状态是取决于另外一个存量的状态，并试图超过对方时，就构成了一个增强回路，使得系统陷入对抗升级的陷阱，表现为军备竞赛、财富攀比、口水仗、声音或暴力升级等现象。</p><p>由于对抗升级以指数形式变化，它能以非常令人惊异的速度导致竞争激化。如果什么也不做，这一循环也不可能一直发展下去，最后的结果将是一方被击倒或两败俱伤。 </p><h4 id="对策-3"><a href="#对策-3" class="headerlink" title="对策"></a>对策</h4><p>应对这一陷阱的最佳方式是避免陷入这一结构之中。</p><p>如果已经深陷其中，一方可以选择单方面让步，从而切断增强回路；或者双方进行协商，引入一些调节回路，对竞争进行一些限制。 </p><h3 id="富者愈富（Success-to-the-Successful）"><a href="#富者愈富（Success-to-the-Successful）" class="headerlink" title="富者愈富（Success to the Successful）"></a>富者愈富（Success to the Successful）</h3><h4 id="陷阱-4"><a href="#陷阱-4" class="headerlink" title="陷阱"></a>陷阱</h4><p>如果在系统中，竞争中的赢家会持续地强化其进一步获胜的手段，这就形成了一个增强回路。如果这一回路不受限制地运转下去，赢家最终会通吃，输家则被消灭。 </p><h4 id="对策-4"><a href="#对策-4" class="headerlink" title="对策"></a>对策</h4><ul><li>多元化，即允许在竞争中落败的一方可以退出，开启另外一场新的博弈；</li><li>反垄断法，即严格限制赢家所占有的最大份额比例；</li><li>修正竞赛规则，限制最强的一些参与者的优势，或对处于劣势的参与者给予一些特别关照，增强他们的竞争力（例如施舍馈赠、税赋调节、转移支付等）；</li><li>对获胜者给予多样化的奖励，避免他们在下一轮竞争中争夺同一有限的资源，或产生偏差。 </li></ul><h3 id="转嫁负担（Shifting-the-Burden-to-the-Intervenor）"><a href="#转嫁负担（Shifting-the-Burden-to-the-Intervenor）" class="headerlink" title="转嫁负担（Shifting the Burden to the Intervenor）"></a>转嫁负担（Shifting the Burden to the Intervenor）</h3><h4 id="陷阱-5"><a href="#陷阱-5" class="headerlink" title="陷阱"></a>陷阱</h4><p>当面对一个系统性问题时，如果采用的解决方案根本无助于解决潜在的根本问题，只是缓解（或掩饰）了问题的症状时，就会产生转嫁负担、依赖性和上瘾的状况。不管是麻痹个人感官的物质，还是把潜在麻烦隐藏起来的政策，人们选择的干预行动都不能解决真正的问题。 </p><p>如果选择并实施的干预措施，导致系统原本的自我调适能力萎缩或受到侵蚀，就会引发一个破坏性的增强回路。</p><p>系统自我调适能力越差，就需要越多的干预措施；而这会使得系统的自我调适变得更差，不得不更多地依赖外部干预者。 </p><h4 id="对策-5"><a href="#对策-5" class="headerlink" title="对策"></a>对策</h4><p>应对这一陷阱最好的办法是提前预防，防止跌入陷阱。</p><p>一定要意识到，只缓解症状或掩饰信号的政策或做法，都不能真正地解决问题。因此，要将关注点从短期的救济转移到长期的结构性重建上来。 </p><h3 id="规避规则（Rule-Beating）"><a href="#规避规则（Rule-Beating）" class="headerlink" title="规避规则（Rule Beating）"></a>规避规则（Rule Beating）</h3><h4 id="陷阱-6"><a href="#陷阱-6" class="headerlink" title="陷阱"></a>陷阱</h4><p>“上有政策，下有对策”。任何规则都可能会有“漏洞”或“例外情况”，因而也会存在规避规则的行为。也就是说，虽然一些行为在表面上遵守或未违背规则，但实质上却不符合规则的本意，甚至扭曲了系统。 </p><h4 id="对策-6"><a href="#对策-6" class="headerlink" title="对策"></a>对策</h4><p>设计或重新设计规则，从规避规则的行为中获得创造性反馈，使其发挥积极的作用，实现规则的本来目的。 </p><h3 id="目标错位（Seeking-the-Wrong-Goal）"><a href="#目标错位（Seeking-the-Wrong-Goal）" class="headerlink" title="目标错位（Seeking the Wrong Goal）"></a>目标错位（Seeking the Wrong Goal）</h3><h4 id="陷阱-7"><a href="#陷阱-7" class="headerlink" title="陷阱"></a>陷阱</h4><p>系统行为对于反馈回路的目标特别敏感。如果目标定义不准确或不完整，即使系统忠实地执行了所有运作规则，其产出的结果却不一定是人们真正想要的。 </p><h4 id="对策-7"><a href="#对策-7" class="headerlink" title="对策"></a>对策</h4><p>恰当地设定目标及指标，以反映系统的真正福利。一定要特别小心，不要将努力与结果混淆，否则系统将只产出特定的努力，而不是你期望的结果。</p><h2 id="系统世界的生存法则"><a href="#系统世界的生存法则" class="headerlink" title="系统世界的生存法则"></a>系统世界的生存法则</h2><p>1.跟上系统的节拍。<br>2.把你的心智模式展现在阳光下。<br>3.相信、尊重并分享信息。<br>4.谨慎地使用语言，并用系统的概念去丰富语言。<br>5.关注重要的，而不只是容易衡量的。<br>6.为反馈系统制定带有反馈功能的政策。<br>7.追求整体利益。<br>8.聆听系统的智慧。<br>9.界定系统的职责。<br>10.保持谦逊，做一名学习者。<br>11.庆祝复杂性。<br>12.扩展时间的范围。<br>13.打破各种清规戒律。<br>14.扩大关切的范围。<br>15.不要降低“善”的标准。</p><h1 id="AI·未来"><a href="#AI·未来" class="headerlink" title="AI·未来"></a>AI·未来</h1><blockquote><p>目前，人工智能革命分为四波浪潮：互联网智能化（Internet AI）、商业智能化（business AI）、实体世界智能化（perception AI）、自主智能化（autonomous AI）。每一波浪潮都将以不同方式利用人工智能的力量，颠覆不同产业，让人工智能更深层次地融入我们的生活。</p></blockquote><h1 id="今日简史：人类命运大议题"><a href="#今日简史：人类命运大议题" class="headerlink" title="今日简史：人类命运大议题"></a>今日简史：人类命运大议题</h1><blockquote><p>人类思考用的是故事，而不是事实、数据或方程式，而且故事越简单越好。</p><p>宇宙有三个基本现实：一切事物都会不断改变（诸行无常），一切事物都没有永恒的本质（诸法无我），没有什么能永远令人满意（诸漏皆苦）。</p><p>人类之所以能征服世界，是靠创造和相信虚构故事的能力。但也因此，人类特别拙于判断虚构和现实的差异。毕竟我们要无视两者的差异，才能得以生存，过于计较，就会受苦。因为，世界上最真实的东西就是痛苦。</p></blockquote><h1 id="创造的本源"><a href="#创造的本源" class="headerlink" title="创造的本源"></a>创造的本源</h1><blockquote><p>“艺术能真实体现出我们现在的样子和过去的样子；体现我们现在的生活方式和过去的生活方式；能生动地体现出我们作为一个个活生生的人，被各种动力和情感所左右。但是艺术并不能真实地反映出人类的集体实体或社会学范式。”</p></blockquote><h1 id="娱乐至死"><a href="#娱乐至死" class="headerlink" title="娱乐至死"></a>娱乐至死</h1><blockquote><p>钟表是怎样使人变成遵守时间的人、节约时间的人和现在被拘役于时间的人。在这个过程中，我们学会了漠视日出日落和季节更替，因为在一个由分分秒秒组成的世界里，大自然的权威已经被取代了。</p><p>“到处是水却没有一滴水可以喝”</p></blockquote><h1 id="生命3-0"><a href="#生命3-0" class="headerlink" title="生命3.0"></a>生命3.0</h1><blockquote><p>我们可以根据生命设计自身的能力，把生命的发展分成三个阶段： </p><ul><li>生命1.0（生物阶段）：靠进化获得硬件和软件； </li><li>生命2.0（文化阶段）：靠进化获得硬件，但大部分软件是由自己设计的； </li><li>生命3.0（科技阶段）：自己设计硬件和软件。</li></ul><p>我读过也听说过很多思想家的伦理观点，这些观点都十分迷人。我认为，大多数人的观点都可以归入以下4个原则： </p><ul><li>功利主义：积极的意识体验应当被最大化，而痛苦应当被最小化； </li><li>多样化：多样化的积极体验比重复单一的积极体验更好，即使后者被认为是所有可能性中最积极的体验； </li><li>自主性：有意识的实体／社会应当拥有追寻自己目标的自由，除非与某些重要原则相违背； </li><li>遗产：符合当今大多数人认为幸福的情景，不符合当今几乎所有人认为糟糕的情景。</li></ul><p>第一定律：一个有意识的实体有思考、学习、交流、拥有财产、不被伤害或不被毁灭的自由； ◦　第二定律：在不违反第一定律的情况下，一个有意识的实体有权做任何事。</p></blockquote><h1 id="进击的智人"><a href="#进击的智人" class="headerlink" title="进击的智人"></a>进击的智人</h1><blockquote><p>匮乏的环境下，人类祖先通常只能以粗糙低质的食物为生，于是他们不得不依赖强壮的咬合肌以保证进食，后来基因的突变使得他们的咬合肌减弱了，一部分人不得不使用工具对坚硬的食物进行预处理以缓冲匮乏的压力，这同时使得他们的脑容量增大。头部尺寸的增大使得母亲的生育变得困难，同时采集食物的效率降低，形成了新的匮乏，为了缓冲新的匮乏，更长寿的外祖母被筛选了出来，帮助自己的女儿养育孩子，于是筛选出了更长寿、更晚熟的基因，使得人类的生长进度被拉长，形成了更大的体格。</p></blockquote>]]></content>
    
    <summary type="html">
    
      2018看了上百本书，整理了下kindle的笔记，沉淀的过少
    
    </summary>
    
      <category term="读书" scheme="http://zfeiyu.com/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="读书" scheme="http://zfeiyu.com/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>技术采用模型</title>
    <link href="http://zfeiyu.com/2019/01/03/technology-acceptance-model/"/>
    <id>http://zfeiyu.com/2019/01/03/technology-acceptance-model/</id>
    <published>2019-01-03T07:25:00.000Z</published>
    <updated>2019-01-15T09:32:30.849Z</updated>
    
    <content type="html"><![CDATA[<h1 id="技术采用生命周期"><a href="#技术采用生命周期" class="headerlink" title="技术采用生命周期"></a>技术采用生命周期</h1><p><img src="/res/img/technologyAcceptanceModel/model1.png" alt=""></p><p>按照创新寿命周期模型，各个阶段存在不同的用户群体：创新者、早期采用者、早期大众、后期大众、落后者，不同的用户群体有不同的心理特征，产品需要快速迭代去满足不同的需求。</p><h1 id="跨越死亡之井"><a href="#跨越死亡之井" class="headerlink" title="跨越死亡之井"></a>跨越死亡之井</h1><p><img src="/res/img/technologyAcceptanceModel/model.gif" alt=""></p><blockquote><p>早期采用者向实用主义为主的早期大众过度是最难的。<br>2C&amp;2B。 2B：饥饿感更强的公司进行合作，他们更有突破感。2C：把创新技术直接卖给C端用户。</p></blockquote><p>在早期采用者和早期大众间（也就是第2和第3个阶段间）存在一个被称为死亡之井的地带。一个技术创新产品在获得早期采用者之后，能否得到早期大众的认可是具有一定难度的。</p><h1 id="用户群体的异同点。"><a href="#用户群体的异同点。" class="headerlink" title="用户群体的异同点。"></a>用户群体的异同点。</h1><h2 id="创新者"><a href="#创新者" class="headerlink" title="创新者"></a>创新者</h2><p>群体特征：</p><ol><li>他们往往是新技术应用的创造者</li><li>他们是新技术创新的狂热信徒</li><li>他们对技术创新有着非常敏感的触觉</li><li>主动的获取信息，并积极的参与进来</li><li>他们通常都有着旺盛的好奇心和关联性很强的经验和知识</li></ol><blockquote><p>这是一群在创新初期具有巨大价值的专业人事，找到他们并聆听意见，可以让产品在初期拥有更多的进化选择，从而让创新的深度和强度得以增加。</p></blockquote><h2 id="早期采用者"><a href="#早期采用者" class="headerlink" title="早期采用者"></a>早期采用者</h2><p>群体特征：</p><ol><li>他们有自己的专业知识和经验判断，通常是意见领袖</li><li>他们不是创新产品的真正使用者，而是创新产品的验证者和把关人</li><li>他们是实用主义者，以一个判官的身份去尽可能发掘其是否真的具有商业价值</li><li>主动的获取信息，并积极的参与进来</li></ol><blockquote><p>可以把这一类人看做是产品在消费大众中的自愿测试者。通过一定的宣传渠道，将信息传递给这个人群后，他们就会自然而然的产生对产品试用的需求，哪怕需要支付费用。</p></blockquote><h2 id="早期大众"><a href="#早期大众" class="headerlink" title="早期大众"></a>早期大众</h2><p>这一阶段的用户，才称为真正的产品使用者。只有这一类人群加入，才能获得真正想获得的利润和生命力。</p><p>群体特征：</p><ol><li>他们不认为应该去购买不成熟的或者自己认为不确定是否实用的产</li><li>他们并不想去测试产品</li><li>有别于第二阶段的用户，他们没有对新事物探索和验证的需求</li><li>务实的群体，只考察产品是否满足需求</li><li>他们通常从第二阶段人群验证的结果里获取信息，来判断自己是否真的应该发生购买行为</li><li>他们对过早的产品周期根本就不感兴趣</li></ol><blockquote><p>这一阶段的用户往往是实用性用户群体，只要你的技术或者产品能够抓住并解决他们的痛点，他们就会参与进来。</p></blockquote><h2 id="后期大众"><a href="#后期大众" class="headerlink" title="后期大众"></a>后期大众</h2><p>群体特征：</p><ol><li>这类用户群体本质上和3阶段用户的需求基本一致</li><li>他们的思维方式更加的保守，是市场中的保守者</li><li>他们对新产品更替可能带来的机会风险更加敏感</li><li>他们需要更加充足的理由来去促使其产生对技术的采用，这种理由仅仅来自意见领袖的主张是不够的</li><li>他们还会考虑技术在中长期应用过程中是否会出现不良反应</li><li>他们对价格敏感，也很挑剔,不希望为新的技术支付更高的购买和使用成本</li></ol><blockquote><p>这类人群很可能是在技术采用达到一定规模，而成本下降后加入进来的。或者陈旧技术出现不可逆转的被淘汰的趋势的时候，他们认为新技术的采用更加保险后，才加入进来的。</p></blockquote><h2 id="落后者"><a href="#落后者" class="headerlink" title="落后者"></a>落后者</h2><p>群体特征：</p><ol><li>这类群体是技术的落伍者，充满怀疑和敌视的态度</li><li>他们通常对新技术并不感兴趣，并且对改变现有的方式具有负面的心情</li><li>他们可能是懒人，或者是一群愚蠢的自作聪明的家伙</li><li>他们乐于站在一边，看新技术如何死去,让他们开心</li></ol><blockquote><p>他们不是目标用户群。他们会在你的技术真正走进千家万户，成为普通技术的时候，才加入进来。而这个时候，你会发现，这一技术的生命周期已经接近完结了。</p></blockquote>]]></content>
    
    <summary type="html">
    
      按照创新寿命周期模型，各个阶段存在不同的用户群体：创新者、早期采用者、早期大众、后期大众、落后者，不同的用户群体有不同的心理特征，产品需要快速迭代去满足不同的需求。
    
    </summary>
    
      <category term="思维" scheme="http://zfeiyu.com/categories/%E6%80%9D%E7%BB%B4/"/>
    
    
      <category term="思维" scheme="http://zfeiyu.com/tags/%E6%80%9D%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>技术创新过程中的十大矛盾</title>
    <link href="http://zfeiyu.com/2019/01/02/ten-contradictions-in-the-process-of-innovation/"/>
    <id>http://zfeiyu.com/2019/01/02/ten-contradictions-in-the-process-of-innovation/</id>
    <published>2019-01-02T14:55:00.000Z</published>
    <updated>2019-01-03T07:23:47.756Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>有些人因为相信而看见，<br>有些人因为看见才相信。<br>人类社会的进步，<br>永远都需要前者。</p></blockquote><h2 id="科学-VS-艺术"><a href="#科学-VS-艺术" class="headerlink" title="科学 VS 艺术"></a>科学 VS 艺术</h2><blockquote><p>用户需求的不仅是功能，而是情感.</p></blockquote><h2 id="经验-VS-创新"><a href="#经验-VS-创新" class="headerlink" title="经验 VS 创新"></a>经验 VS 创新</h2><blockquote><p>经验可能是增值的利器，也有可能是创新的绊脚石</p></blockquote><h2 id="自上而下-VS-自下而上"><a href="#自上而下-VS-自下而上" class="headerlink" title="自上而下 VS 自下而上"></a>自上而下 VS 自下而上</h2><blockquote><p>技术创新-&gt;市场需求 VS  市场需求 -&gt; 技术创新</p><p>领导-&gt;员工 VS 员工-&gt;领导</p></blockquote><p>打破乘法效应，创新才不会被埋没。</p><h2 id="坚持-VS-变化"><a href="#坚持-VS-变化" class="headerlink" title="坚持 VS 变化"></a>坚持 VS 变化</h2><blockquote><p>在多变的轨迹当中，记住原点。<br>在悲喜的过程中，勿忘初心。</p></blockquote><h2 id="艰难-VS-舒服"><a href="#艰难-VS-舒服" class="headerlink" title="艰难 VS 舒服"></a>艰难 VS 舒服</h2><blockquote><p>做正确的选择，而不是做容易的选择。</p></blockquote><h2 id="逻辑-VS-脾气"><a href="#逻辑-VS-脾气" class="headerlink" title="逻辑 VS 脾气"></a>逻辑 VS 脾气</h2><blockquote><p>逻辑大于脾气是所有成功企业和个人的共同特征。不要让别人的节奏影响了自己的步伐。</p></blockquote><h2 id="独立-VS-开放"><a href="#独立-VS-开放" class="headerlink" title="独立 VS 开放"></a>独立 VS 开放</h2><blockquote><p>开放的心态，独立的判断。</p></blockquote><h2 id="长期-VS-短期"><a href="#长期-VS-短期" class="headerlink" title="长期 VS 短期"></a>长期 VS 短期</h2><blockquote><p>既要埋头干活，也要抬头看路。<br>既要仰望星空，也要脚踏实地。</p></blockquote><h2 id="结果-VS-目标"><a href="#结果-VS-目标" class="headerlink" title="结果 VS 目标"></a>结果 VS 目标</h2><blockquote><p>Stay focused on what really matters.</p></blockquote><h2 id="噪音-VS-决心"><a href="#噪音-VS-决心" class="headerlink" title="噪音 VS 决心"></a>噪音 VS 决心</h2><blockquote><p>永远都会有人怀疑新鲜的事物，重要的是自己清楚什么是正确的方向并且持之以恒。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;有些人因为相信而看见，&lt;br&gt;有些人因为看见才相信。&lt;br&gt;人类社会的进步，&lt;br&gt;永远都需要前者。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;科学-VS-艺术&quot;&gt;&lt;a href=&quot;#科学-VS-艺术&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="创新" scheme="http://zfeiyu.com/categories/%E5%88%9B%E6%96%B0/"/>
    
    
      <category term="鸡汤" scheme="http://zfeiyu.com/tags/%E9%B8%A1%E6%B1%A4/"/>
    
  </entry>
  
  <entry>
    <title>智能化变革下的商业模式思考模型</title>
    <link href="http://zfeiyu.com/2018/12/30/new_economic/"/>
    <id>http://zfeiyu.com/2018/12/30/new_economic/</id>
    <published>2018-12-30T08:38:00.000Z</published>
    <updated>2019-01-03T06:48:50.683Z</updated>
    
    <content type="html"><![CDATA[<h1 id="商业模式思维模型"><a href="#商业模式思维模型" class="headerlink" title="商业模式思维模型"></a>商业模式思维模型</h1><p><img src="/res/img/neweconomic/model.png" alt=""></p><h1 id="新经济公司如何估值？"><a href="#新经济公司如何估值？" class="headerlink" title="新经济公司如何估值？"></a>新经济公司如何估值？</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">产品价值：产品+产能</div><div class="line">客户价值：活跃客户+买家+客单价</div><div class="line">平台价值：参考商业模式思维模型</div></pre></td></tr></table></figure><h1 id="新零售模式下的收入构成？"><a href="#新零售模式下的收入构成？" class="headerlink" title="新零售模式下的收入构成？"></a>新零售模式下的收入构成？</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">收入构成 = 流量 * 内容 * 营销方案</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;商业模式思维模型&quot;&gt;&lt;a href=&quot;#商业模式思维模型&quot; class=&quot;headerlink&quot; title=&quot;商业模式思维模型&quot;&gt;&lt;/a&gt;商业模式思维模型&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/res/img/neweconomic/model.png&quot; alt=
      
    
    </summary>
    
      <category term="商业模式" scheme="http://zfeiyu.com/categories/%E5%95%86%E4%B8%9A%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="新零售" scheme="http://zfeiyu.com/tags/%E6%96%B0%E9%9B%B6%E5%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>Scratch编程卡片</title>
    <link href="http://zfeiyu.com/2018/12/29/scratch-cards/"/>
    <id>http://zfeiyu.com/2018/12/29/scratch-cards/</id>
    <published>2018-12-29T08:38:00.000Z</published>
    <updated>2019-01-15T08:22:11.368Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>开始教女儿编程，主要参考官方以及DK的教程，先记录，后整理。</p></blockquote><h1 id="改变颜色"><a href="#改变颜色" class="headerlink" title="改变颜色"></a>改变颜色</h1><h2 id="卡片"><a href="#卡片" class="headerlink" title="卡片"></a>卡片</h2><p><img src="/res/img/scratch/level1/change_color/card.jpg" alt=""></p><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>通过学习，熟悉“按键”、“特效”。</p><ol><li>掌握事件<code>按键</code>监听</li><li>掌握外观<code>特效</code>的概念</li></ol><h2 id="分解"><a href="#分解" class="headerlink" title="分解"></a>分解</h2><ul><li>事件：<code>当按下*键</code></li><li>外观：<code>将*特效增加*</code></li></ul><h2 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h2><ol><li><p>导入角色“蝴蝶”</p><ul><li><img src="/res/img/scratch/level1/change_color/s1.png" alt=""></li><li><img src="/res/img/scratch/level1/change_color/s2.png" alt=""></li></ul></li><li><p>编写代码</p></li></ol><p><img src="/res/img/scratch/level1/change_color/code.png" alt=""></p><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><ol><li>尝试其他的特效，如<code>马赛克</code>，<code>旋转</code>,<code>像素化</code>等.<blockquote><p><img src="/res/img/scratch/level1/change_color/exta.png" alt=""></p></blockquote></li><li>生活中的事物是如何在计算机表现出来的？<blockquote><p>数字化。</p></blockquote></li></ol><h1 id="动起来"><a href="#动起来" class="headerlink" title="动起来"></a>动起来</h1><h2 id="卡片-1"><a href="#卡片-1" class="headerlink" title="卡片"></a>卡片</h2><p><img src="/res/img/scratch/level1/move_to_a_beat/card.png" alt=""></p><h2 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h2><p>通过学习，熟悉“前进”、“倒退”、“声音”、“造型切换”。</p><ol><li>掌握运动“移动”方法</li><li>掌握造型切换</li><li>熟悉控制语句</li></ol><h2 id="分解-1"><a href="#分解-1" class="headerlink" title="分解"></a>分解</h2><ul><li>运动：<code>移动*步</code></li><li>外观：<code>下一个造型</code></li><li>控制：<code>重复执行</code></li></ul><h2 id="设计-1"><a href="#设计-1" class="headerlink" title="设计"></a>设计</h2><ol><li><p>导入角色“Cassy”</p><ul><li><img src="/res/img/scratch/level1/move_to_a_beat/s1.png" alt=""></li><li><img src="/res/img/scratch/level1/move_to_a_beat/s2.png" alt=""></li></ul></li><li><p>编写代码</p></li></ol><p><img src="/res/img/scratch/level1/move_to_a_beat/code.png" alt=""></p><h2 id="思考-1"><a href="#思考-1" class="headerlink" title="思考"></a>思考</h2><ol><li>如何让<code>Cassy</code>更有律动？<blockquote><p>尝试改变“造型”。</p></blockquote></li></ol><h1 id="按键移动"><a href="#按键移动" class="headerlink" title="按键移动"></a>按键移动</h1><h2 id="卡片-2"><a href="#卡片-2" class="headerlink" title="卡片"></a>卡片</h2><p><img src="/res/img/scratch/level1/key_moves/card.png" alt=""></p><h2 id="目的-2"><a href="#目的-2" class="headerlink" title="目的"></a>目的</h2><p>通过学习，熟悉“面向”、“移动”和“造型切换”，懂得如何按自己的想法控制角色。</p><ol><li>掌握事件“按键”监听</li><li>掌握运动“面向”方法</li><li>掌握造型切换</li></ol><h2 id="分解-2"><a href="#分解-2" class="headerlink" title="分解"></a>分解</h2><ul><li>运动：<code>面向*方向</code>、<code>移动*步</code></li><li>事件：<code>当按下*键</code></li><li>外观：<code>下一个造型</code></li></ul><h2 id="设计-2"><a href="#设计-2" class="headerlink" title="设计"></a>设计</h2><ol><li><p>导入“老鼠”角色</p><ul><li><img src="/res/img/scratch/level1/key_moves/s1.png" alt=""></li><li><img src="/res/img/scratch/level1/key_moves/s2.png" alt=""></li></ul></li><li><p>编写代码</p></li></ol><p><img src="/res/img/scratch/level1/key_moves/code.png" alt=""></p><h2 id="思考-2"><a href="#思考-2" class="headerlink" title="思考"></a>思考</h2><p>如何让老鼠“动”起来？</p><blockquote><p>帧动画的实现原理是不断切换视觉内图片内容,利用视觉滞留生理来实现连续播放的动画效果。<br>我们通过切换老鼠的造型（<code>下一个造型</code>）来实现这一功能。</p></blockquote><h1 id="猫抓老鼠"><a href="#猫抓老鼠" class="headerlink" title="猫抓老鼠"></a>猫抓老鼠</h1><h2 id="卡片-3"><a href="#卡片-3" class="headerlink" title="卡片"></a>卡片</h2><p><img src="/res/img/scratch/level1/follow_the_mouse/card.png" alt=""></p><h2 id="目的-3"><a href="#目的-3" class="headerlink" title="目的"></a>目的</h2><p>通过学习，熟悉“面向<code>鼠标指针</code>“,”碰撞侦测“，”运算“等基础操作。</p><ol><li>掌握运动：面向<code>鼠标指针</code>。</li><li>掌握侦测：<code>碰到*</code></li><li>掌握控制：<code>如果*那么</code></li><li>了解”运算“的随机值。</li></ol><h2 id="设计-3"><a href="#设计-3" class="headerlink" title="设计"></a>设计</h2><h3 id="导入角色“猫”和老鼠"><a href="#导入角色“猫”和老鼠" class="headerlink" title="导入角色“猫”和老鼠"></a>导入角色“猫”和老鼠</h3><ul><li><img src="/res/img/scratch/level1/follow_the_mouse/s2.png" alt=""></li><li><img src="/res/img/scratch/level1/follow_the_mouse/s3.png" alt=""></li></ul><h3 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h3><h4 id="猫"><a href="#猫" class="headerlink" title="猫"></a>猫</h4><p><img src="/res/img/scratch/level1/follow_the_mouse/code1.png" alt=""></p><h4 id="老鼠"><a href="#老鼠" class="headerlink" title="老鼠"></a>老鼠</h4><p><img src="/res/img/scratch/level1/follow_the_mouse/code2.png" alt=""></p><h2 id="思考-3"><a href="#思考-3" class="headerlink" title="思考"></a>思考</h2><ol><li>如何在猫碰到老鼠的时候，老鼠说一句话?比如：”救命啊！！“。</li><li>能否做到让猫自动抓老鼠？</li></ol><h1 id="变声鼓"><a href="#变声鼓" class="headerlink" title="变声鼓"></a>变声鼓</h1><h2 id="卡片-4"><a href="#卡片-4" class="headerlink" title="卡片"></a>卡片</h2><p><img src="/res/img/scratch/level1/surprise_button/card.png" alt=""></p><h2 id="目的-4"><a href="#目的-4" class="headerlink" title="目的"></a>目的</h2><p>通过学习，熟悉“面向<code>鼠标指针</code>“,”碰撞侦测“，”运算“等基础操作。</p><ol><li>掌握运动：面向<code>鼠标指针</code>。</li><li>掌握侦测：<code>碰到*</code></li><li>掌握控制：<code>如果*那么</code></li><li>了解”运算“的随机值。</li></ol><h2 id="设计-4"><a href="#设计-4" class="headerlink" title="设计"></a>设计</h2><h3 id="导入角色“鼓”"><a href="#导入角色“鼓”" class="headerlink" title="导入角色“鼓”"></a>导入角色“鼓”</h3><ul><li><img src="/res/img/scratch/level1/surprise_button/s1.png" alt=""></li><li><img src="/res/img/scratch/level1/surprise_button/s2.png" alt=""></li></ul><h3 id="编写代码-1"><a href="#编写代码-1" class="headerlink" title="编写代码"></a>编写代码</h3><p><img src="/res/img/scratch/level1/surprise_button/code.png" alt=""></p><h2 id="思考-4"><a href="#思考-4" class="headerlink" title="思考"></a>思考</h2><ol><li>如何随机改变节拍？</li></ol><h1 id="大鱼吃小鱼"><a href="#大鱼吃小鱼" class="headerlink" title="大鱼吃小鱼"></a>大鱼吃小鱼</h1><h2 id="卡片-5"><a href="#卡片-5" class="headerlink" title="卡片"></a>卡片</h2><p><img src="/res/img/scratch/level1/keep_score/card.png" alt=""></p><h2 id="目的-5"><a href="#目的-5" class="headerlink" title="目的"></a>目的</h2><ol><li>掌握变量。</li><li>综合运用，为开发”游戏”做好准备。</li></ol><h2 id="设计-5"><a href="#设计-5" class="headerlink" title="设计"></a>设计</h2><h3 id="导入角色“鱼”"><a href="#导入角色“鱼”" class="headerlink" title="导入角色“鱼”"></a>导入角色“鱼”</h3><ul><li><img src="/res/img/scratch/level1/keep_score/s.png" alt=""></li></ul><h3 id="增加”分数”"><a href="#增加”分数”" class="headerlink" title="增加”分数”"></a>增加”分数”</h3><ul><li><img src="/res/img/scratch/level1/keep_score/s2.png" alt=""></li></ul><h3 id="编写代码-2"><a href="#编写代码-2" class="headerlink" title="编写代码"></a>编写代码</h3><p><img src="/res/img/scratch/level1/keep_score/code.png" alt=""></p><h2 id="思考-5"><a href="#思考-5" class="headerlink" title="思考"></a>思考</h2><ol><li>如何控制鲨鱼，变成一个吃鱼游戏？</li></ol>]]></content>
    
    <summary type="html">
    
      开始教女儿编程，记录一下。
    
    </summary>
    
      <category term="少儿编程" scheme="http://zfeiyu.com/categories/%E5%B0%91%E5%84%BF%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="少儿编程" scheme="http://zfeiyu.com/tags/%E5%B0%91%E5%84%BF%E7%BC%96%E7%A8%8B/"/>
    
      <category term="scratch" scheme="http://zfeiyu.com/tags/scratch/"/>
    
  </entry>
  
  <entry>
    <title>中美贸易战感想</title>
    <link href="http://zfeiyu.com/2018/08/24/trade-war%20/"/>
    <id>http://zfeiyu.com/2018/08/24/trade-war /</id>
    <published>2018-08-24T05:55:00.000Z</published>
    <updated>2018-08-24T05:44:51.875Z</updated>
    
    <content type="html"><![CDATA[<p>18年多灾多难，中美贸易战经过几个回合，美国牛市依旧，A股一地鸡毛。国内的媒体对双方和解还抱有很大的希望，一致唱多，我觉得这次战斗无法避免，除非中国做到真正的全面开放。</p><p>中美会有冲突原因有很多，中美的意识形态本来就不一样，价值观和世界观都不一致的人很难成为朋友。美国又是由传教士建国，有传教士的基因，喜欢散播自己的理念，理念和他近就是盟友，远就是敌人。</p><p>中美虽然意识不和，但之前的40年存在政治基础，这个基础来自于邓小平时代。他交了一份投名状：打越南，背后捅苏联，搞市场经济。这些，都投了美国人的喜好，中美才开始正在意义上的建交。苏联解体后，怕美国盯上中国，邓的指示是”韬光养晦”，所以可以看到中国在国际社会的不怎么发声。</p><p>在美国的支持下，中国加入WTO，中国凭着人口优势，在没有任何经济基础的情况下和各个富有大国展开了商务来往，凭着中国人的聪明才智，中国经济开始腾飞。但中国的改革开放其实就是加入WTO而已，是对内开放，现在一晃40年过去了，中国的市场经济还是一团糟，国际资本很难进入，而自己的企业还可以靠政府输血不断的去收购国外的企业。</p><p>中美贸易战在第一回合的谈判中，美国就直接提出了要求中国开放金融服务业市场准入这样触及底线的要求，并提出在关税、市场准入、知识产权等问题上的全面对等，还提出了关于互联网全面开放的要求。</p><p>所以已经谈崩了，在几次交锋当中我们已经节节败退，嘴上不老实，身体很诚实（降低汽车进口税、放开保险准入、取消中资银行外资持股比例限制…）。</p><p>现实的来说，如果没有美国高科技和知识产权的帮助，中国的产业升级和2025规划是很难实现的，中国离不开美国。</p><p>那么，中国的筹码是什么呢？</p><p>近代中国除了人多、收收垃圾、做做衣服和毛绒玩具，对世界没有太多的贡献，中国的这种低端出口都有其他的替代品。我们最重要的核心筹码其实是我们自己：中国将是未来全球最大的消费升级市场。</p><p>然而，最令人痛心的是，这个消费升级的市场却面临着一个刻不容缓的难题：房地产。</p><p>当给房子赋予了金融属性后，房地产开始绑架中国的经济，开始绑架中国的内需，开始绑架创新，开始绑架未来。政府借着房价问题去了自己的杠杆，却把杠杆加到了老百姓的头上。望着高高的房价，消费升级是痴人说梦。</p><p>房价会是压垮中国经济的最后一根稻草吗？</p><p>川普眼光毒辣而且非常有魄力和执行力，贸易战将是一个漫长的过程，我也希望借此可以看到中国的改变，因为…</p><blockquote><p>美元是他们的货币,但却是我们的难题</p></blockquote>]]></content>
    
    <summary type="html">
    
      美元是我们的货币,但却是你们的难题
    
    </summary>
    
      <category term="随笔" scheme="http://zfeiyu.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="贸易战" scheme="http://zfeiyu.com/tags/%E8%B4%B8%E6%98%93%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>python spider intruduce</title>
    <link href="http://zfeiyu.com/2018/05/22/python-spider-intruduce/"/>
    <id>http://zfeiyu.com/2018/05/22/python-spider-intruduce/</id>
    <published>2018-05-22T08:55:00.000Z</published>
    <updated>2018-05-26T08:55:57.975Z</updated>
    
    <content type="html"><![CDATA[<p>爬虫入门简单，精通也不易。虽然爬虫是Python的看家本领，网上也有大量的教程，但是大部分文章所涉及的内容都的粗浅，没有系统性的介绍，也不具备工程实战性。遂系统性的梳理一下。</p><h1 id="什么是爬虫"><a href="#什么是爬虫" class="headerlink" title="什么是爬虫"></a>什么是爬虫</h1><p><code>爬虫</code>（又被称为网页蜘蛛，网络机器人，在FOAF社区中间，更经常的称为网页追逐者），是一种按照一定的规则，自动地抓取万维网信息的程序或者脚本。另外一些不常使用的名字还有蚂蚁、自动索引、模拟程序或者蠕虫。</p><p>如果把互联网比喻成一个蜘蛛网，Spider就是一只在网上爬来爬去的蜘蛛。网络爬虫就是根据网页的地址来寻找网页的，也就是URL。Google、baidu就是最大的爬虫，搜索引擎的数据内容都是由<code>网络蜘蛛</code>爬去网络而来。</p><h2 id="什么是URL"><a href="#什么是URL" class="headerlink" title="什么是URL"></a>什么是URL</h2><p>URL:统一资源定位符(Uniform Resource Locator)，一般格式如下：</p><p><code>protocol ://hostname[port]/path/[parameters][?query]#fragment</code></p><p>URL的格式由三部分组成：</p><ol><li>protocol：协议，通讯协议。一般使用TCP/IP应用层协议，例如http/https/ftp/smb等等；</li><li>hostname[:port]：主机名[端口号];</li><li>path: 资源在主机中的具体地址，如目录和文件名等。</li></ol><p>通常，爬虫使用<code>URL</code>来获取(Request)资源信息，并对返回内容(Response)做对应的解析和处理。返回的内容比较多样，比如<code>文本</code>、<code>图片</code>、<code>excel/csv</code>、<code>json/xml</code>、<code>html</code>等。大部分人只知道<code>html</code>爬虫也就是通常意义上的<code>web spider</code>，因为它需求广泛而且解析较简单。</p><h1 id="内容解析方式"><a href="#内容解析方式" class="headerlink" title="内容解析方式"></a>内容解析方式</h1><p>爬虫获取的数据是多样的，<code>Response</code>可能是一堆字符串也有可能是一个二进制文件，这取决于文本的编码方式；<code>Response</code>可能是结构化的（数据库、json）也有可能是非结构化的（比如图片、视频），这取决于资源的组织形式。</p><p>解析非结构化的数据，一般需要耗费大量的资源，然后训练出一个相对拟合的、结构化的模型，最后用这个模型分析返回的数据，并且这一过程可能是不断迭代的，直到达到真正的价值转移。</p><p>这里我们只找<code>软柿子</code>捏。解析软柿子一般有以下几种形式：</p><h2 id="XML-JSON-CSV"><a href="#XML-JSON-CSV" class="headerlink" title="XML/JSON/CSV"></a>XML/JSON/CSV</h2><p>这类数据已经是非常结构化的数据了，并且有大量的第三方库支持，它们是烂柿子，这里就不捏了。</p><p>XML </p><ul><li><a href="https://docs.python.org/3/library/xml.html" target="_blank" rel="external">libxml</a></li><li><a href="https://pypi.org/project/lxml/" target="_blank" rel="external">lxml</a></li></ul><p>JSON:</p><ul><li><a href="https://docs.python.org/3/library/json.html" target="_blank" rel="external">json</a></li></ul><p>CSV:</p><ul><li><a href="https://docs.python.org/3/library/csv.html" target="_blank" rel="external">csv</a></li><li><a href="https://pypi.org/project/xlrd/" target="_blank" rel="external">excel</a></li></ul><h2 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h2><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><p>正则表达式是一个特殊的字符序列，它能帮助你方便的检查一个字符串是否与某种模式匹配。</p><h4 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h4><p>给定一个正则表达式和另一个字符串，我们可以达到如下的目的：</p><ol><li>给定的字符串是否符合正则表达式的过滤逻辑（称作“匹配”）：</li><li>可以通过正则表达式，从字符串中获取我们想要的特定部分。<h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4></li></ol><p>正则表达式的特点是：</p><ol><li>灵活性、逻辑性和功能性非常强；</li><li>可以迅速地用极简单的方式达到字符串的复杂控制。</li><li>对于刚接触的人来说，比较晦涩难懂。</li></ol><h4 id="python-RE-Module"><a href="#python-RE-Module" class="headerlink" title="python RE Module"></a>python RE Module</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>text = <span class="string">"He was carefully disguised but captured quickly by police."</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>re.findall(<span class="string">r"\w+ly"</span>, text)</div><div class="line">[<span class="string">'carefully'</span>, <span class="string">'quickly'</span>]</div></pre></td></tr></table></figure><ul><li>几个特殊字符要注意:<br>1、. 匹配任意除换行符“\n”外的字符；<br>2、<em>表示匹配前一个字符0次或无限次；<br>3、+或</em>后跟？表示非贪婪匹配，即尽可能少的匹配，如<em>？重复任意次，但尽可能少重复；<br>4、 .</em>? 表示匹配任意数量的重复，但是在能使整个匹配成功的前提下使用最少的重复。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">In [<span class="number">1</span>]: s = <span class="string">'aabab'</span></div><div class="line">In [<span class="number">2</span>]: <span class="keyword">import</span> re</div><div class="line">In [<span class="number">3</span>]: re.findall(<span class="string">r'a\w+b'</span>,s)</div><div class="line">Out[<span class="number">3</span>]: [<span class="string">'aabab'</span>]</div><div class="line">In [<span class="number">4</span>]: re.findall(<span class="string">r'a\w+?b'</span>,s)</div><div class="line">Out[<span class="number">4</span>]: [<span class="string">'aab'</span>]</div><div class="line">In [<span class="number">5</span>]: re.findall(<span class="string">r'a\w*?b'</span>,s)</div><div class="line">Out[<span class="number">5</span>]: [<span class="string">'aab'</span>, <span class="string">'ab'</span>]</div></pre></td></tr></table></figure><p>其他内容见<a href="https://docs.python.org/3/library/re.html" target="_blank" rel="external">官网</a><br><a href="https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386832260566c26442c671fa489ebc6fe85badda25cd000" target="_blank" rel="external">正则表达式</a></p><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><p><code>HTML</code>:超文本标记语言，标准通用标记语言下的一个应用。“超文本”就是指页面内可以包含图片、链接，甚至音乐、程序等非文字元素。网络爬虫主要处理的就是这种格式的文本。在python体系中，有很多自带的方法和丰富的第三方库来处理这类数据。</p><ul><li><a href="https://docs.python.org/3/library/markup.html" target="_blank" rel="external">htmlparser</a></li><li><a href="https://pypi.org/project/bs4/" target="_blank" rel="external">BeautifulSoup</a></li></ul><h4 id="XPath"><a href="#XPath" class="headerlink" title="XPath"></a>XPath</h4><p>什么是 XPath?</p><ul><li>XPath 使用路径表达式在 XML 文档中进行导航</li><li>XPath 包含一个标准函数库</li><li>XPath 是 XSLT 中的主要元素</li><li>XPath 是一个 W3C 标准</li></ul><p>总之<code>XPath</code> 是一门在<code>XML</code>文档中查找信息的语言，它使用路径表达式来选取<code>XML</code>文档中的节点或节点集。</p><p><code>XML</code>是<code>HTML</code>的超集合。我们也可以使用<code>xpath</code>语法来解析<code>html</code>。</p><h5 id="路径表达式"><a href="#路径表达式" class="headerlink" title="路径表达式"></a>路径表达式</h5><table><thead><tr><th>表达式</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td>nodename</td><td style="text-align:center">选取此节点的所有子节点。</td></tr><tr><td>/</td><td style="text-align:center">从根节点选取。</td></tr><tr><td>//</td><td style="text-align:center">从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。</td></tr><tr><td>.</td><td style="text-align:center">选取当前节点。</td></tr><tr><td>..</td><td style="text-align:center">选取当前节点的父节点。</td></tr><tr><td>@</td><td style="text-align:center">选取属性。</td></tr></tbody></table><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><h5 id="html-parser"><a href="#html-parser" class="headerlink" title="html.parser"></a><a href="https://docs.python.org/3/library/html.parser.html" target="_blank" rel="external">html.parser</a></h5><p>htmlParser是python自带的库，可以方便的对html结构的数据做解析。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> html.parser <span class="keyword">import</span> HTMLParser</div><div class="line"><span class="keyword">from</span> html.entities <span class="keyword">import</span> name2codepoint</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHTMLParser</span><span class="params">(HTMLParser)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_starttag</span><span class="params">(self, tag, attrs)</span>:</span></div><div class="line">        print(<span class="string">"Start tag:"</span>, tag)</div><div class="line">        <span class="keyword">for</span> attr <span class="keyword">in</span> attrs:</div><div class="line">            print(<span class="string">"     attr:"</span>, attr)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_endtag</span><span class="params">(self, tag)</span>:</span></div><div class="line">        print(<span class="string">"End tag  :"</span>, tag)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_data</span><span class="params">(self, data)</span>:</span></div><div class="line">        print(<span class="string">"Data     :"</span>, data)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_comment</span><span class="params">(self, data)</span>:</span></div><div class="line">        print(<span class="string">"Comment  :"</span>, data)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_entityref</span><span class="params">(self, name)</span>:</span></div><div class="line">        c = chr(name2codepoint[name])</div><div class="line">        print(<span class="string">"Named ent:"</span>, c)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_charref</span><span class="params">(self, name)</span>:</span></div><div class="line">        <span class="keyword">if</span> name.startswith(<span class="string">'x'</span>):</div><div class="line">            c = chr(int(name[<span class="number">1</span>:], <span class="number">16</span>))</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            c = chr(int(name))</div><div class="line">        print(<span class="string">"Num ent  :"</span>, c)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_decl</span><span class="params">(self, data)</span>:</span></div><div class="line">        print(<span class="string">"Decl     :"</span>, data)</div><div class="line"></div><div class="line">parser = MyHTMLParser()</div><div class="line"></div><div class="line">parser.feed(<span class="string">'&lt;img src="python-logo.png" alt="The Python logo"&gt;'</span>)</div></pre></td></tr></table></figure><h1 id="爬虫入门"><a href="#爬虫入门" class="headerlink" title="爬虫入门"></a>爬虫入门</h1><h2 id="抓取网页"><a href="#抓取网页" class="headerlink" title="抓取网页"></a>抓取网页</h2><p>urllib is a package that collects several modules for working with URLs:</p><ul><li>urllib.request 打开和读取URLs</li><li>urllib.error 包含urllib.request产生的错误，可以使用try进行捕捉处理</li><li>urllib.parse 解析URLs</li><li>urllib.robotparser 解析robots.txt文本文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></div><div class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</div><div class="line"><span class="keyword">import</span> chardet</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    response = request.urlopen(<span class="string">"https://www.baidu.com/"</span>)</div><div class="line">    html = response.read()</div><div class="line">    charset = chardet.detect(html)</div><div class="line">    print(charset)</div><div class="line">    print(html)</div></pre></td></tr></table></figure><h2 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a><a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html" target="_blank" rel="external">BeautifulSoup</a></h2><p><code>Beautiful Soup</code> 是一个可以从HTML或XML文件中提取数据的Python库.它能够通过你喜欢的转换器实现惯用的文档导航,查找,修改文档的方式.Beautiful Soup会帮你节省数小时甚至数天的工作时间.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding=utf-8</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"></div><div class="line"><span class="comment"># 获取html文档</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_html</span><span class="params">(url)</span>:</span></div><div class="line">    <span class="string">"""get the content of the url"""</span></div><div class="line">    response = requests.get(url)</div><div class="line">    response.encoding = <span class="string">'utf-8'</span></div><div class="line">    <span class="keyword">return</span> response.text</div><div class="line"></div><div class="line"><span class="comment"># 获取最新的笑话</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_latest_joker</span><span class="params">(html)</span>:</span></div><div class="line">    <span class="string">"""get the last joke of the html"""</span></div><div class="line">    soup = BeautifulSoup(html, <span class="string">"html.parser"</span>)</div><div class="line">    joke_content = soup.select(<span class="string">'div.content'</span>)[<span class="number">0</span>].get_text()</div><div class="line">    <span class="keyword">return</span> joke_content</div><div class="line"></div><div class="line"><span class="comment"># 获取笑话</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_joke_contents</span><span class="params">(html)</span>:</span></div><div class="line">    <span class="string">"""get the joke of the html"""</span></div><div class="line">    joke_contents = []</div><div class="line">    soup = BeautifulSoup(html, <span class="string">"html.parser"</span>)</div><div class="line">    <span class="keyword">for</span> content <span class="keyword">in</span> soup.select(<span class="string">'div.content'</span>):</div><div class="line">        joke_contents.append(content.get_text())</div><div class="line">    <span class="comment"># joke_content = soup.select('div.content')[1].get_text()</span></div><div class="line">    <span class="keyword">return</span> joke_contents</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</div><div class="line">    url_joke = <span class="string">"https://www.qiushibaike.com"</span></div><div class="line">    html = get_html(url_joke)</div><div class="line">    joke_contents = get_latest_joker(html)</div><div class="line">    print(joke_contents)</div></pre></td></tr></table></figure><h3 id="BS解析器"><a href="#BS解析器" class="headerlink" title="BS解析器"></a>BS解析器</h3><table><thead><tr><th>解析器</th><th style="text-align:center">使用方法</th><th style="text-align:center">优势</th><th style="text-align:center">劣势</th></tr></thead><tbody><tr><td>Python标准库</td><td style="text-align:center">BeautifulSoup(markup, “html.parser”)</td><td style="text-align:center">Python的内置标准库、执行速度适中、文档容错能力强</td><td style="text-align:center">Python 2.7.3 or 3.2.2)前 的版本中文档容错能力差</td></tr><tr><td>BeautifulSoup(markup, “xml”)</td><td style="text-align:center">BeautifulSoup(markup, “lxml”)</td><td style="text-align:center">速度快、唯一支持XML的解析器</td><td style="text-align:center">需要安装C语言库</td></tr><tr><td>html5lib</td><td style="text-align:center">BeautifulSoup(markup, “html5lib”)</td><td style="text-align:center">最好的容错性、以浏览器的方式解析文档、生成HTML5格式的文档</td><td style="text-align:center">速度慢</td></tr></tbody></table><h1 id="爬虫框架"><a href="#爬虫框架" class="headerlink" title="爬虫框架"></a>爬虫框架</h1><h2 id="Scrapy"><a href="#Scrapy" class="headerlink" title="Scrapy"></a><a href="https://scrapy.org/" target="_blank" rel="external">Scrapy</a></h2><p>Scrapy，Python开发的一个快速,高层次的屏幕抓取和web抓取框架，用于抓取web站点并从页面中提取结构化的数据。Scrapy用途广泛，可以用于数据挖掘、监测和自动化测试。</p><h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p><img src="/res/img/spider/scrapy_architecture.png" alt=""></p><ul><li><strong>引擎(Scrapy)</strong><br>用来处理整个系统的数据流处理, 触发事务(框架核心)</li><li><strong>调度器(Scheduler)</strong><br>用来接受引擎发过来的请求, 压入队列中, 并在引擎再次请求的时候返回. 可以想像成一个URL（抓取网页的网址或者说是链接）的优先队列, 由它来决定下一个要抓取的网址是什么, 同时去除重复的网址</li><li><strong>下载器(Downloader)</strong><br>用于下载网页内容, 并将网页内容返回给蜘蛛(Scrapy下载器是建立在twisted这个高效的异步模型上的)</li><li><strong>爬虫(Spiders)</strong><br>爬虫是主要干活的, 用于从特定的网页中提取自己需要的信息, 即所谓的实体(Item)。用户也可以从中提取出链接,让Scrapy继续抓取下一个页面</li><li><strong>项目管道(Pipeline)</strong><br>负责处理爬虫从网页中抽取的实体，主要的功能是持久化实体、验证实体的有效性、清除不需要的信息。当页面被爬虫解析后，将被发送到项目管道，并经过几个特定的次序处理数据。</li><li><strong>下载器中间件(Downloader Middlewares)</strong><br>位于Scrapy引擎和下载器之间的框架，主要是处理Scrapy引擎与下载器之间的请求及响应。</li><li><strong>爬虫中间件(Spider Middlewares)</strong><br>介于Scrapy引擎和爬虫之间的框架，主要工作是处理蜘蛛的响应输入和请求输出。</li><li><strong>调度中间件(Scheduler Middewares)</strong><br>介于Scrapy引擎和调度之间的中间件，从Scrapy引擎发送到调度的请求和响应。</li></ul><h3 id="运行流程"><a href="#运行流程" class="headerlink" title="运行流程"></a>运行流程</h3><ol><li>引擎从调度器中取出一个链接(URL)用于接下来的抓取</li><li>引擎把URL封装成一个请求(Request)传给下载器</li><li>下载器把资源下载下来，并封装成应答包(Response)</li><li>爬虫解析Response</li><li>解析出实体（Item）,则交给实体管道进行进一步的处理</li><li>解析出的是链接（URL）,则把URL交给调度器等待抓取</li></ol><h3 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h3><p>无他，<a href="https://docs.scrapy.org/en/latest/intro/tutorial.html" target="_blank" rel="external">官网</a></p><h3 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h3><p>爬取<code>有品质</code>的网站的数据相对简单（比如<code>知乎</code>、<code>51job</code>、<code>豆瓣</code>等等），它们的前端页面的元素的命名相对比较规范。大厂的页面反而好解析，而且网上有大量的实例，这里我们来爬取一些技术比较落后的网站，比如爬取<a href="https://newhouse.cnnbfdc.com/projects" target="_blank" rel="external">宁波新楼盘数据</a>。</p><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><ol><li>创建工程： <code>scrapy startproject tutorial</code></li><li><p>创建爬虫: </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd tutorial </div><div class="line">scrapy genspider nbnewhouse cnnbfdc.com</div></pre></td></tr></table></figure></li><li><p>爬取数据: <code>scrapy crawl nbnewhouse</code> </p></li></ol><h4 id="scrapy-shell"><a href="#scrapy-shell" class="headerlink" title="scrapy shell"></a>scrapy shell</h4><p>可以在shell内分析网站，将xpath或css语句调试好。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">scrapy shell https://newhouse.cnnbfdc.com/projects</div><div class="line">&gt;&gt;&gt; response.xpath(&quot;//div[@class=&apos;views-row&apos;]&quot;)</div><div class="line">[]</div><div class="line">&gt;&gt;&gt; response.xpath(&quot;//div[@class=&apos;item-list&apos;]&quot;)</div><div class="line">[&lt;Selector xpath=&quot;//div[@class=&apos;item-list&apos;]&quot; data=&apos;&lt;div class=&quot;item-list&quot;&gt;&lt;ul class=&quot;faceta&apos;&gt;, &lt;Selector xpath=&quot;//div[@class=&apos;item-list&apos;]&quot; data=&apos;&lt;div class=&quot;item-list&quot;&gt;&lt;ul class=&quot;faceta&apos;&gt;, &lt;Selector xpath=&quot;//div[@class=&apos;item-list&apos;]&quot; data=&apos;&lt;div class=&quot;item-list&quot;&gt;&lt;ul class=&quot;faceta&apos;&gt;, &lt;Selector xpath=&quot;//div[@class=&apos;item-list&apos;]&quot; data=&apos;&lt;div class=&quot;item-list&quot;&gt;&lt;ul class=&quot;faceta&apos;&gt;, &lt;Selector xpath=&quot;//div[@class=&apos;item-list&apos;]&quot; data=&apos;&lt;div class=&quot;item-list&quot;&gt;&lt;ul class=&quot;search&apos;&gt;, &lt;Selector xpath=&quot;//div[@class=&apos;item-list&apos;]&quot; data=&apos;&lt;div class=&quot;item-list&quot;&gt;    &lt;ul&gt;         &apos;&gt;, &lt;Selector xpath=&quot;//div[@class=&apos;item-list&apos;]&quot; data=&apos;&lt;div class=&quot;item-list&quot;&gt;&lt;ul class=&quot;pager&quot;&apos;&gt;]</div><div class="line">&gt;&gt;&gt; response.xpath(&quot;//div[@class=&apos;item-list&apos;]&quot;)[5].css(&apos;li&apos;)</div><div class="line">[&lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-1 views-r&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-2 views-r&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-3 views-r&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-4 views-r&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-5 views-r&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-6 views-r&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-7 views-r&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-8 views-r&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-9 views-r&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-10 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-11 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-12 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-13 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-14 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-15 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-16 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-17 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-18 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-19 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-20 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-21 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-22 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-23 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-24 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-25 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-26 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-27 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-28 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-29 views-&apos;&gt;, &lt;Selector xpath=&apos;descendant-or-self::li&apos; data=&apos;&lt;li class=&quot;views-row views-row-30 views-&apos;&gt;]</div></pre></td></tr></table></figure></p><h4 id="code"><a href="#code" class="headerlink" title="code"></a>code</h4><ul><li><p>items.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">TutorialItem</span><span class="params">(scrapy.Item)</span>:</span></div><div class="line">    <span class="comment"># define the fields for your item here like:</span></div><div class="line">    <span class="comment"># name = scrapy.Field()</span></div><div class="line">    name = scrapy.Field()</div><div class="line">    href = scrapy.Field()</div><div class="line">    lic = scrapy.Field()</div><div class="line">    address = scrapy.Field()</div><div class="line">    developer = scrapy.Field()</div><div class="line">    type = scrapy.Field()</div></pre></td></tr></table></figure></li><li><p>nbnewhouse.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> scrapy</div><div class="line"><span class="keyword">from</span> ..items <span class="keyword">import</span> TutorialItem</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">NbnewhouseSpider</span><span class="params">(scrapy.Spider)</span>:</span></div><div class="line">    name = <span class="string">'nbnewhouse'</span></div><div class="line">    allowed_domains = [<span class="string">'cnnbfdc.com'</span>]</div><div class="line">    start_urls = [<span class="string">'http://cnnbfdc.com/'</span>]</div><div class="line">    base_url = <span class="string">'https://newhouse.cnnbfdc.com/projects/'</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_requests</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        urls = []</div><div class="line">        page = <span class="number">6</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(page):</div><div class="line">            urls.append(NbnewhouseSpider.base_url + <span class="string">'projects?page=%s'</span> % i)</div><div class="line"></div><div class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> urls:</div><div class="line">            <span class="keyword">yield</span> scrapy.Request(url=url, callback=self.parse)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></div><div class="line">        projects = response.xpath(<span class="string">"//div[@class='group-right']"</span>)</div><div class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> projects:</div><div class="line">            tutorialItem = TutorialItem()</div><div class="line">            tutorialItem[<span class="string">'name'</span>] = item.xpath(<span class="string">"div/a/text()"</span>).extract()[<span class="number">0</span>].strip()</div><div class="line">            tutorialItem[<span class="string">'href'</span>] = item.xpath(<span class="string">'div/a/@href'</span>).extract()[<span class="number">0</span>].strip()</div><div class="line">            tutorialItem[<span class="string">'lic'</span>] = item.xpath(<span class="string">"div[2]/text()"</span>).extract()[<span class="number">0</span>].strip()</div><div class="line">            tutorialItem[<span class="string">'address'</span>] = item.xpath(<span class="string">"div[3]/div/div[1]/span/text()"</span>).extract()[<span class="number">0</span>].strip()</div><div class="line">            tutorialItem[<span class="string">'developer'</span>] = item.xpath(<span class="string">"div[3]/div/div[2]/span/text()"</span>).extract()[<span class="number">0</span>].strip()</div><div class="line">            tutorialItem[<span class="string">'type'</span>] = item.xpath(<span class="string">"div"</span>)[<span class="number">-1</span>].xpath(<span class="string">'text()'</span>).extract()</div><div class="line">            <span class="keyword">yield</span> tutorialItem</div></pre></td></tr></table></figure></li></ul><h1 id="Charlotte"><a href="#Charlotte" class="headerlink" title="Charlotte"></a><a href="https://github.com/LiZoRN/Charlotte" target="_blank" rel="external">Charlotte</a></h1><p>爬虫框架</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li><p>数据库<br>安装mysql,默认用户名密码:root/root，对应配置修改Charlotte下的setting.py的DATABASES。</p></li><li><p>安装库<br>安装<a href="https://www.python.org/downloads/windows/" target="_blank" rel="external">python3</a>,然后进入工程根目录，执行: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/LiZoRN/Charlotte.git</div><div class="line">pip install -r requirements.txt</div></pre></td></tr></table></figure></li><li><p>迁移数据表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">python manage.py makemigrations</div><div class="line">python manage.py migrate</div></pre></td></tr></table></figure></li></ul><h2 id="爬取IP代理数据-可选"><a href="#爬取IP代理数据-可选" class="headerlink" title="爬取IP代理数据(可选)"></a>爬取IP代理数据(可选)</h2><ul><li><p>cd 到 spiders/ProxyIp目录，命令行下执行：</p><p>  scrapy crawl xici</p></li><li><p>cd 到 spiders/tools目录，清晰有效ip数据：</p><p>  python proxyip.py</p></li></ul><h2 id="爬取宁波楼盘信息"><a href="#爬取宁波楼盘信息" class="headerlink" title="爬取宁波楼盘信息"></a>爬取<a href="http://newhouse.cnnbfdc.com" target="_blank" rel="external">宁波楼盘信息</a></h2><p>cd 到 spiders/newhouse目录，命令行下执行：</p><p><code>scrapy crawl nbnewhouse</code></p><h2 id="运行api服务"><a href="#运行api服务" class="headerlink" title="运行api服务"></a>运行api服务</h2><p>运行服务：</p><p><code>python manage.py runserver</code></p><p>api接口如下：</p><p>获取新楼盘列表：api/newhouses/?page=2&amp;page_size=5<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&#123;</div><div class="line">&quot;data&quot;: [</div><div class="line">    &#123;</div><div class="line">        &quot;id&quot;: 768,</div><div class="line">        &quot;name&quot;: &quot;宁波金融服务中心北区E栋二期&quot;,</div><div class="line">        &quot;project_state&quot;: &quot;现房状态&quot;,</div><div class="line">        &quot;address&quot;: &quot;东至鼎泰路北至和济街南至规划路西至规划路&quot;,</div><div class="line">        &quot;districts&quot;: &quot;江东区&quot;,</div><div class="line">        &quot;created&quot;: &quot;2017-05-06T02:46:55.063256Z&quot;</div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">        &quot;id&quot;: 1024,</div><div class="line">        &quot;name&quot;: &quot;嘉恒广场(西区)&quot;,</div><div class="line">        &quot;project_state&quot;: &quot;现房状态&quot;,</div><div class="line">        &quot;address&quot;: &quot;江东区东部新城混合住用区C2-1地块&quot;,</div><div class="line">        &quot;districts&quot;: &quot;江东区&quot;,</div><div class="line">        &quot;created&quot;: &quot;2017-05-06T02:46:55.063256Z&quot;</div><div class="line">    &#125;</div><div class="line">],</div><div class="line">&quot;page&quot;: 2,</div><div class="line">&quot;total&quot;: 799</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">获取楼盘详情：api/newhouses/1/</div></pre></td></tr></table></figure><p>{<br>“id”: 1,<br>“name”: “万科云鹭湾Ⅱ-6地块二期”,<br>“supervision_bank”: “中国建设银行股份有限公司宁波江北支行”,<br>“supervision_acount”: “33101983736050512431”,<br>“project_state”: “期房状态”,<br>“address”: “”,<br>“dev_company”: “宁波江北万科置业有限公司”,<br>“license_authority”: “”,<br>“sale_permit”: “商品房预售许可证”,<br>“license_key”: “2016”,<br>“online_saleable_area”: “24198.74”,<br>“online_saleable_flats”: “450.00”,<br>“saleable_area”: “372.24”,<br>“saleable_flats”: “29.00”,<br>“sold_area”: “23826.50”,<br>“sold_flats”: “421.00”,<br>“residential_area”: “0.00”,<br>“residential_flats”: “0.00”,<br>“sold_residential_area”: “21188.42”,<br>“sold_residential_flats”: “214.00”,<br>“reserve_area”: “0.00”,<br>“reserve_flats”: “0.00”,<br>“saleable_parking_amount”: “0.00”,<br>“saleable_garage_amount”: “29.00”,<br>“sold_avg_price”: “12234.12”,<br>“districts”: “江北慈城”,<br>“contact_phone”: “”,<br>“remark”: “”,<br>“created”: “2017-05-06T02:46:55.063256Z”<br>} <code></code></p><h2 id="todolist"><a href="#todolist" class="headerlink" title="todolist"></a>todolist</h2><h3 id="动态脚本"><a href="#动态脚本" class="headerlink" title="动态脚本"></a>动态脚本</h3><h3 id="反爬虫"><a href="#反爬虫" class="headerlink" title="反爬虫"></a>反爬虫</h3><h3 id="分布式"><a href="#分布式" class="headerlink" title="分布式"></a>分布式</h3><h3 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h3>]]></content>
    
    <summary type="html">
    
      爬虫入门简单，精通也不易。虽然爬虫是Python的看家本领，网上也有大量的教程，但是大部分文章所涉及的内容都的粗浅，没有系统性的介绍，也不具备工程实战性。遂系统性的梳理一下。
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="爬虫" scheme="http://zfeiyu.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="python" scheme="http://zfeiyu.com/tags/python/"/>
    
      <category term="spider" scheme="http://zfeiyu.com/tags/spider/"/>
    
  </entry>
  
  <entry>
    <title>区块链导论:以太坊DAPP（宠物店应用）</title>
    <link href="http://zfeiyu.com/2018/05/22/blockchain-introduce-ethereum-pet-shop/"/>
    <id>http://zfeiyu.com/2018/05/22/blockchain-introduce-ethereum-pet-shop/</id>
    <published>2018-05-22T07:33:00.000Z</published>
    <updated>2018-05-26T08:55:57.974Z</updated>
    
    <content type="html"><![CDATA[<p>宠物领养应用是Truffle自带的一个教程应用，通过本教程你将学到以下内容：</p><ol><li>使用<code>Truffle Box</code>来创建<code>Truffle工程</code></li><li>编写智能合约</li><li>编译部署智能合约</li><li>测试智能合约</li><li>创建一个可与智能合约交互的用户接口</li><li>浏览器内访问<code>DAPP</code></li></ol><h1 id="使用Truffle-Box来创建Truffle工程"><a href="#使用Truffle-Box来创建Truffle工程" class="headerlink" title="使用Truffle Box来创建Truffle工程"></a>使用<code>Truffle Box</code>来创建<code>Truffle工程</code></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir pet-shop</div></pre></td></tr></table></figure><h1 id="编写和测试智能合约"><a href="#编写和测试智能合约" class="headerlink" title="编写和测试智能合约"></a>编写和测试智能合约</h1><ol><li><p>创建文件<code>contracts/Adoption.sol</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">pragma solidity ^0.4.17;</div><div class="line"></div><div class="line">contract Adoption &#123;</div><div class="line">  address[16] public adopters;</div><div class="line">  // 领养宠物</div><div class="line">  function adopt(uint petId) public returns (uint) &#123;</div><div class="line">    require(petId &gt;= 0 &amp;&amp; petId &lt;= 15);</div><div class="line"></div><div class="line">    adopters[petId] = msg.sender;</div><div class="line"></div><div class="line">    return petId;</div><div class="line">  &#125;</div><div class="line">  // Retireving the adopters</div><div class="line">  function getAdopters() public view returns (address[16]) &#123;</div><div class="line">    return adopters;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>编写测试代码,’test/TestAdoption.sol’</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">pragma solidity ^0.4.17;</div><div class="line"></div><div class="line">import &quot;truffle/Assert.sol&quot;;</div><div class="line">import &quot;truffle/DeployedAddresses.sol&quot;;</div><div class="line">import &quot;../contracts/Adoption.sol&quot;;</div><div class="line"></div><div class="line">contract TestAdoption &#123;</div><div class="line">  Adoption adoption = Adoption(DeployedAddresses.Adoption());</div><div class="line">  // Testing the adopt() function</div><div class="line">  function testUserCanAdoptPet() public &#123;</div><div class="line">    uint returnedId = adoption.adopt(8);</div><div class="line"></div><div class="line">    uint expected = 8;</div><div class="line"></div><div class="line">    Assert.equal(returnedId, expected, &quot;Adoption of pet ID 8 should be recorded.&quot;);</div><div class="line">  &#125;</div><div class="line">  // Testing retrieval of all pet owners</div><div class="line">  function testGetAdopterAddressByPetIdInArray() public &#123;</div><div class="line">    // Expected owner is this contract</div><div class="line">    address expected = this;</div><div class="line">  </div><div class="line">    // Store adopters in memory rather than contract&apos;s storage</div><div class="line">    address[16] memory adopters = adoption.getAdopters();</div><div class="line"></div><div class="line">    Assert.equal(adopters[8], expected, &quot;Owner of pet ID 8 should be recorded.&quot;);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li><code>Assert.sol</code>：单元测试的assert方法,具体<a href="https://github.com/trufflesuite/truffle-core/blob/master/lib/testing/Assert.sol" target="_blank" rel="external">查看</a></li><li><code>DeployedAddresses.sol</code>: 执行<code>truffle</code>测试用例，truffle会部署一个新的合约用力到区块链中，这个合约用户获得<code>被部署的合约</code></li></ul><p>执行测试。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">➜  pet-shop-tutorial truffle test</div><div class="line">Using network &apos;development&apos;.</div><div class="line"></div><div class="line">Compiling ./contracts/Adoption.sol...</div><div class="line">Compiling ./test/TestAdoption.sol...</div><div class="line">Compiling truffle/Assert.sol...</div><div class="line">Compiling truffle/DeployedAddresses.sol...</div><div class="line"></div><div class="line"></div><div class="line">  TestAdoption</div><div class="line">    ✓ testUserCanAdoptPet (197ms)</div><div class="line">    ✓ testGetAdopterAddressByPetId (165ms)</div><div class="line">    ✓ testGetAdopterAddressByPetIdInArray (333ms)</div><div class="line"></div><div class="line"></div><div class="line">  3 passing (2s)</div></pre></td></tr></table></figure></p><h1 id="构建前端应用页面"><a href="#构建前端应用页面" class="headerlink" title="构建前端应用页面"></a>构建前端应用页面</h1><ol><li><p>打开<code>/src/js/app.js</code>，替换<code>replace me</code>代码段。</p><ul><li><p>initWeb3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// Is there an injected web3 instance?</div><div class="line">if (typeof web3 !== &apos;undefined&apos;) &#123;</div><div class="line">  App.web3Provider = web3.currentProvider;</div><div class="line">&#125; else &#123;</div><div class="line">  // If no injected web3 instance is detected, fall back to Ganache</div><div class="line">  App.web3Provider = new Web3.providers.HttpProvider(&apos;http://localhost:7545&apos;);</div><div class="line">&#125;</div><div class="line">web3 = new Web3(App.web3Provider);</div></pre></td></tr></table></figure><p>判断web3实例是否存在(<code>Mist</code>或者<code>MentaMask</code>)，如果存在则返回实例，不存在就新建。</p></li><li><p>initContract</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$.getJSON(&apos;Adoption.json&apos;, function(data) &#123;</div><div class="line"> // 获取合约文件并使用truffle-contract方法实例化</div><div class="line"> var AdoptionArtifact = data;</div><div class="line"> App.contracts.Adoption = TruffleContract(AdoptionArtifact);</div><div class="line"></div><div class="line"> // 将智能合约实例加载到服务容器中，此处是web3Providers</div><div class="line"> App.contracts.Adoption.setProvider(App.web3Provider);</div><div class="line"></div><div class="line"> // 使用合约来获取和标记被领养的宠物</div><div class="line"> return App.markAdopted();</div><div class="line">&#125;);</div></pre></td></tr></table></figure></li><li><p>markAdopted</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">var adoptionInstance;</div><div class="line"></div><div class="line">App.contracts.Adoption.deployed().then(function(instance) &#123;</div><div class="line">  adoptionInstance = instance;</div><div class="line"></div><div class="line">  return adoptionInstance.getAdopters.call();</div><div class="line">&#125;).then(function(adopters) &#123;</div><div class="line">  for (i = 0; i &lt; adopters.length; i++) &#123;</div><div class="line">    if (adopters[i] !== &apos;0x0000000000000000000000000000000000000000&apos;) &#123;</div><div class="line">      $(&apos;.panel-pet&apos;).eq(i).find(&apos;button&apos;).text(&apos;Success&apos;).attr(&apos;disabled&apos;, true);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;).catch(function(err) &#123;</div><div class="line">  console.log(err.message);</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>使用getAdopters方法获得所有被领养的宠物，并将对应领养按钮设为<code>disable</code>。</p></li><li><p>handleAdopt</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">var adoptionInstance;</div><div class="line">web3.eth.getAccounts(function(error, accounts) &#123;</div><div class="line">  if (error) &#123;</div><div class="line">    console.log(error);</div><div class="line">  &#125;</div><div class="line">// 获取当前账户</div><div class="line">var account = accounts[0];</div><div class="line">    </div><div class="line">App.contracts.Adoption.deployed().then(function(instance) &#123;</div><div class="line">  adoptionInstance = instance;</div><div class="line">  // Execute adopt as a transaction by sending account</div><div class="line">  return adoptionInstance.adopt(petId, &#123;from: account&#125;);</div><div class="line">  &#125;).then(function(result) &#123;</div><div class="line">    return App.markAdopted();</div><div class="line">  &#125;).catch(function(err) &#123;</div><div class="line">    console.log(err.message);</div><div class="line">  &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></li></ul></li></ol><h1 id="运行web-server"><a href="#运行web-server" class="headerlink" title="运行web server"></a>运行web server</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run dev</div></pre></td></tr></table></figure><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><p><a href="https://github.com/LiZoRN/BlockChain/tree/master/ethereum/pet-shop-tutorial" target="_blank" rel="external">pet-shop</a></p><h1 id="issue"><a href="#issue" class="headerlink" title="issue"></a>issue</h1><ol><li>修改DAPP的index.html，将<code>&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js&quot;&gt;&lt;/script&gt;</code>替换为<code>https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js</code></li></ol>]]></content>
    
    <summary type="html">
    
      以太坊DAPP：pet-shop开发
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="区块链" scheme="http://zfeiyu.com/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="blockchain" scheme="http://zfeiyu.com/tags/blockchain/"/>
    
      <category term="Ethereum" scheme="http://zfeiyu.com/tags/Ethereum/"/>
    
      <category term="以太坊" scheme="http://zfeiyu.com/tags/%E4%BB%A5%E5%A4%AA%E5%9D%8A/"/>
    
  </entry>
  
  <entry>
    <title>区块链导论:以太坊DAPP（投票应用）</title>
    <link href="http://zfeiyu.com/2018/05/22/blockchain-introduce-ethereum-voting/"/>
    <id>http://zfeiyu.com/2018/05/22/blockchain-introduce-ethereum-voting/</id>
    <published>2018-05-22T07:33:00.000Z</published>
    <updated>2018-05-26T08:55:57.975Z</updated>
    
    <content type="html"><![CDATA[<h1 id="投票DAPP"><a href="#投票DAPP" class="headerlink" title="投票DAPP"></a>投票DAPP</h1><h2 id="投票智能合约"><a href="#投票智能合约" class="headerlink" title="投票智能合约"></a>投票智能合约</h2><ul><li>contracts/Voting.sol</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">pragma solidity ^0.4.18;</div><div class="line">// We have to specify what version of compiler this code will compile with</div><div class="line"></div><div class="line">contract Voting &#123;</div><div class="line">  /* mapping field below is equivalent to an associative array or hash.</div><div class="line">  The key of the mapping is candidate name stored as type bytes32 and value is</div><div class="line">  an unsigned integer to store the vote count</div><div class="line">  */</div><div class="line"></div><div class="line">  mapping (bytes32 =&gt; uint8) public votesReceived;</div><div class="line"></div><div class="line">  /* Solidity doesn&apos;t let you pass in an array of strings in the constructor (yet).</div><div class="line">  We will use an array of bytes32 instead to store the list of candidates</div><div class="line">  */</div><div class="line"></div><div class="line">  bytes32[] public candidateList;</div><div class="line"></div><div class="line">  /* This is the constructor which will be called once when you</div><div class="line">  deploy the contract to the blockchain. When we deploy the contract,</div><div class="line">  we will pass an array of candidates who will be contesting in the election</div><div class="line">  */</div><div class="line">  function Voting(bytes32[] candidateNames) public &#123;</div><div class="line">    candidateList = candidateNames;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  // This function returns the total votes a candidate has received so far</div><div class="line">  function totalVotesFor(bytes32 candidate) view public returns (uint8) &#123;</div><div class="line">    require(validCandidate(candidate));</div><div class="line">    return votesReceived[candidate];</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  // This function increments the vote count for the specified candidate. This</div><div class="line">  // is equivalent to casting a vote</div><div class="line">  function voteForCandidate(bytes32 candidate) public &#123;</div><div class="line">    require(validCandidate(candidate));</div><div class="line">    votesReceived[candidate] += 1;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  function validCandidate(bytes32 candidate) view public returns (bool) &#123;</div><div class="line">    for(uint i = 0; i &lt; candidateList.length; i++) &#123;</div><div class="line">      if (candidateList[i] == candidate) &#123;</div><div class="line">        return true;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    return false;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="使用node-console调试合约"><a href="#使用node-console调试合约" class="headerlink" title="使用node console调试合约"></a>使用node console调试合约</h2><p>打开<code>ganche</code>，使用<code>web3</code>交互。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">➜  chapter1 git:(master) ✗ node </div><div class="line">&gt; Web3 = require(&apos;web3&apos;)</div><div class="line">&#123; [Function: Web3]</div><div class="line">  providers: </div><div class="line">   &#123; HttpProvider: [Function: HttpProvider],</div><div class="line">     IpcProvider: [Function: IpcProvider] &#125; &#125;</div><div class="line">&gt; web3 = new Web3(new Web3.providers.HttpProvider(&quot;http://localhost:7545&quot;));</div></pre></td></tr></table></figure></p><p>查看区块账号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&gt; web3.eth.accounts</div><div class="line">[ &apos;0x2fa9da84494be487126a2d96794a69c904acdf17&apos;,</div><div class="line">  &apos;0xfbdb68208934c62e78f7e88089f47d0074298a58&apos;,</div><div class="line">  &apos;0x7fbc15bdc47cae7a6f23f854480053b3f63e8783&apos;,</div><div class="line">  &apos;0x2606d31e26b07f7077971810c8f16ed242969f9d&apos;,</div><div class="line">  &apos;0x90b1320cca7320d914a8cf7a04648ac7ebfcfe66&apos;,</div><div class="line">  &apos;0xd5a5a2f92f88f9ec4e3329200fa2f355e83af553&apos;,</div><div class="line">  &apos;0xb7765e9be2577c73ffe6e87843a3290781b87298&apos;,</div><div class="line">  &apos;0xda22e32e230554fbd33541b0187a9071430dbbf6&apos;,</div><div class="line">  &apos;0x8761a81d0e30ab8117e33e741f1b0ddfdb1b000a&apos;,</div><div class="line">  &apos;0x00448bbe603ab4ceb215b9169f7c4f0118aa7896&apos; ]</div></pre></td></tr></table></figure><p>读取并编译智能合约</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt; code = fs.readFileSync(&apos;Voting.sol&apos;).toString()</div><div class="line">&gt; solc = require(&apos;solc&apos;)</div><div class="line">&gt; compiledCode = solc.compile(code)</div></pre></td></tr></table></figure><p>部署智能合约</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt; abiDefinition = JSON.parse(compiledCode.contracts[&apos;:Voting&apos;].interface)</div><div class="line">&gt; VotingContract = web3.eth.contract(abiDefinition)</div><div class="line">&gt; byteCode = compiledCode.contracts[&apos;:Voting&apos;].bytecode</div><div class="line">&gt; deployedContract = VotingContract.new([&apos;Rama&apos;,&apos;Nick&apos;,&apos;Jose&apos;],&#123;data: byteCode, from: web3.eth.accounts[0], gas: 4700000&#125;)</div><div class="line">&gt; contractInstance = VotingContract.at(deployedContract.address)</div></pre></td></tr></table></figure><pre><code>- compiledCode.contracts[‘:Voting’].bytecode: 合约二进制代码，用于部署到区块链中.- compiledCode.contracts[‘:Voting’].interface: 智能合约接口模板(abi)，告诉合约用户可使用的接口.</code></pre><p>调用合约方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&gt; contractInstance.totalVotesFor.call(&apos;Rama&apos;)</div><div class="line">BigNumber &#123; s: 1, e: 0, c: [ 0 ] &#125;</div><div class="line">&gt; </div><div class="line">&gt; contractInstance.voteForCandidate(&apos;Rama&apos;, &#123;from: web3.eth.accounts[0]&#125;)</div><div class="line">&apos;0xb78beb95dce55f946fe9d3bbe06f3ed588749e2714fa2834e4f0a59f6a2d55d6&apos;</div><div class="line">&gt; contractInstance.voteForCandidate(&apos;Rama&apos;, &#123;from: web3.eth.accounts[0]&#125;)</div><div class="line">&apos;0xf0b6291f6eca6e6d314e0c246ec863e74506656c5da70a88f583f80be9dc119b&apos;</div><div class="line">&gt; contractInstance.totalVotesFor.call(&apos;Rama&apos;).toLocaleString()</div><div class="line">&apos;2&apos;</div></pre></td></tr></table></figure></p><blockquote><p><code>0xb78beb95dce55f946fe9d3bbe06f3ed588749e2714fa2834e4f0a59f6a2d55d6</code>是每一次交易发生的<code>transaction id</code></p></blockquote><h2 id="前端页面"><a href="#前端页面" class="headerlink" title="前端页面"></a>前端页面</h2><ul><li><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello World DApp<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">'https://fonts.googleapis.com/css?family=Open+Sans:400,700'</span> <span class="attr">rel</span>=<span class="string">'stylesheet'</span> <span class="attr">type</span>=<span class="string">'text/css'</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css'</span> <span class="attr">rel</span>=<span class="string">'stylesheet'</span> <span class="attr">type</span>=<span class="string">'text/css'</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>A Simple Hello World Voting Application<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table-responsive"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-bordered"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">thead</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">th</span>&gt;</span>Candidate<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">th</span>&gt;</span>Votes<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Rama<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"candidate-1"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Nick<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"candidate-2"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Jose<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"candidate-3"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"candidate"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">onclick</span>=<span class="string">"voteForCandidate()"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>Vote<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.rawgit.com/ethereum/web3.js/develop/dist/web3.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://code.jquery.com/jquery-3.1.1.slim.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./index.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">web3 = <span class="keyword">new</span> Web3(<span class="keyword">new</span> Web3.providers.HttpProvider(<span class="string">"http://localhost:7545"</span>));</div><div class="line">abi = <span class="built_in">JSON</span>.parse(<span class="string">'[&#123;"constant":false,"inputs":[&#123;"name":"candidate","type":"bytes32"&#125;],"name":"totalVotesFor","outputs":[&#123;"name":"","type":"uint8"&#125;],"payable":false,"type":"function"&#125;,&#123;"constant":false,"inputs":[&#123;"name":"candidate","type":"bytes32"&#125;],"name":"validCandidate","outputs":[&#123;"name":"","type":"bool"&#125;],"payable":false,"type":"function"&#125;,&#123;"constant":true,"inputs":[&#123;"name":"","type":"bytes32"&#125;],"name":"votesReceived","outputs":[&#123;"name":"","type":"uint8"&#125;],"payable":false,"type":"function"&#125;,&#123;"constant":true,"inputs":[&#123;"name":"x","type":"bytes32"&#125;],"name":"bytes32ToString","outputs":[&#123;"name":"","type":"string"&#125;],"payable":false,"type":"function"&#125;,&#123;"constant":true,"inputs":[&#123;"name":"","type":"uint256"&#125;],"name":"candidateList","outputs":[&#123;"name":"","type":"bytes32"&#125;],"payable":false,"type":"function"&#125;,&#123;"constant":false,"inputs":[&#123;"name":"candidate","type":"bytes32"&#125;],"name":"voteForCandidate","outputs":[],"payable":false,"type":"function"&#125;,&#123;"constant":true,"inputs":[],"name":"contractOwner","outputs":[&#123;"name":"","type":"address"&#125;],"payable":false,"type":"function"&#125;,&#123;"inputs":[&#123;"name":"candidateNames","type":"bytes32[]"&#125;],"payable":false,"type":"constructor"&#125;]'</span>)</div><div class="line">VotingContract = web3.eth.contract(abi);</div><div class="line"><span class="comment">// nodejs console中contractInstance.address获得的地址</span></div><div class="line">contractInstance = VotingContract.at(<span class="string">'0xf7f433a4a2f9bf3f364bb96abe6a07778a61e095'</span>);</div><div class="line">candidates = &#123;<span class="string">"Rama"</span>: <span class="string">"candidate-1"</span>, <span class="string">"Nick"</span>: <span class="string">"candidate-2"</span>, <span class="string">"Jose"</span>: <span class="string">"candidate-3"</span>&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">voteForCandidate</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  candidateName = $(<span class="string">"#candidate"</span>).val();</div><div class="line">  contractInstance.voteForCandidate(candidateName, &#123;<span class="attr">from</span>: web3.eth.accounts[<span class="number">0</span>]&#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> div_id = candidates[candidateName];</div><div class="line">    $(<span class="string">"#"</span> + div_id).html(contractInstance.totalVotesFor.call(candidateName).toString());</div><div class="line">  &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  candidateNames = <span class="built_in">Object</span>.keys(candidates);</div><div class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; candidateNames.length; i++) &#123;</div><div class="line">    <span class="keyword">let</span> name = candidateNames[i];</div><div class="line">    <span class="keyword">let</span> val = contractInstance.totalVotesFor.call(name).toString()</div><div class="line">    $(<span class="string">"#"</span> + candidates[name]).html(val);</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></li></ul><p>以上是不使用框架的智能合约的开发应用。</p><h1 id="voting优化"><a href="#voting优化" class="headerlink" title="voting优化"></a>voting优化</h1><h2 id="创建truffle工程"><a href="#创建truffle工程" class="headerlink" title="创建truffle工程"></a>创建truffle工程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir voting</div><div class="line">cd voting</div><div class="line">truffle unbox webpack</div></pre></td></tr></table></figure><h2 id="创建合约植入代码。"><a href="#创建合约植入代码。" class="headerlink" title="创建合约植入代码。"></a>创建合约植入代码。</h2><ul><li>migrations/2_deploy_contracts.js<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var VotingContract = artifacts.require(&quot;./Voting.sol&quot;);</div><div class="line"></div><div class="line">module.exports = function(deployer) &#123;</div><div class="line">  deployer.deploy(VotingContract,[&apos;Rama&apos;, &apos;Nick&apos;, &apos;Jose&apos;], &#123;gas: 6700000&#125;);</div><div class="line">&#125;;</div></pre></td></tr></table></figure></li></ul><h2 id="DAPP前端代码"><a href="#DAPP前端代码" class="headerlink" title="DAPP前端代码"></a>DAPP前端代码</h2><ul><li><p>app/javasripts/app.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Import the page's CSS. Webpack will know what to do with it.</span></div><div class="line"><span class="keyword">import</span> <span class="string">"../stylesheets/app.css"</span>;</div><div class="line"></div><div class="line"><span class="comment">// Import libraries we need.</span></div><div class="line"><span class="keyword">import</span> &#123; <span class="keyword">default</span> <span class="keyword">as</span> Web3&#125; <span class="keyword">from</span> <span class="string">'web3'</span>;</div><div class="line"><span class="keyword">import</span> &#123; <span class="keyword">default</span> <span class="keyword">as</span> contract &#125; <span class="keyword">from</span> <span class="string">'truffle-contract'</span></div><div class="line"><span class="keyword">import</span> voting_artifacts <span class="keyword">from</span> <span class="string">'../../build/contracts/Voting.json'</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> Voting = contract(voting_artifacts);</div><div class="line"></div><div class="line"><span class="keyword">let</span> candidates = &#123;<span class="string">"Rama"</span>: <span class="string">"candidate-1"</span>, <span class="string">"Nick"</span>: <span class="string">"candidate-2"</span>, <span class="string">"Jose"</span>: <span class="string">"candidate-3"</span>&#125;</div><div class="line"></div><div class="line"><span class="built_in">window</span>.voteForCandidate = <span class="function"><span class="keyword">function</span>(<span class="params">candidate</span>) </span>&#123;</div><div class="line">  <span class="keyword">let</span> candidateName = $(<span class="string">"#candidate"</span>).val();</div><div class="line">  <span class="keyword">try</span> &#123;</div><div class="line">    $(<span class="string">"#msg"</span>).html(<span class="string">"Vote has been submitted. The vote count will increment as soon as the vote is recorded on the blockchain. Please wait."</span>)</div><div class="line">    $(<span class="string">"#candidate"</span>).val(<span class="string">""</span>);</div><div class="line"></div><div class="line">    <span class="comment">/* Voting.deployed() returns an instance of the contract. Every call</span></div><div class="line"><span class="comment">     * in Truffle returns a promise which is why we have used then()</span></div><div class="line"><span class="comment">     * everywhere we have a transaction call</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    Voting.deployed().then(<span class="function"><span class="keyword">function</span>(<span class="params">contractInstance</span>) </span>&#123;</div><div class="line">      contractInstance.voteForCandidate(candidateName, &#123;<span class="attr">gas</span>: <span class="number">140000</span>, <span class="attr">from</span>: web3.eth.accounts[<span class="number">0</span>]&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">let</span> div_id = candidates[candidateName];</div><div class="line">        <span class="keyword">return</span> contractInstance.totalVotesFor.call(candidateName).then(<span class="function"><span class="keyword">function</span>(<span class="params">v</span>) </span>&#123;</div><div class="line">          $(<span class="string">"#"</span> + div_id).html(v.toString());</div><div class="line">          $(<span class="string">"#msg"</span>).html(<span class="string">""</span>);</div><div class="line">        &#125;);</div><div class="line">      &#125;);</div><div class="line">    &#125;);</div><div class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</div><div class="line">    <span class="built_in">console</span>.log(err);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$( <span class="built_in">document</span> ).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> web3 !== <span class="string">'undefined'</span>) &#123;</div><div class="line">    <span class="built_in">console</span>.warn(<span class="string">"Using web3 detected from external source like Metamask"</span>)</div><div class="line">    <span class="comment">// Use Mist/MetaMask's provider</span></div><div class="line">    <span class="built_in">window</span>.web3 = <span class="keyword">new</span> Web3(web3.currentProvider);</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="built_in">console</span>.warn(<span class="string">"No web3 detected. Falling back to http://localhost:8545. You should remove this fallback when you deploy live, as it's inherently insecure. Consider switching to Metamask for development. More info here: http://truffleframework.com/tutorials/truffle-and-metamask"</span>);</div><div class="line">    <span class="comment">// fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)</span></div><div class="line">    <span class="built_in">window</span>.web3 = <span class="keyword">new</span> Web3(<span class="keyword">new</span> Web3.providers.HttpProvider(<span class="string">"http://localhost:8545"</span>));</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  Voting.setProvider(web3.currentProvider);</div><div class="line">  <span class="keyword">let</span> candidateNames = <span class="built_in">Object</span>.keys(candidates);</div><div class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; candidateNames.length; i++) &#123;</div><div class="line">    <span class="keyword">let</span> name = candidateNames[i];</div><div class="line">    Voting.deployed().then(<span class="function"><span class="keyword">function</span>(<span class="params">contractInstance</span>) </span>&#123;</div><div class="line">      contractInstance.totalVotesFor.call(name).then(<span class="function"><span class="keyword">function</span>(<span class="params">v</span>) </span>&#123;</div><div class="line">        $(<span class="string">"#"</span> + candidates[name]).html(v.toString());</div><div class="line">      &#125;);</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></li><li><p>app/index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello World DApp<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">'https://fonts.googleapis.com/css?family=Open+Sans:400,700'</span> <span class="attr">rel</span>=<span class="string">'stylesheet'</span> <span class="attr">type</span>=<span class="string">'text/css'</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css'</span> <span class="attr">rel</span>=<span class="string">'stylesheet'</span> <span class="attr">type</span>=<span class="string">'text/css'</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>A Simple Hello World Voting Application<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"address"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table-responsive"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-bordered"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">thead</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">th</span>&gt;</span>Candidate<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">th</span>&gt;</span>Votes<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Rama<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"candidate-1"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Nick<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"candidate-2"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Jose<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">"candidate-3"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"candidate"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">onclick</span>=<span class="string">"voteForCandidate()"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>Vote<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://code.jquery.com/jquery-3.1.1.slim.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"app.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></li></ul><h2 id="编译部署智能合约"><a href="#编译部署智能合约" class="headerlink" title="编译部署智能合约:"></a>编译部署智能合约:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">➜  voting git:(master) ✗ truffle compile</div><div class="line">➜  voting git:(master) ✗ truffle migrate</div><div class="line">➜  voting git:(master) ✗ truffle console</div><div class="line">truffle(development)&gt; Voting.deployed().then(function(contractInstance) &#123;contractInstance.voteForCandidate(&apos;Rama&apos;).then(function(v) &#123;console.log(v)&#125;)&#125;)</div><div class="line">undefined</div><div class="line">truffle(development)&gt; &#123; tx: &apos;0xe2ef29e4a6d02ff1217148e3038ba3edcf815840d4400dd8895a5c2497a6e239&apos;,</div><div class="line">  receipt: </div><div class="line">   &#123; transactionHash: &apos;0xe2ef29e4a6d02ff1217148e3038ba3edcf815840d4400dd8895a5c2497a6e239&apos;,</div><div class="line">     transactionIndex: 0,</div><div class="line">     blockHash: &apos;0x19066839d607b6a7f842c026a11fe130474dce2b62f5d0e9c9f2f2d48d286963&apos;,</div><div class="line">     blockNumber: 5,</div><div class="line">     gasUsed: 43411,</div><div class="line">     cumulativeGasUsed: 43411,</div><div class="line">     contractAddress: null,</div><div class="line">     logs: [],</div><div class="line">     status: &apos;0x01&apos;,</div><div class="line">     logsBloom: &apos;0xapos; &#125;,</div><div class="line">  logs: [] &#125;</div></pre></td></tr></table></figure><h2 id="运行应用"><a href="#运行应用" class="headerlink" title="运行应用"></a>运行应用</h2><p><code>npm run dev</code></p><p>登录<code>metamask</code>进行应用访问：<br><img src="/res/img/blockchain/voting-v1.png" alt=""></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/LiZoRN/BlockChain.git</div><div class="line">git checkout v1.0</div></pre></td></tr></table></figure><h1 id="投票v2版本"><a href="#投票v2版本" class="headerlink" title="投票v2版本"></a>投票v2版本</h1><p>一般在选举中，每一个选民只能投出一票给候选人。但假设你是一家公司的股东，你可能需要会有这样的要求：票数按拥有的股票数来定。</p><ul><li>项目目标</li></ul><ol><li>学习使用数据类型<code>Struct</code>用来组织和存储区块链上的数据</li><li>学习票据(tokens)的概念并应用到本项目</li></ol><h2 id="功能说明"><a href="#功能说明" class="headerlink" title="功能说明"></a>功能说明</h2><p><img src="https://cdn-images-1.medium.com/max/1200/1*3cd64RjjJiVuAFTEkw5-sA.png" alt="image"></p><ol><li>票据(tokens):表示可用于投票的总票数</li><li>每一个选民使用货币（<code>eth</code>）来购买票据用于投票</li><li>你可以查看投票信息：<ul><li>每个候选人拥有多少tokens</li><li>自己所投的token情况</li></ul></li><li>候选人不再指定，从整条链上获取。</li></ol><h2 id="智能合约"><a href="#智能合约" class="headerlink" title="智能合约"></a>智能合约</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div></pre></td><td class="code"><pre><div class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>; <span class="comment">//We have to specify what version of the compiler this code will use</span></div><div class="line"></div><div class="line">contract Voting &#123;</div><div class="line"></div><div class="line">  <span class="comment">// We use the struct datatype to store the voter information.</span></div><div class="line">  struct voter &#123;</div><div class="line">    address voterAddress; <span class="comment">// The address of the voter</span></div><div class="line">    uint tokensBought;    <span class="comment">// The total no. of tokens this voter owns</span></div><div class="line">    uint[] tokensUsedPerCandidate; <span class="comment">// Array to keep track of votes per candidate.</span></div><div class="line">    <span class="comment">/* We have an array of candidates initialized below.</span></div><div class="line"><span class="comment">     Every time this voter votes with her tokens, the value at that</span></div><div class="line"><span class="comment">     index is incremented. Example, if candidateList array declared</span></div><div class="line"><span class="comment">     below has ["Rama", "Nick", "Jose"] and this</span></div><div class="line"><span class="comment">     voter votes 10 tokens to Nick, the tokensUsedPerCandidate[1]</span></div><div class="line"><span class="comment">     will be incremented by 10.</span></div><div class="line"><span class="comment">     */</span></div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/* mapping is equivalent to an associate array or hash</span></div><div class="line"><span class="comment">   The key of the mapping is candidate name stored as type bytes32 and value is</span></div><div class="line"><span class="comment">   an unsigned integer which used to store the vote count</span></div><div class="line"><span class="comment">   */</span></div><div class="line"></div><div class="line">  mapping (<span class="function"><span class="params">address</span> =&gt;</span> voter) public voterInfo;</div><div class="line"></div><div class="line">  <span class="comment">/* Solidity doesn't let you return an array of strings yet. We will use an array of bytes32</span></div><div class="line"><span class="comment">   instead to store the list of candidates</span></div><div class="line"><span class="comment">   */</span></div><div class="line"></div><div class="line">  mapping (<span class="function"><span class="params">bytes32</span> =&gt;</span> uint) public votesReceived;</div><div class="line"></div><div class="line">  bytes32[] public candidateList;</div><div class="line"></div><div class="line">  uint public totalTokens; <span class="comment">// Total no. of tokens available for this election</span></div><div class="line">  uint public balanceTokens; <span class="comment">// Total no. of tokens still available for purchase</span></div><div class="line">  uint public tokenPrice; <span class="comment">// Price per token</span></div><div class="line"></div><div class="line">  <span class="comment">/* When the contract is deployed on the blockchain, we will initialize</span></div><div class="line"><span class="comment">   the total number of tokens for sale, cost per token and all the candidates</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Voting</span>(<span class="params">uint tokens, uint pricePerToken, bytes32[] candidateNames</span>) <span class="title">public</span> </span>&#123;</div><div class="line">    candidateList = candidateNames;</div><div class="line">    totalTokens = tokens;</div><div class="line">    balanceTokens = tokens;</div><div class="line">    tokenPrice = pricePerToken;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">totalVotesFor</span>(<span class="params">bytes32 candidate</span>) <span class="title">view</span> <span class="title">public</span> <span class="title">returns</span> (<span class="params">uint</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> votesReceived[candidate];</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/* Instead of just taking the candidate name as an argument, we now also</span></div><div class="line"><span class="comment">   require the no. of tokens this voter wants to vote for the candidate</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">voteForCandidate</span>(<span class="params">bytes32 candidate, uint votesInTokens</span>) <span class="title">public</span> </span>&#123;</div><div class="line">    uint index = indexOfCandidate(candidate);</div><div class="line">    <span class="built_in">require</span>(index != uint(<span class="number">-1</span>));</div><div class="line"></div><div class="line">    <span class="comment">// msg.sender gives us the address of the account/voter who is trying</span></div><div class="line">    <span class="comment">// to call this function</span></div><div class="line">    <span class="keyword">if</span> (voterInfo[msg.sender].tokensUsedPerCandidate.length == <span class="number">0</span>) &#123;</div><div class="line">      <span class="keyword">for</span>(uint i = <span class="number">0</span>; i &lt; candidateList.length; i++) &#123;</div><div class="line">        voterInfo[msg.sender].tokensUsedPerCandidate.push(<span class="number">0</span>);</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// Make sure this voter has enough tokens to cast the vote</span></div><div class="line">    uint availableTokens = voterInfo[msg.sender].tokensBought - totalTokensUsed(voterInfo[msg.sender].tokensUsedPerCandidate);</div><div class="line">    <span class="built_in">require</span>(availableTokens &gt;= votesInTokens);</div><div class="line"></div><div class="line">    votesReceived[candidate] += votesInTokens;</div><div class="line"></div><div class="line">    <span class="comment">// Store how many tokens were used for this candidate</span></div><div class="line">    voterInfo[msg.sender].tokensUsedPerCandidate[index] += votesInTokens;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">// Return the sum of all the tokens used by this voter.</span></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">totalTokensUsed</span>(<span class="params">uint[] _tokensUsedPerCandidate</span>) <span class="title">private</span> <span class="title">pure</span> <span class="title">returns</span> (<span class="params">uint</span>) </span>&#123;</div><div class="line">    uint totalUsedTokens = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(uint i = <span class="number">0</span>; i &lt; _tokensUsedPerCandidate.length; i++) &#123;</div><div class="line">      totalUsedTokens += _tokensUsedPerCandidate[i];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> totalUsedTokens;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">indexOfCandidate</span>(<span class="params">bytes32 candidate</span>) <span class="title">view</span> <span class="title">public</span> <span class="title">returns</span> (<span class="params">uint</span>) </span>&#123;</div><div class="line">    <span class="keyword">for</span>(uint i = <span class="number">0</span>; i &lt; candidateList.length; i++) &#123;</div><div class="line">      <span class="keyword">if</span> (candidateList[i] == candidate) &#123;</div><div class="line">        <span class="keyword">return</span> i;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> uint(<span class="number">-1</span>);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/* This function is used to purchase the tokens. Note the keyword 'payable'</span></div><div class="line"><span class="comment">   below. By just adding that one keyword to a function, your contract can</span></div><div class="line"><span class="comment">   now accept Ether from anyone who calls this function. Accepting money can</span></div><div class="line"><span class="comment">   not get any easier than this!</span></div><div class="line"><span class="comment">   */</span></div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">buy</span>(<span class="params"></span>) <span class="title">payable</span> <span class="title">public</span> <span class="title">returns</span> (<span class="params">uint</span>) </span>&#123;</div><div class="line">    uint tokensToBuy = msg.value / tokenPrice;</div><div class="line">    <span class="built_in">require</span>(tokensToBuy &lt;= balanceTokens);</div><div class="line">    voterInfo[msg.sender].voterAddress = msg.sender;</div><div class="line">    voterInfo[msg.sender].tokensBought += tokensToBuy;</div><div class="line">    balanceTokens -= tokensToBuy;</div><div class="line">    <span class="keyword">return</span> tokensToBuy;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">tokensSold</span>(<span class="params"></span>) <span class="title">view</span> <span class="title">public</span> <span class="title">returns</span> (<span class="params">uint</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> totalTokens - balanceTokens;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">voterDetails</span>(<span class="params">address user</span>) <span class="title">view</span> <span class="title">public</span> <span class="title">returns</span> (<span class="params">uint, uint[]</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> (voterInfo[user].tokensBought, voterInfo[user].tokensUsedPerCandidate);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">/* All the ether sent by voters who purchased the tokens is in this</span></div><div class="line"><span class="comment">   contract's account. This method will be used to transfer out all those ethers</span></div><div class="line"><span class="comment">   in to another account. *** The way this function is written currently, anyone can call</span></div><div class="line"><span class="comment">   this method and transfer the balance in to their account. In reality, you should add</span></div><div class="line"><span class="comment">   check to make sure only the owner of this contract can cash out.</span></div><div class="line"><span class="comment">   */</span></div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">transferTo</span>(<span class="params">address account</span>) <span class="title">public</span> </span>&#123;</div><div class="line">    account.transfer(<span class="keyword">this</span>.balance);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">allCandidates</span>(<span class="params"></span>) <span class="title">view</span> <span class="title">public</span> <span class="title">returns</span> (<span class="params">bytes32[]</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> candidateList;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>migrations/2_deploy_contracts.js<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">deployer.deploy(Voting, 1000, web3.toWei(&apos;0.1&apos;, &apos;ether&apos;), [&apos;Rama&apos;, &apos;Nick&apos;, &apos;Jose&apos;]);</div></pre></td></tr></table></figure></li></ul><p>重新部署智能合约<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">truffle compile</div><div class="line">truffle migrate --reset</div></pre></td></tr></table></figure></p><p>启动工程:<code>npm run dev</code></p><h2 id="完成代码"><a href="#完成代码" class="headerlink" title="完成代码"></a>完成代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/LiZoRN/BlockChain.git</div><div class="line">git checkout v2.0</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      以太坊DAPP：投票应用开发
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="区块链" scheme="http://zfeiyu.com/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="blockchain" scheme="http://zfeiyu.com/tags/blockchain/"/>
    
      <category term="Ethereum" scheme="http://zfeiyu.com/tags/Ethereum/"/>
    
      <category term="以太坊" scheme="http://zfeiyu.com/tags/%E4%BB%A5%E5%A4%AA%E5%9D%8A/"/>
    
  </entry>
  
  <entry>
    <title>区块链导论:以太坊（Ethereum）</title>
    <link href="http://zfeiyu.com/2018/05/22/blockchain-introduce-2/"/>
    <id>http://zfeiyu.com/2018/05/22/blockchain-introduce-2/</id>
    <published>2018-05-22T06:30:00.000Z</published>
    <updated>2018-05-26T08:55:57.973Z</updated>
    
    <content type="html"><![CDATA[<p>以太坊（Ethereum）是一个开源的有智能合约功能的公共区块链平台。通过其专用加密货币以太币（Ether）提供去中心化的虚拟机（“以太虚拟机” Ethereum Virtual Machine）来处理点对点合约。</p><p>关于以太坊（Ethereum）的概念网上有很多资料可以查询，本文只上干货，主要目的如下：</p><ol><li>搭建<code>Ethereum</code>的开发环境</li><li>熟悉Ethereum DAPP开发框架:<code>Truffle</code></li><li>Truffle DAPP开发和调试</li></ol><h1 id="以太坊开发环境搭建"><a href="#以太坊开发环境搭建" class="headerlink" title="以太坊开发环境搭建"></a>以太坊开发环境搭建</h1><p>安装区块链仿真环境(<a href="http://truffleframework.com/ganache/" target="_blank" rel="external">ganache</a>)、<code>solidity编译器</code>、<code>web3</code>、<code>truffle</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g ganache-cli solc web3 truffle</div></pre></td></tr></table></figure><h2 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h2><ul><li>Atom</li></ul><p>安装<code>linter-solidity</code>插件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ apm install linter</div><div class="line">$ apm install linter-solidity</div></pre></td></tr></table></figure><ul><li>ethereum客户端<br>这里使用<a href="https://github.com/MetaMask/metamask-extension/releases" target="_blank" rel="external">Metamask</a>,下载对应的浏览器版本，安装到浏览器的插件里。</li></ul><p>选择<code>Custom RPC</code>加入本地<code>ganche私有链</code>-“<a href="http://127.0.0.1:7545&quot;。" target="_blank" rel="external">http://127.0.0.1:7545&quot;。</a></p><h2 id="开启环境"><a href="#开启环境" class="headerlink" title="开启环境"></a>开启环境</h2><ul><li>开启仿真环境ganache</li></ul><p><img src="/res/img/blockchain/ganche.png" alt=""></p><ul><li>metamask连接私有链<br><code>Customer Rpc</code> -&gt; <code>http://127.0.0.1:7545</code><br><img src="/res/img/blockchain/metamask.png" alt=""></li></ul><h1 id="Truffle"><a href="#Truffle" class="headerlink" title="Truffle"></a>Truffle</h1><p>Truffle是一个世界级的开发环境，测试框架，以太坊的资源管理通道，致力于让以太坊上的开发变得简单，Truffle有以下功能：</p><ul><li>内置的智能合约编译，链接，部署和二进制文件的管理。</li><li>快速开发下的自动合约测试。</li><li>脚本化的，可扩展的部署与发布框架。</li><li>部署到不管多少的公网或私网的网络环境管理功能</li><li>使用EthPM&amp;NPM提供的包管理，使用ERC190标准。</li><li>与合约直接通信的直接交互控制台（写完合约就可以命令行里验证了）。</li><li>可配的构建流程，支持紧密集成。</li><li>在Truffle环境里支持执行外部的脚本。</li></ul><h2 id="Truffle-开发部署合约"><a href="#Truffle-开发部署合约" class="headerlink" title="Truffle 开发部署合约"></a>Truffle 开发部署合约</h2><ol><li>创建工程</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir fibonacci</div><div class="line">cd fibonacci</div><div class="line">truffle init</div></pre></td></tr></table></figure><p>工程目录结构如下：<br><code>app/</code> - 你的应用文件运行的默认目录。这里面包括推荐的javascript文件和css样式文件目录，但你可以完全决定如何使用这些目录。<br><code>contract/</code> - Truffle默认的合约文件存放地址。<br><code>migrations/</code> - 存放发布脚本文件<br><code>test/</code> - 用来测试应用和合约的测试文件<br><code>truffle.js</code> - Truffle的配置文件</p><ol><li>编写一个基础智能合约</li></ol><p>创建一个合约<code>contracts/Fibonacci.sol</code>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.22</span>;</div><div class="line"></div><div class="line">contract Fibonacci &#123;</div><div class="line"></div><div class="line">uint[] fibseries;</div><div class="line">  <span class="comment">// n = how many in the series to return</span></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">generateFib</span>(<span class="params">uint n</span>) <span class="title">public</span> </span>&#123;</div><div class="line">    <span class="comment">// set 1st and 2nd entries</span></div><div class="line">    fibseries.push(<span class="number">1</span>);</div><div class="line">    fibseries.push(<span class="number">1</span>);</div><div class="line">    <span class="comment">// generate subsequent entries</span></div><div class="line">    <span class="keyword">for</span> (uint i=<span class="number">2</span>; i &lt; n ; i++) &#123;</div><div class="line">      fibseries.push(fibseries[i<span class="number">-1</span>] + fibseries[i<span class="number">-2</span>]);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>generateFib</code>:生成<code>Fibonacci（斐波纳契）</code>数列，公式<code>fib(n)=fib(n-1)+fib(n-2)</code>。</p><ol><li>创建一个新的部署文件<code>migrations/2_deploy_contracts.js</code>。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Fibonacci = artifacts.require(<span class="string">"Fibonacci"</span>);</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">deployer</span>) </span>&#123;</div><div class="line">  deployer.deploy(Fibonacci);</div><div class="line">&#125;;</div></pre></td></tr></table></figure><ol><li><p>启动<code>Ganache</code></p></li><li><p>修改工程目录下的<code>truffle.js</code></p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">module.exports = &#123;</div><div class="line">  networks: &#123;</div><div class="line">    development: &#123;</div><div class="line">      host: &quot;127.0.0.1&quot;,</div><div class="line">      port: 7545,</div><div class="line">      network_id: &quot;*&quot;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><ol><li>编译并植入合约<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">truffle compile</div><div class="line">truffle migrate</div><div class="line"></div><div class="line">Using network &apos;development&apos;.</div><div class="line"></div><div class="line">Running migration: 1_initial_migration.js</div><div class="line">  Deploying Migrations...</div><div class="line">  ... 0x97f35c60501091e10315febe0d2f1d8a59cb413c38cc7c2b3538263a7c67d0bf</div><div class="line">  Migrations: 0xf7f433a4a2f9bf3f364bb96abe6a07778a61e095</div><div class="line">Saving successful migration to network...</div><div class="line">  ... 0x17b700e3a580ddd28d7bb7110c33f5a8c94b8875c99138d466f8625056a47cd9</div><div class="line">Saving artifacts...</div><div class="line">Running migration: 2_deploy_contracts.js</div><div class="line">  Deploying Fibonacci...</div><div class="line">  ... 0xd1f02be04a76df173456b48777d740f65248cd5870c4e22c058cc6f658dc2f9e</div><div class="line">  Fibonacci: 0xc9554c5818dac7e79dc398d85c4789b90618c5b7</div><div class="line">Saving successful migration to network...</div><div class="line">  ... 0xb987be952d829ca21a909e2f558abdae84cf6afe0c83c2070ab2ba8319f79672</div><div class="line">Saving artifacts...</div></pre></td></tr></table></figure></li></ol><h2 id="console-debug"><a href="#console-debug" class="headerlink" title="console debug"></a>console debug</h2><p>我们可以直接使用<a href="http://remix.ethereum.org" target="_blank" rel="external">remix ide</a>，调试非常的方便。<br>这里我们虐一下自己，使用<code>Truffle Console</code>来进行调试。</p><ol><li><p>进入console</p><p> <code>truffle console</code></p></li><li><p>调用合约</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">truffle(development)&gt; Fibonacci.deployed().then(function(instance)&#123;return instance.generateFib(10);&#125;);</div><div class="line">&#123; tx: &apos;0x0d10a3f875548131fdad0a27f916af5575fcf6ee47085e9d625d695eb2c11583&apos;,</div><div class="line">  receipt: </div><div class="line">   &#123; transactionHash: &apos;0x0d10a3f875548131fdad0a27f916af5575fcf6ee47085e9d625d695eb2c11583&apos;,</div><div class="line">     transactionIndex: 0,</div><div class="line">     blockHash: &apos;0x7596a7239811b8586a2c60a9fad19d41ea8bb3be46e8ed3b8ebbfaf4c477b707&apos;,</div><div class="line">     blockNumber: 5,</div><div class="line">     gasUsed: 298373,</div><div class="line">     cumulativeGasUsed: 298373,</div><div class="line">     contractAddress: null,</div><div class="line">     logs: [],</div><div class="line">     status: &apos;0x01&apos;,</div><div class="line">     logsBloom: &apos;0xapos; &#125;,</div><div class="line">  logs: [] &#125;</div></pre></td></tr></table></figure></li><li><p>调试<code>transaction</code></p><ol><li><p>先attache一条<code>transaction</code>，id为<code>transactionHash</code>值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">truffle(development)&gt; debug 0x0d10a3f875548131fdad0a27f916af5575fcf6ee47085e9d625d695eb2c11583</div><div class="line">Compiling ./contracts/Fibonacci.sol...</div><div class="line">Compiling ./contracts/Migrations.sol...</div><div class="line"></div><div class="line">Gathering transaction data...</div><div class="line"></div><div class="line">Addresses affected:</div><div class="line"> 0xc9554c5818dac7e79dc398d85c4789b90618c5b7 - Fibonacci</div><div class="line"></div><div class="line">Commands:</div><div class="line">(enter) last command entered (step next)</div><div class="line">(o) step over, (i) step into, (u) step out, (n) step next</div><div class="line">(;) step instruction, (p) print instruction, (h) print this help, (q) quit</div><div class="line">(b) toggle breakpoint, (c) continue until breakpoint</div><div class="line">(+) add watch expression (`+:&lt;expr&gt;`), (-) remove watch expression (-:&lt;expr&gt;)</div><div class="line">(?) list existing watch expressions</div><div class="line">(v) print variables and values, (:) evaluate expression - see `v`</div></pre></td></tr></table></figure><p>Commands即为调试命令行。</p></li><li><p>watch（<code>+:</code>）变量,按<code>n</code>逐行进行跟踪。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">debug(development:0x0d10a3f8...)&gt; +:i</div><div class="line">8</div><div class="line">debug(development:0x0d10a3f8...)&gt; +:fibseries</div><div class="line">[ 1, 1, 2, 3, 5, 8, 13, 21 ]</div><div class="line">debug(development:0x0d10a3f8...)&gt; n</div><div class="line"></div><div class="line">Fibonacci.sol:</div><div class="line"></div><div class="line">14:     // generate subsequent entries</div><div class="line">15:     for (uint i=2; i &lt; n ; i++) &#123;</div><div class="line">16:       fibseries.push(fibseries[i-1] + fibseries[i-2]);</div><div class="line">                                     ^                    </div><div class="line"></div><div class="line">:i</div><div class="line">  8</div><div class="line"></div><div class="line">:fibseries</div><div class="line">  [ 1, 1, 2, 3, 5, 8, 13, 21 ]</div></pre></td></tr></table></figure></li></ol></li><li><p>异常信息调试</p><ol><li><p>修改以下合约代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">for (uint i=1; i &lt; n ; i++) &#123;</div><div class="line">...</div></pre></td></tr></table></figure></li><li><p>重新编译部署合约</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">debug(development:0x65bb45af...)&gt; compile --all</div><div class="line"></div><div class="line">Transaction completed successfully.</div><div class="line">truffle(development)&gt; migrate --reset</div><div class="line">Compiling ./contracts/Fibonacci.sol...</div><div class="line">Writing artifacts to ./build/contracts</div><div class="line"></div><div class="line">Using network &apos;development&apos;.</div><div class="line"></div><div class="line">Running migration: 1_initial_migration.js</div><div class="line">  Replacing Migrations...</div><div class="line">  ... 0x26fdc5c20b9f44e96e537e0b8474f867d7bd7d27ad7172b004c858d2dceb6f99</div><div class="line">  Migrations: 0xd0ea55247c6035375c6e284a60946cd35550ced2</div><div class="line">Saving successful migration to network...</div><div class="line">  ... 0x0ad76d3073b05161327fc1f7dbd1c521360c305af872ff12b7f59befb73dfbd2</div><div class="line">Saving artifacts...</div><div class="line">Running migration: 2_deploy_contracts.js</div><div class="line">  Replacing Fibonacci...</div><div class="line">  ... 0x93ee91146a3a5fd23dad1e77249870c0edeb5cf6cd78cb7c9db6aab24f538634</div><div class="line">  Fibonacci: 0x090b1fd13ee19ec7f8f3175ca54d5165a443c694</div><div class="line">Saving successful migration to network...</div><div class="line">  ... 0xbeb0d613fa72c67ecf720833a4985244a91b0d0dea1c36fc23195e00e7fd8c18</div><div class="line">Saving artifacts...</div><div class="line">truffle(development)&gt; Fibonacci.deployed().then(function(instance)&#123;return instance.generateFib(10);&#125;);</div><div class="line">Error: VM Exception while processing transaction: invalid opcode</div><div class="line">    at XMLHttpRequest._onHttpResponseEnd (/home/lizorn/.nvm/versions/node/v10.0.0/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:509:1)</div><div class="line">    at XMLHttpRequest._setReadyState (/home/lizorn/.nvm/versions/node/v10.0.0/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:354:1)</div><div class="line">    at XMLHttpRequestEventTarget.dispatchEvent (/home/lizorn/.nvm/versions/node/v10.0.0/lib/node_modules/truffle/build/webpack:/~/xhr2/lib/xhr2.js:64:1)</div><div class="line">    at XMLHttpRequest.request.onreadystatechange (/home/lizorn/.nvm/versions/node/v10.0.0/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/httpprovider.js:128:1)</div><div class="line">    at /home/lizorn/.nvm/versions/node/v10.0.0/lib/node_modules/truffle/build/webpack:/~/truffle-provider/wrapper.js:134:1</div><div class="line">    at /home/lizorn/.nvm/versions/node/v10.0.0/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/requestmanager.js:86:1</div><div class="line">    at Object.InvalidResponse (/home/lizorn/.nvm/versions/node/v10.0.0/lib/node_modules/truffle/build/webpack:/~/web3/lib/web3/errors.js:38:1)</div></pre></td></tr></table></figure></li><li><p>此处由于数组越界，控制窗口并没有返回transaction的ID，我们可以通过查看<code>Ganache</code>的<code>Logs</code>，找到对应的<code>Transaction</code>，然后按之前的方式进行调试。</p></li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      以太网是区块链2.0技术，可以使用智能合约来实现多种业务场景
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="区块链" scheme="http://zfeiyu.com/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="blockchain" scheme="http://zfeiyu.com/tags/blockchain/"/>
    
      <category term="Ethereum" scheme="http://zfeiyu.com/tags/Ethereum/"/>
    
      <category term="以太坊" scheme="http://zfeiyu.com/tags/%E4%BB%A5%E5%A4%AA%E5%9D%8A/"/>
    
  </entry>
  
  <entry>
    <title>Python&amp;数据库</title>
    <link href="http://zfeiyu.com/2018/05/11/python-database-develop/"/>
    <id>http://zfeiyu.com/2018/05/11/python-database-develop/</id>
    <published>2018-05-11T08:30:00.000Z</published>
    <updated>2018-05-15T12:20:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Sql"><a href="#Sql" class="headerlink" title="Sql"></a>Sql</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>SQL是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统。</p><h2 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h2><ol><li>是一种高级的非过程化编程语言，允许用户在高层数据结构上工作。</li><li>它不要求用户指定对数据的存放方法，也不需要用户了解具体的数据存放方式。</li><li>结构化查询语言语句可以嵌套，这使它具有极大的灵活性和强大的功能。</li></ol><h2 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h2><p>SQL由六个部分组成：</p><ul><li>数据查询语言（DQL）</li><li>数据操作语言（DML）</li><li>事务处理语言（TPL）</li><li>数据控制语言（DCL）</li><li>数据定义语言（DDL）</li><li>针控制语言（CCL）</li></ul><h1 id="RMDB"><a href="#RMDB" class="headerlink" title="RMDB"></a>RMDB</h1><h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>RDBMS（关系型数据库): R, 即 “Relational” (有关系，关联的),是其中内容最丰富的部分. 数据通过 表 (table) 进行组织,每张表都是一些由 类型 (type) 相关联的 列 (column) 构成. 所有表,列及其类的类型被称为数据库的 schema (架构或模式). </p><p><code>schema</code> 通过每张表的描述信息完整刻画了数据库的结构. </p><p>比如, 一张叫做 Car 的表可能有以下一些列:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Make: a string</div><div class="line">Model: a string</div><div class="line">Year: a four-digit number; alternatively, a date</div><div class="line">Color: a string</div><div class="line">VIN(Vehicle Identification Number): a string</div></pre></td></tr></table></figure><p>在一张表中,每个单一的条目叫做一<code>行(row)</code>或者一条<code>记录(record)</code>.</p><p>为了区分每条记录, 通常会定义一个 主键 (primary key).<br>表中的主键是其中一列, 它能够唯一标识每一行. </p><blockquote><p>在表 Car 中, VIN 是一个天然的主键选择, 因为它能够保证每辆车具有唯一的标识.</p></blockquote><h2 id="Schemas"><a href="#Schemas" class="headerlink" title="Schemas"></a>Schemas</h2><p>schema , 描述了列的名字及其所包含数据的类型。它还包括了其他一些信息， 比如哪些列可以为空， 哪些列不允许有重复值， 以及其他对表中列的所有限制信息。 在任意时刻一张表只能有一个 schema, 并且 表中的所有行必须遵守 schema 的规定 。</p><p>如果在传统的关系型数据库中，因为业务的需求需要新增一些字段，就需要变更表-添加新的列，对一个大型数据库做一些改变通常并不是一件小事。DBA需要做大量的schema维护工作。</p><h2 id="Querying"><a href="#Querying" class="headerlink" title="Querying"></a>Querying</h2><p>SQL 能够让我们通过对数据库进行<code>query (查询)</code>来获取有用的信息.<br>查询简单来说, 查询就是用一个结构化语言向 RDBMS 提问,返回的行就是问题的答案. </p><p>我们可以通过在数据库上进行如下的 SQL 查询 :</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT Make, Model FROM Car;</div></pre></td></tr></table></figure><p>将SQL大致翻译成中文:</p><blockquote><p>向我展示(SELECT)表 Car(FROM) 每一行中 Make 和 Model 的值. </p></blockquote><p>查询特定的表，使用表的主键<code>VIN</code>来标示唯一的一辆车:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM Car WHERE VIN = <span class="string">'2134AFGER245267'</span></div></pre></td></tr></table></figure><h2 id="Relations"><a href="#Relations" class="headerlink" title="Relations"></a>Relations</h2><p>数据库设计三大范式：</p><ol><li>第一范式:确保每列的原子性.</li><li>第二范式:确保表中的每列都和主键相关.</li><li>确保每列都和主键列直接相关,而不是间接相关.</li></ol><p>ServiceHistory 表:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">VIN | Make | Model | Year | Color | Service Performed | Mechanic | Price | Date</div></pre></td></tr></table></figure><p>-&gt;Vehicle+ServiceHistory表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">VIN | Make | Model | Year | Color</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">VIN | Service Performed | Mechanic | Price | Date</div></pre></td></tr></table></figure><p>对两表做关联查询，如果数据库没有建立索引(indices),上面的查询就需要进行表扫描(table scan).</p><h1 id="NOSQL"><a href="#NOSQL" class="headerlink" title="NOSQL"></a>NOSQL</h1><h2 id="NOSQL数据库分类"><a href="#NOSQL数据库分类" class="headerlink" title="NOSQL数据库分类"></a>NOSQL数据库分类</h2><p>分类    Examples举例    典型应用场景    数据模型    优点    缺点</p><table><thead><tr><th>分类</th><th style="text-align:center">Examples举例</th><th style="text-align:right">典型应用场景</th><th>数据模型</th><th style="text-align:center">优点</th><th style="text-align:right">缺点</th></tr></thead><tbody><tr><td>键值</td><td style="text-align:center">Tokyo Cabinet/Tyrant, Redis, Voldemort, Oracle BDB</td><td style="text-align:right">内容缓存，主要用于处理大量数据的高访问负载，也用于一些日志系统等等。</td><td>Key 指向 Value 的键值对，通常用hash table来实现</td><td style="text-align:center">查找速度快</td><td style="text-align:right">数据无结构化，通常只被当作字符串或者二进制数据</td></tr><tr><td>列存储数据库</td><td style="text-align:center">Cassandra, HBase, Riak</td><td style="text-align:right">分布式的文件系统</td><td>以列簇式存储，将同一列数据存在一起</td><td style="text-align:center">centered</td><td style="text-align:right">$12</td></tr><tr><td>文档型数据库</td><td style="text-align:center">CouchDB, MongoDb，SequoiaDB</td><td style="text-align:right">Web应用（与Key-Value类似，Value是结构化的，不同的是数据库能够了解Value的内容）</td><td>Key-Value对应的键值对，Value为结构化数据</td><td style="text-align:center">数据结构要求不严格，表结构可变，不需要像关系型数据库一样需要预先定义表结构</td><td style="text-align:right">查询性能不高，而且缺乏统一的查询语法。</td></tr><tr><td>图形(Graph)数据库</td><td style="text-align:center">Neo4J, InfoGrid, Infinite Graph</td><td style="text-align:right">社交网络，推荐系统等。专注于构建关系图谱</td><td>图结构</td><td style="text-align:center">利用图结构相关算法。比如最短路径寻址，N度关系查找等</td><td style="text-align:right">很多时候需要对整个图做计算才能得出需要的信息，而且这种结构不太好做分布式的集群方案。</td></tr></tbody></table><h1 id="RMDB-vs-NOSQL-DB"><a href="#RMDB-vs-NOSQL-DB" class="headerlink" title="RMDB vs NOSQL-DB"></a>RMDB vs NOSQL-DB</h1><h2 id="关系型数据库"><a href="#关系型数据库" class="headerlink" title="关系型数据库"></a>关系型数据库</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ol><li>事务处理—保持数据的一致性； </li><li>由于以标准化为前提，数据更新的开销很小（相同的字段基本上只有一处）； </li><li>可以进行Join等复杂查询 <h3 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h3></li><li>扩展困难：由于存在类似Join这样多表查询机制，使得数据库在扩展方面很艰难;</li><li>读写慢：这种情况主要发生在数据量达到一定规模时由于关系型数据库的系统逻辑非常复杂，使得 其 非常容易发生死锁等的并发问题，所以导致其读写速度下滑非常严重;</li><li>成本高：企业级数据库的License价格很惊人，并且随着系统的规模，而不断上升;</li><li>有限的支撑容量：现有关系型解决方案还无法支撑Google这样海量的数据存储;</li></ol><h2 id="非关系型数据库"><a href="#非关系型数据库" class="headerlink" title="非关系型数据库"></a>非关系型数据库</h2><h3 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h3><ol><li>简单的扩展：比如Cassandra的架构类似于P2P，所以能通过轻松地添加新的节点来扩展这个集群; </li><li>快速的读写：比如Redis，由于其逻辑简单，且支持内存，使得其性能非常出色，单节点每秒可以处理超过10万次读写操作; </li><li>低廉的成本：这是大多数分布式数据库共有的特点，因为主要都是开源软件，没有昂贵的License成本;</li></ol><h3 id="缺点：-1"><a href="#缺点：-1" class="headerlink" title="缺点："></a>缺点：</h3><ol><li>不提供对SQL的支持：如果不支持SQL这样的工业标准，将会对用户产生一定的学习和应用迁移成本; </li><li>支持的特性不够丰富：现有产品所提供的功能都比较有限，大多数NoSQL数据库都不支持事务，也不像MS SQL和Oracle那样能提供各种附加功能，比如BI和报表等; </li><li>现有产品的不够成熟：大多数产品都还处于初创期，和关系型数据库几十年的完善不可同日而语;</li></ol><h1 id="主流数据库"><a href="#主流数据库" class="headerlink" title="主流数据库"></a>主流数据库</h1><p><img src="/res/img/pythondb/sql_rank.png" alt="https://db-engines.com/en/ranking"></p><h1 id="ORM"><a href="#ORM" class="headerlink" title="ORM"></a>ORM</h1><h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>orm英文全称object relational mapping,就是对象映射关系程序，简单来说我们类似python这种面向对象的程序来说一切皆对象，但是我们使用的数据库却都是关系型的，为了保证一致的使用习惯，通过orm将编程语言的对象模型和数据库的关系模型建立映射关系，这样我们在使用编程语言对数据库进行操作的时候可以直接使用编程语言的对象模型进行操作就可以了，而不用直接使用sql语言。</p><h2 id="优点：-1"><a href="#优点：-1" class="headerlink" title="优点："></a>优点：</h2><p>ORM的核心：隐藏了数据访问细节。它使得我们的通用数据库交互变得简单易行，不用熟悉SQL语句以及数据库的异构性。ORM使我们构造固化数据结构变得简单易行。</p><h2 id="缺点：-2"><a href="#缺点：-2" class="headerlink" title="缺点："></a>缺点：</h2><p>无可避免的，自动化意味着映射和关联管理，代价是牺牲性能。现在的各种ORM框架都在尝试使用各种方法来减轻这块（LazyLoad，Cache），效果还是很显著的。</p><h1 id="Python-ORM库"><a href="#Python-ORM库" class="headerlink" title="Python ORM库"></a>Python ORM库</h1><h2 id="SQAlchemy"><a href="#SQAlchemy" class="headerlink" title="SQAlchemy"></a>SQAlchemy</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pip install SQAlchemy</div><div class="line">pip install pymysql</div></pre></td></tr></table></figure><h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p><img src="/res/img/pythondb/SQAlchemy.png" alt=""></p><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Column, DateTime, String, Integer, ForeignKey, func</div><div class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> relationship, backref</div><div class="line"><span class="keyword">from</span> sqlalchemy.ext.declarative <span class="keyword">import</span> declarative_base</div><div class="line"></div><div class="line">Base = declarative_base()</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Department</span><span class="params">(Base)</span>:</span></div><div class="line">    __tablename__ = <span class="string">'department'</span></div><div class="line">    id = Column(Integer, primary_key=<span class="keyword">True</span>)</div><div class="line">    name = Column(String(<span class="number">50</span>) )</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span><span class="params">(Base)</span>:</span></div><div class="line">    __tablename__ = <span class="string">'employee'</span></div><div class="line">    id = Column(Integer, primary_key=<span class="keyword">True</span>)</div><div class="line">    name = Column(String(<span class="number">50</span>))</div><div class="line">    <span class="comment"># Use default=func.now() to set the default hiring time</span></div><div class="line">    <span class="comment"># of an Employee to be the current time when an</span></div><div class="line">    <span class="comment"># Employee record was created</span></div><div class="line">    hired_on = Column(DateTime, default=func.now())</div><div class="line">    department_id = Column(Integer, ForeignKey(<span class="string">'department.id'</span>))</div><div class="line">    <span class="comment"># Use cascade='delete,all' to propagate the deletion of a Department onto its Employees</span></div><div class="line">    department = relationship(</div><div class="line">        Department,</div><div class="line">        backref=backref(<span class="string">'employees'</span>,</div><div class="line">                        uselist=<span class="keyword">True</span>,</div><div class="line">                        cascade=<span class="string">'delete,all'</span>))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine</div><div class="line"></div><div class="line">engine = create_engine(<span class="string">'mysql+pymysql://root:root@localhost:3306/test'</span>)</div><div class="line"></div><div class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> sessionmaker</div><div class="line"></div><div class="line">session = sessionmaker()</div><div class="line">session.configure(bind=engine)</div><div class="line">Base.metadata.create_all(engine)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    <span class="comment"># # 创建session对象:</span></div><div class="line">    session = session()</div><div class="line">    <span class="comment"># 创建新User对象:</span></div><div class="line">    new_user = Employee(id=<span class="string">'5'</span>, name=<span class="string">'Bob'</span>)</div><div class="line">    <span class="comment"># 添加到session:</span></div><div class="line">    session.add(new_user)</div><div class="line">    <span class="comment"># 提交即保存到数据库:</span></div><div class="line">    session.commit()</div><div class="line">    <span class="comment"># 关闭session:</span></div><div class="line">    session.close()</div></pre></td></tr></table></figure><h1 id="练习：写一个轻量级的数据库"><a href="#练习：写一个轻量级的数据库" class="headerlink" title="练习：写一个轻量级的数据库"></a>练习：写一个轻量级的数据库</h1><h2 id="设计思路："><a href="#设计思路：" class="headerlink" title="设计思路："></a>设计思路：</h2><ol><li>一个 Python 的 dict 作为主要的数据存储</li><li>仅支持 string 类型作为键 (key)</li><li>支持存储 integer, string 和 list</li><li>简单 TCP/IP 服务器用来传递消息</li><li>一些像 INCREMENT, DELETE , APPEND 和 STATS 这样的高级命令</li></ol><h3 id="所需支持的命令行"><a href="#所需支持的命令行" class="headerlink" title="所需支持的命令行"></a>所需支持的命令行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">PUT</div><div class="line">参数： Key, Value</div><div class="line">目的： 向数据库中插入一条新的条目</div><div class="line">GET</div><div class="line">参数： Key</div><div class="line">目的： 从数据库中检索一个已存储的值</div><div class="line">PUTLIST</div><div class="line">参数： Key, Value</div><div class="line">目的： 向数据库中插入一个新的列表条目</div><div class="line">APPEND</div><div class="line">参数： Key, Value</div><div class="line">目的： 向数据库中一个已有的列表添加一个新的元素</div><div class="line">INCREMENT</div><div class="line">参数： key</div><div class="line">目的： 增长数据库的中一个整型值</div><div class="line">DELETE</div><div class="line">参数： Key</div><div class="line">目的： 从数据库中删除一个条目</div><div class="line">STATS</div><div class="line">参数： 无 (N/A)</div><div class="line">目的： 请求每个执行命令的 成功/失败 的统计信息</div></pre></td></tr></table></figure><h3 id="消息结构"><a href="#消息结构" class="headerlink" title="消息结构"></a>消息结构</h3><h4 id="请求消息"><a href="#请求消息" class="headerlink" title="请求消息"></a>请求消息</h4><p>一条 请求消息 (Request Message) 包含了一个命令（command），一个键 (key), 一个值 (value), 一个值的类型（type）. 后三个取决于消息类型，是可选项, 非必须。; 被用作是分隔符。即使并没有包含上述可选项， 但是在消息中仍然必须有三个 ; 字符。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">COMMAND; [KEY]; [VALUE]; [VALUE TYPE]</div></pre></td></tr></table></figure><ul><li><code>COMMAND</code> 是上面列表中的命令之一</li><li><code>KEY</code> 是一个可以用作数据库 key 的 string （可选）</li><li><code>VALUE</code> 是数据库中的一个 integer, list 或 string (可选)</li><li><code>list</code> 可以被表示为一个用逗号分隔的一串 string, 比如说, “red, green, blue”</li><li><code>VALUE TYPE</code> 描述了 VALUE 应该被解释为什么类型<ul><li>可能的类型值有：INT, STRING, LIST</li></ul></li></ul><h6 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&quot;PUT; foo; 1; INT&quot;</div><div class="line">&quot;GET; foo;;&quot;</div><div class="line">&quot;PUTLIST; bar; a,b,c ; LIST&quot;</div><div class="line">&quot;APPEND; bar; d; STRING&quot;</div><div class="line">&quot;GETLIST; bar; ;&quot;</div><div class="line">STATS; ;;</div><div class="line">INCREMENT; foo;;</div><div class="line">DELETE; foo;;</div></pre></td></tr></table></figure><h4 id="响应消息"><a href="#响应消息" class="headerlink" title="响应消息"></a>响应消息</h4><p>一个 响应消息 (Reponse Message) 包含了两个部分， 通过 ; 进行分隔。第一个部分总是 True|False , 它取决于所执行的命令是否成功。 第二个部分是命令消息 (command message),当出现错误时，便会显示错误信息。对于那些执行成功的命令，如果我们不想要默认的返回值（比如 PUT）, 就会出现成功的信息。 如果我们返回成功命令的值 (比如 GET), 那么第二个部分就会是自身值。</p><h5 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">True; Key [foo] set to [1]</div><div class="line">True; 1</div><div class="line">True; Key [bar] set to [[&apos;a&apos;, &apos;b&apos;, &apos;c&apos;]]</div><div class="line">True; Key [bar] had value [d] appended</div><div class="line">True; [&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;]</div><div class="line">True; &#123;&apos;PUTLIST&apos;: &#123;&apos;success&apos;: 1, &apos;error&apos;: 0&#125;, &apos;STATS&apos;: &#123;&apos;success&apos;: 0, &apos;error&apos;: 0&#125;, &apos;INCREMENT&apos;: &#123;&apos;success&apos;: 0, &apos;error&apos;: 0&#125;, &apos;GET&apos;: &#123;&apos;success&apos;: 0, &apos;error&apos;: 0&#125;, &apos;PUT&apos;: &#123;&apos;success&apos;: 0, &apos;error&apos;: 0&#125;, &apos;GETLIST&apos;: &#123;&apos;success&apos;: 1, &apos;error&apos;: 0&#125;, &apos;APPEND&apos;: &#123;&apos;success&apos;: 1, &apos;error&apos;: 0&#125;, &apos;DELETE&apos;: &#123;&apos;success&apos;: 0, &apos;error&apos;: 0&#125;&#125;</div></pre></td></tr></table></figure><h3 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding : utf-8</span></div><div class="line"><span class="keyword">import</span> socket</div><div class="line"><span class="keyword">import</span> time</div><div class="line"></div><div class="line">HOST = <span class="string">'localhost'</span></div><div class="line">PORT = <span class="number">6666</span></div><div class="line">SOCKET = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</div><div class="line"><span class="comment"># 状态字典</span></div><div class="line">STATS = &#123;</div><div class="line">    <span class="string">'PUT'</span>: &#123;</div><div class="line">        <span class="string">'success'</span>: <span class="number">0</span>,</div><div class="line">        <span class="string">'error'</span>: <span class="number">0</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">'GET'</span>: &#123;</div><div class="line">        <span class="string">'success'</span>: <span class="number">0</span>,</div><div class="line">        <span class="string">'error'</span>: <span class="number">0</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">'GETLIST'</span>: &#123;</div><div class="line">        <span class="string">'success'</span>: <span class="number">0</span>,</div><div class="line">        <span class="string">'error'</span>: <span class="number">0</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">'PUTLIST'</span>: &#123;</div><div class="line">        <span class="string">'success'</span>: <span class="number">0</span>,</div><div class="line">        <span class="string">'error'</span>: <span class="number">0</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">'INCREMENT'</span>: &#123;</div><div class="line">        <span class="string">'success'</span>: <span class="number">0</span>,</div><div class="line">        <span class="string">'error'</span>: <span class="number">0</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">'APPEND'</span>: &#123;</div><div class="line">        <span class="string">'success'</span>: <span class="number">0</span>,</div><div class="line">        <span class="string">'error'</span>: <span class="number">0</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">'DELETE'</span>: &#123;</div><div class="line">        <span class="string">'success'</span>: <span class="number">0</span>,</div><div class="line">        <span class="string">'error'</span>: <span class="number">0</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">'STATS'</span>: &#123;</div><div class="line">        <span class="string">'success'</span>: <span class="number">0</span>,</div><div class="line">        <span class="string">'error'</span>: <span class="number">0</span></div><div class="line">    &#125;,</div><div class="line">&#125;</div><div class="line"></div><div class="line">DATA = &#123;&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_message</span><span class="params">(data)</span>:</span></div><div class="line">    <span class="string">"""解析命令行，输出元组(command, key, value)."""</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        command, key, value, value_type = map(str.strip, data.strip().split(<span class="string">';'</span>))</div><div class="line">    <span class="keyword">except</span>:</div><div class="line">        <span class="keyword">return</span> <span class="string">'Invalid input! Expected: COMMAND; [KEY]; [VALUE]; [VALUE TYPE]'</span></div><div class="line">    <span class="keyword">if</span> value_type:</div><div class="line">        <span class="keyword">if</span> value_type == <span class="string">'LIST'</span>:</div><div class="line">            value = value.split(<span class="string">','</span>)</div><div class="line">        <span class="keyword">elif</span> value_type == <span class="string">'INT'</span>:</div><div class="line">            value = int(value)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        value = <span class="keyword">None</span></div><div class="line">    <span class="keyword">return</span> command, key, value</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_stats</span><span class="params">(command, success)</span>:</span></div><div class="line">    <span class="string">"""更新命令状态码"""</span></div><div class="line">    <span class="comment"># todo</span></div><div class="line">    <span class="keyword">if</span> success:</div><div class="line">        STATS[command][<span class="string">'success'</span>] += <span class="number">1</span></div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        STATS[command][<span class="string">'error'</span>] += <span class="number">1</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_put</span><span class="params">(key, value)</span>:</span></div><div class="line">    <span class="string">"""修改key，value"""</span></div><div class="line">    DATA[key] = value</div><div class="line">    <span class="keyword">return</span> (<span class="keyword">True</span>, <span class="string">'key [&#123;&#125;] set to [&#123;&#125;]'</span>.format(key, value))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_get</span><span class="params">(key)</span>:</span></div><div class="line">    <span class="string">"""根据key获取value"""</span></div><div class="line">    <span class="keyword">if</span> key <span class="keyword">not</span> <span class="keyword">in</span> DATA:</div><div class="line">        <span class="keyword">return</span> (<span class="keyword">False</span>, <span class="string">'Error: Key [&#123;&#125;] not found'</span>.format(key))</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">return</span> (<span class="keyword">True</span>, DATA[key])</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_putlist</span><span class="params">(key, value)</span>:</span></div><div class="line">    <span class="string">"""Return a tuple containing True if the command succeeded and the message</span></div><div class="line"><span class="string">    to send back to the client"""</span></div><div class="line">    <span class="keyword">return</span> handle_put(key, value)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_getlist</span><span class="params">(key)</span>:</span></div><div class="line">    <span class="string">"""Return a tuple containing True if the key contained a list and the</span></div><div class="line"><span class="string">    message to send back to the client."""</span></div><div class="line">    return_value = exists, value = handle_get(key)</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exists:</div><div class="line">        <span class="keyword">return</span> return_value</div><div class="line">    <span class="keyword">elif</span> <span class="keyword">not</span> isinstance(value, list):</div><div class="line">        <span class="keyword">return</span> (<span class="keyword">False</span>, <span class="string">'ERROR: Key [&#123;&#125;] contains non-list value ([&#123;&#125;])'</span>.format(</div><div class="line">            key, value))</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">return</span> return_value</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_increment</span><span class="params">(key)</span>:</span></div><div class="line">    <span class="string">"""Return a tuple containing True if the key's value could be incremented</span></div><div class="line"><span class="string">    and the message to send back to the client."""</span></div><div class="line">    return_value = exists, value = handle_get(key)</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exists:</div><div class="line">        <span class="keyword">return</span> return_value</div><div class="line">    <span class="keyword">elif</span> <span class="keyword">not</span> isinstance(value, int):</div><div class="line">        <span class="keyword">return</span> (<span class="keyword">False</span>, <span class="string">'ERROR: Key [&#123;&#125;] contains non-list value ([&#123;&#125;])'</span>.format(</div><div class="line">            key, value))</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        DATA[key] = value + <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> (<span class="keyword">True</span>, <span class="string">'Key [&#123;&#125;] incremented'</span>.format(key, value))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_append</span><span class="params">(key, value)</span>:</span></div><div class="line">    <span class="string">"""Return a tuple containing True if the key's value could be appended to</span></div><div class="line"><span class="string">    and the message to send back to the client."""</span></div><div class="line">    return_value = exists, list_value = handle_get(key)</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exists:</div><div class="line">        <span class="keyword">return</span> return_value</div><div class="line">    <span class="keyword">elif</span> <span class="keyword">not</span> isinstance(list_value, list):</div><div class="line">        <span class="keyword">return</span> (<span class="keyword">False</span>, <span class="string">'ERROR: Key [&#123;&#125;] contains non-list value ([&#123;&#125;])'</span>.format(</div><div class="line">            key, list_value))</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        DATA[key].append(value)</div><div class="line">        <span class="keyword">return</span> (<span class="keyword">True</span>, <span class="string">'Key [&#123;&#125;] had value [&#123;&#125;] appended'</span>.format(key, value))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_delete</span><span class="params">(key)</span>:</span></div><div class="line">    <span class="string">"""Return a tuple containing True if the key could be deleted and the</span></div><div class="line"><span class="string">    message to send back to the client."""</span></div><div class="line">    <span class="keyword">if</span> key <span class="keyword">not</span> <span class="keyword">in</span> DATA:</div><div class="line">        <span class="keyword">return</span> (</div><div class="line">            <span class="keyword">False</span>,</div><div class="line">            <span class="string">'ERROR: Key [&#123;&#125;] not found and could not be deleted.'</span>.format(key))</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">del</span> DATA[key]</div><div class="line">        <span class="keyword">return</span> (<span class="keyword">True</span>, <span class="string">'Key [&#123;&#125;] had deleted'</span>.format(key))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_stats</span><span class="params">()</span>:</span></div><div class="line">    <span class="string">"""返回状态字典."""</span></div><div class="line">    <span class="keyword">return</span> (<span class="keyword">True</span>, str(STATS))</div><div class="line"></div><div class="line"><span class="comment"># 查找表，将命令和处理命令关联</span></div><div class="line">COMMAND_HANDERS = &#123;</div><div class="line">    <span class="string">'PUT'</span>: handle_put,</div><div class="line">    <span class="string">'GET'</span>: handle_get,</div><div class="line">    <span class="string">'GETLIST'</span>: handle_getlist,</div><div class="line">    <span class="string">'PUTLIST'</span>: handle_putlist,</div><div class="line">    <span class="string">'INCREMENT'</span>: handle_increment,</div><div class="line">    <span class="string">'APPEND'</span>: handle_append,</div><div class="line">    <span class="string">'DELETE'</span>: handle_delete,</div><div class="line">    <span class="string">'STATS'</span>: handle_stats,</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="string">"""脚本主入口"""</span></div><div class="line">    SOCKET.bind((HOST, PORT))</div><div class="line">    SOCKET.listen(<span class="number">1</span>)</div><div class="line">    print(<span class="string">'Listening on &#123;&#125;'</span>.format((HOST, PORT)))</div><div class="line">    <span class="keyword">while</span> <span class="number">1</span>:</div><div class="line">        connection, address = SOCKET.accept()</div><div class="line">        print(<span class="string">'&#123;&#125; New connection from &#123;&#125;'</span>.format(</div><div class="line">            time.strftime((<span class="string">"%Y/%m/%d %H:%M:%S INFO"</span>), time.localtime()),</div><div class="line">            address))</div><div class="line">        data = connection.recv(<span class="number">4096</span>).decode()</div><div class="line">        command, key, value = parse_message(data)</div><div class="line">        <span class="keyword">if</span> command == <span class="string">'STATS'</span>:</div><div class="line">            response = handle_stats()</div><div class="line">        <span class="keyword">elif</span> command <span class="keyword">in</span> (<span class="string">'GET'</span>, <span class="string">'GETLIST'</span>, <span class="string">'INCREMENT'</span>, <span class="string">'DELETE'</span>):</div><div class="line">            response = COMMAND_HANDERS[command](key)</div><div class="line">        <span class="keyword">elif</span> command <span class="keyword">in</span> (</div><div class="line">                <span class="string">'PUT'</span>,</div><div class="line">                <span class="string">'PUTLIST'</span>,</div><div class="line">                <span class="string">'APPEND'</span>, ):</div><div class="line">            response = COMMAND_HANDERS[command](key, value)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            response = (<span class="keyword">False</span>, <span class="string">'Unknown command type &#123;&#125;'</span>.format(command))</div><div class="line">        update_stats(command, response[<span class="number">0</span>])</div><div class="line">        data = <span class="string">'&#123;&#125;;\n&#123;&#125;\n'</span>.format(response[<span class="number">0</span>], response[<span class="number">1</span>])</div><div class="line">        connection.sendall(bytearray(data, <span class="string">'utf-8'</span>))</div><div class="line">        connection.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Python DATABASE 简介
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="数据库" scheme="http://zfeiyu.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="sql" scheme="http://zfeiyu.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>区块链概述</title>
    <link href="http://zfeiyu.com/2018/05/11/blockchain-introduce-1/"/>
    <id>http://zfeiyu.com/2018/05/11/blockchain-introduce-1/</id>
    <published>2018-05-11T06:14:00.000Z</published>
    <updated>2018-05-26T08:55:57.973Z</updated>
    
    <content type="html"><![CDATA[<p>区块链不是一种新的技术，它是多种技术的结合。区块链主要解决非信任的问题，它将线下的非信任业务场景搬到链上，使用多种技术手段（分布式共识、密码学等）实现信任的价值转移。</p><h1 id="什么是区块链"><a href="#什么是区块链" class="headerlink" title="什么是区块链"></a>什么是区块链</h1><p><a href="http://zfeiyu.com/talks/blockchain/#/intro">http://zfeiyu.com/talks/blockchain/#/intro</a></p><h1 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h1><h2 id="金融服务"><a href="#金融服务" class="headerlink" title="金融服务"></a>金融服务</h2><ul><li>银行业</li><li>证券交易</li><li>众筹</li></ul><h2 id="征信权属管理"><a href="#征信权属管理" class="headerlink" title="征信权属管理"></a>征信权属管理</h2><ul><li>征信管理</li><li>权属管理</li><li>音乐版权保</li></ul><h2 id="资源共享"><a href="#资源共享" class="headerlink" title="资源共享"></a>资源共享</h2><ul><li>共享单车</li><li>社会能源共享</li><li>电商共享</li><li>大数据共享</li><li>减少共享的风险</li></ul><h2 id="贸易管理"><a href="#贸易管理" class="headerlink" title="贸易管理"></a>贸易管理</h2><ul><li>跨境贸易</li><li>物流供应链</li><li>一带一路</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>云存储</li><li>医疗</li><li>通讯软件</li><li>电子游戏</li><li>投票</li></ul><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><ul><li>Augar 全球预测系统</li><li>Slock 全球共享系统</li><li>Ujo music 音乐版权</li><li>Akasha 社交平台</li><li>Ipfs星云存储系统</li></ul><h1 id="如何鉴别区块链项目"><a href="#如何鉴别区块链项目" class="headerlink" title="如何鉴别区块链项目"></a>如何鉴别区块链项目</h1><h2 id="区块链代价"><a href="#区块链代价" class="headerlink" title="区块链代价"></a>区块链代价</h2><ul><li>计算成本</li><li>存储成本</li><li>安全成本</li><li>隐私成本</li><li>易用性成本</li></ul><h2 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h2><ul><li>有共享通用数据库的需要</li><li>流程设计的参与方存在冲突或者彼此不信任</li><li>一个数据库有多方参与或者有多个写入者</li><li>现在由受信任的第三方参与流程，托管服务、数据提供服务、发放牌照的权威以及公证人</li><li>密码学正在被适用或者应当被适用</li><li>一个商业流程的数据在整个流程中被导入许多不同的数据库</li><li>系统中的参与者受到统一的规则制约</li><li>各方的决策是透明的而不是保密的</li><li>有对客观、不可更改的历史或者对各方指定的事实的日志的需求</li><li>交易频次不超过10000次/秒</li></ul><h2 id="不适用场景"><a href="#不适用场景" class="headerlink" title="不适用场景"></a>不适用场景</h2><ul><li>业务场景涉及机密数据</li><li>业务过程存储大量的静态数据，或者数据非常大</li><li>交易规则经常变化</li><li>使用外部或者第三发方服务来收集/存储数据</li></ul><blockquote><p>伪区块链项目太多，如果无法由程序（智能合约）来解决问题的场景，一般都不适合使用区块链。</p></blockquote>]]></content>
    
    <summary type="html">
    
      区块链不是一种新的技术，它是多种技术的结合。区块链主要解决非信任的问题，它将线下的非信任业务场景搬到链上使用技术手段实现信任的价值转移。
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="区块链" scheme="http://zfeiyu.com/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="blockchain" scheme="http://zfeiyu.com/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>设计中的设计</title>
    <link href="http://zfeiyu.com/2018/04/22/the-designing-design/"/>
    <id>http://zfeiyu.com/2018/04/22/the-designing-design/</id>
    <published>2018-04-22T08:13:01.000Z</published>
    <updated>2018-04-23T11:21:55.102Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img3.doubanio.com/view/subject/l/public/s4473054.jpg" alt=""></p><p>晚上一口气看完这本书，除了书的字太小、书内大量设计插图都是包豪斯风格之外,感受到一股浓浓的日本工匠的气息。<br>作者全书都在阐述，设计是什么？</p><blockquote><p>理解一个东西不是能够定义它或者描述它，而是把这个我们认为自己已经知道的东西拿过来，让它变得未知，并激起我们对其真实性的新鲜感，从而深化我们对它的理解。</p></blockquote><p><img src="/res/img/designingdesign/tea.jpg" alt=""></p><p>我的想法就是:刚刚泡了杯茶，现在还冒着热气，但随着时间的流逝，茶的温度会趋近环境的温度，这符合热力学第二定律，也符合香农的信息论。熵的增加意味着特质的降低，而设计就是降低熵的过程。</p><p>设计让它变得简单，变得平衡，让这壶茶在快节奏的生活和科技迭代的交汇处，保留原本的味道；让它回归事物本身找到属于自己的支点。</p>]]></content>
    
    <summary type="html">
    
      熵的增加意味着特质的降低，而设计就是降低熵的过程。
    
    </summary>
    
      <category term="读书笔记" scheme="http://zfeiyu.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="设计" scheme="http://zfeiyu.com/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>静夜思</title>
    <link href="http://zfeiyu.com/2017/10/11/longing-in-the-night/"/>
    <id>http://zfeiyu.com/2017/10/11/longing-in-the-night/</id>
    <published>2017-10-11T06:28:01.000Z</published>
    <updated>2018-03-18T00:32:54.890Z</updated>
    
    <content type="html"><![CDATA[<p>名贱身轻，小口如锋，穿衣噆肤，娇声夜摆迷魂阵。</p><p>潜侵鸣镝，夜不能寐，惊回千里梦，已三更。 </p><p>独自觅蚊影，虫廖廖，窗外雨如雷。 </p><p>凭栏看落花，人悄悄，决眦入归鸟。</p><p>闲来垂钓碧溪上，又挂云帆济沧海。</p><p>欲渡黄河冰塞川，多岐路。</p><p>小憩涼窗梦惊觉，幽幽回首听叹息。</p>]]></content>
    
    <summary type="html">
    
      名贱身轻，小口如锋，穿衣噆肤，娇声夜摆迷魂阵。
    
    </summary>
    
      <category term="码农的秘密花园" scheme="http://zfeiyu.com/categories/%E7%A0%81%E5%86%9C%E7%9A%84%E7%A7%98%E5%AF%86%E8%8A%B1%E5%9B%AD/"/>
    
    
      <category term="诗歌" scheme="http://zfeiyu.com/tags/%E8%AF%97%E6%AD%8C/"/>
    
  </entry>
  
  <entry>
    <title>hadoop实战(二)</title>
    <link href="http://zfeiyu.com/2017/06/01/hadoop-in-action-2/"/>
    <id>http://zfeiyu.com/2017/06/01/hadoop-in-action-2/</id>
    <published>2017-06-01T09:30:01.000Z</published>
    <updated>2017-09-30T10:52:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WordCount统计词频"><a href="#WordCount统计词频" class="headerlink" title="WordCount统计词频"></a>WordCount统计词频</h1><h2 id="MapReduce实现"><a href="#MapReduce实现" class="headerlink" title="MapReduce实现"></a>MapReduce实现</h2><h3 id="WordCount-java源码"><a href="#WordCount-java源码" class="headerlink" title="WordCount.java源码"></a>WordCount.java源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">import java.io.IOException;</div><div class="line">import java.util.StringTokenizer;</div><div class="line">import org.apache.hadoop.conf.Configuration;</div><div class="line">import org.apache.hadoop.fs.Path;</div><div class="line">import org.apache.hadoop.io.IntWritable;</div><div class="line">import org.apache.hadoop.io.Text;</div><div class="line">import org.apache.hadoop.mapreduce.Job;</div><div class="line">import org.apache.hadoop.mapreduce.Mapper;</div><div class="line">import org.apache.hadoop.mapreduce.Reducer;</div><div class="line">import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</div><div class="line">import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</div><div class="line">public class WordCount &#123;</div><div class="line">  public static class TokenizerMapper extends Mapper&lt;Object, Text, Text, IntWritable&gt;&#123;</div><div class="line">    private final static IntWritable one = new IntWritable(1);</div><div class="line">    private Text word = new Text();</div><div class="line">    public void map(Object key, Text value, Context context) throws IOException, InterruptedException &#123;</div><div class="line">      StringTokenizer itr = new StringTokenizer(value.toString());</div><div class="line">      while (itr.hasMoreTokens()) &#123;</div><div class="line">        word.set(itr.nextToken());</div><div class="line">        context.write(word, one);</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  public static class IntSumReducer extends Reducer&lt;Text,IntWritable,Text,IntWritable&gt; &#123;</div><div class="line">    private IntWritable result = new IntWritable();</div><div class="line">    public void reduce(Text key, Iterable&lt;IntWritable&gt; values,</div><div class="line">                        Context context) throws IOException, InterruptedException &#123;</div><div class="line">        int sum = 0;</div><div class="line">        for (IntWritable val : values) &#123;</div><div class="line">          sum += val.get();</div><div class="line">        &#125;</div><div class="line">        result.set(sum);</div><div class="line">        context.write(key, result);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  public static void main(String[] args) throws Exception &#123;</div><div class="line">    Configuration conf = new Configuration();</div><div class="line">    Job job = Job.getInstance(conf, &quot;word count&quot;);</div><div class="line">    job.setJarByClass(WordCount.class);</div><div class="line">    job.setMapperClass(TokenizerMapper.class);</div><div class="line">    job.setCombinerClass(IntSumReducer.class);</div><div class="line">    job.setReducerClass(IntSumReducer.class);</div><div class="line">    job.setOutputKeyClass(Text.class);</div><div class="line">    job.setOutputValueClass(IntWritable.class);</div><div class="line">    FileInputFormat.addInputPath(job, new Path(args[0]));</div><div class="line">    FileOutputFormat.setOutputPath(job, new Path(args[1]));</div><div class="line">    System.exit(job.waitForCompletion(true) ? 0 : 1);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hadoop com.sun.tools.javac.Main WordCount.java</div><div class="line">jar cf wc.jar WordCount*.class</div></pre></td></tr></table></figure><h3 id="创建DFS"><a href="#创建DFS" class="headerlink" title="创建DFS"></a>创建DFS</h3><p>在hdfs上的用户目录下创建输入/输出文件的文件夹.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hadoop fs -mkdir -p /user/&#123;whoami&#125;/wordcount/input</div></pre></td></tr></table></figure><p>下本书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir -p ~/tmp/book/</div><div class="line">cd ~/tmp/book</div><div class="line">wget http://www.gutenberg.org/files/5000/5000-8.txt</div></pre></td></tr></table></figure><p>将书放到HDFS上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hadoop fs -put ~/tmp/book/*.txt /user/$&#123;whoami&#125;/wordcount/input</div></pre></td></tr></table></figure><h3 id="执行MapReduce"><a href="#执行MapReduce" class="headerlink" title="执行MapReduce"></a>执行MapReduce</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hadoop jar wc.jar WordCount /user/$&#123;whoami&#125;/wordcount/input /user/$&#123;whoami&#125;/wordcount/output</div></pre></td></tr></table></figure><p>查看解析内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hadoop fs -cat /user/$&#123;whoami&#125;/wordcount/output/part-r-00000</div></pre></td></tr></table></figure></p><h2 id="HadoopStreaming实现"><a href="#HadoopStreaming实现" class="headerlink" title="HadoopStreaming实现"></a>HadoopStreaming实现</h2><p>Hadoop是使用Java语言编写的,所以最直接的方式的就是使用Java语言来实现Mapper和Reducer,然后配置MapReduce Job,提交到集群计算环境来完成计算.<br>hadoop也为其它语言，如C++、Shell、Python、 Ruby、PHP、Perl等提供了支持，这个工具就是Hadoop Streaming.</p><h3 id="wordcount的python实现"><a href="#wordcount的python实现" class="headerlink" title="wordcount的python实现"></a>wordcount的python实现</h3><p>mapper.py源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python</div><div class="line">import sys</div><div class="line">def read_input(file):</div><div class="line">    for line in file:</div><div class="line">        yield line.split()</div><div class="line">def main(separator=&apos;\t&apos;):</div><div class="line">    data = read_input(sys.stdin)</div><div class="line">    for words in data:</div><div class="line">        for word in words:</div><div class="line">            print &quot;%s%s%d&quot; % (word, separator, 1)</div><div class="line">if __name__ == &quot;__main__&quot;:</div><div class="line">    main()</div></pre></td></tr></table></figure><p>reducer.py</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python</div><div class="line">from operator import itemgetter</div><div class="line">from itertools import groupby</div><div class="line">import sys</div><div class="line">def read_mapper_output(file, separator = &apos;\t&apos;):</div><div class="line">    for line in file:</div><div class="line">        yield line.rstrip().split(separator, 1)</div><div class="line">def main(separator = &apos;\t&apos;):</div><div class="line">    data = read_mapper_output(sys.stdin, separator = separator)</div><div class="line">    for current_word, group in groupby(data, itemgetter(0)):</div><div class="line">        try:</div><div class="line">            total_count = sum(int(count) for current_word, count in group)</div><div class="line">            print &quot;%s%s%d&quot; % (current_word, separator, total_count)</div><div class="line">        except valueError:</div><div class="line">            pass</div><div class="line">if __name__ == &quot;__main__&quot;:</div><div class="line">    main()</div></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>可以写个sh脚本运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">hadoop jar $STREAM  \</div><div class="line">-files ./mapper.py,./reducer.py \</div><div class="line">-mapper ./mapper.py \</div><div class="line">-reducer ./reducer.py \</div><div class="line">-input /user/$&#123;whoami&#125;/wordcount/input/ \</div><div class="line">-output ~/output</div></pre></td></tr></table></figure></p><h2 id="Spark实现"><a href="#Spark实现" class="headerlink" title="Spark实现"></a>Spark实现</h2><p>运行spark的python交互式控制台,pyspark.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">hadoop@4532e4bdaa51:~$ pyspark</div><div class="line">Python 2.7.6 (default, Jun 22 2015, 17:58:13)</div><div class="line">[GCC 4.8.2] on linux2</div><div class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</div><div class="line">Using Spark&apos;s default log4j profile: org/apache/spark/log4j-defaults.properties</div><div class="line">Setting default log level to &quot;WARN&quot;.</div><div class="line">To adjust logging level use sc.setLogLevel(newLevel).</div><div class="line">16/10/28 02:10:51 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</div><div class="line">Welcome to</div><div class="line">      ____              __</div><div class="line">     / __/__  ___ _____/ /__</div><div class="line">    _\ \/ _ \/ _ `/ __/  &apos;_/</div><div class="line">   /__ / .__/\_,_/_/ /_/\_\   version 2.0.1</div><div class="line">      /_/</div><div class="line">Using Python version 2.7.6 (default, Jun 22 2015 17:58:13)</div><div class="line">SparkSession available as &apos;spark&apos;.</div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure><p>使用textFile加载文本到RDD,进行’wordcount’.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; text = sc.textFile(&quot;hdfs://localhost:9000/user/$&#123;whoami&#125;/wordcount/input&quot;)</div><div class="line">&gt;&gt;&gt; counts = text.flatMap(lambda line: line.split(&quot; &quot;)).map(lambda word: (word,1)).reduceByKey(lambda x,y: x + y)</div></pre></td></tr></table></figure><p>调用saveAsTextFile,分布式作业开始…</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">counts.saveAsTextFile(&quot;hdfs://localhost:9000/wordcount/spark_out&quot;)</div></pre></td></tr></table></figure><p>可以在工作台输出目录里查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">hadoop fs -cat  hdfs://localhost:9000/wordcount/spark_out/part-00000</div><div class="line">...</div><div class="line">(u&apos;Well&apos;, 1)</div><div class="line">(u&apos;roar,&apos;, 1)</div><div class="line">(u&apos;Lust&apos;, 1)</div><div class="line">(u&apos;up-side-down&apos;, 1)</div><div class="line">(u&apos;sozza&apos;, 1)</div><div class="line">(u&apos;primus&apos;, 1)</div><div class="line">(u&apos;expands&apos;, 1)</div><div class="line">...</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      hadoop应用实例
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="大数据" scheme="http://zfeiyu.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="hadoop" scheme="http://zfeiyu.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>数据平台构建思路</title>
    <link href="http://zfeiyu.com/2017/05/23/how-to-build-data-platform/"/>
    <id>http://zfeiyu.com/2017/05/23/how-to-build-data-platform/</id>
    <published>2017-05-23T07:50:48.000Z</published>
    <updated>2017-05-24T08:43:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>构建大数据平台思路，企业如何大数据化？</p><h1 id="全面数据化"><a href="#全面数据化" class="headerlink" title="全面数据化"></a>全面数据化</h1><ol><li>数据化是一个政/企能够通过深入数据分析，实现自身优化的基础。</li><li>政/企采集并存储政务/生产经营中的一切数据，形成自己的数据资产。</li></ol><h1 id="整理数据资源、建立数据标准、形成管理规范"><a href="#整理数据资源、建立数据标准、形成管理规范" class="headerlink" title="整理数据资源、建立数据标准、形成管理规范"></a>整理数据资源、建立数据标准、形成管理规范</h1><ol><li>通过自顶向下的方式，成立数据委员会。了解数据资源的整体情况并建立数据资源情况更新的流程和规范</li><li>数据资源最基本的呈现方式是一个数据目录。企业管理团队至少应该掌握到3级目录，技术团队掌握到4级目录。</li></ol><h2 id="（范例）某集团数据资源管理办法"><a href="#（范例）某集团数据资源管理办法" class="headerlink" title="（范例）某集团数据资源管理办法"></a>（范例）某集团数据资源管理办法</h2><h3 id="第一章-总-则"><a href="#第一章-总-则" class="headerlink" title="第一章  总 则"></a>第一章  总 则</h3><ul><li>第一条  为适应集团信息化发展要求,充分利用数据资源为生产、经营、管理和决策服务，保证各类信息合理、有序流动和信息安全，确保集团信息化建设快速协调有序安全发展，根据国家有关法律法规以及《集团信息安全管理办法》（中平〔2013〕188号）、等规定，特制定本管理办法。</li><li>第二条  本办法适用于集团各职能部室，直属和特设机构、专业化公司、事业部、区域公司及其所属各单位（以下简称各单位）。</li></ul><h3 id="第二章-管理范围"><a href="#第二章-管理范围" class="headerlink" title="第二章  管理范围"></a>第二章  管理范围</h3><ul><li>第三条  本办法管理范围包括：各单位与生产、经营、办公、安全等相关的应用系统和数据，以及为其提供支撑的基础设施资源、计算存储资源和办公终端资源等。</li></ul><h3 id="第三章-组织机构和工作机制"><a href="#第三章-组织机构和工作机制" class="headerlink" title="第三章  组织机构和工作机制"></a>第三章  组织机构和工作机制</h3><ul><li>第四条  集团信息化领导小组是集团数据资源管理体系的最高层，负责审定集团有关数据资源管理的规章、制度、办法，负责审核有关标准、规范、重要需求等。集团信息化领导小组办公室（以下简称集团信息办）负责集团数据管理的监督、检查和考核，指导集团数据管理工作，查处危害集团数据安全的事件。各单位负责本单位数据的采集、传输、使用、安防、备份等管理工作。中国平煤神马集团平顶山信息通信技术开发公司（以下简称信通公司）作为技术支撑及运维部门，负责集团数据中心的运维和运营工作。</li></ul><h3 id="第四章-数据分级管理"><a href="#第四章-数据分级管理" class="headerlink" title="第四章  数据分级管理"></a>第四章  数据分级管理</h3><ul><li>第五条  根据数据在生产、经营和管理中的重要性，结合有关保密规定，按照集团级应用系统和数据、厂矿级应用系统和数据、区队（车间）级应用系统和数据分别制定管理标准。</li><li>第六条  集团级应用系统和数据，技术管理由集团信息办负责，业务管理由相关业务处室负责，运维管理由信通公司负责。厂矿级应用系统和数据由各单位信息管理部门管理，集团需要利用的管理数据和生产数据要同步上传到集团数据中心。区队（车间）级应用系统和数据由各单位信息管理部门管理和维护。</li></ul><h3 id="第五章-数据标准管理"><a href="#第五章-数据标准管理" class="headerlink" title="第五章  数据标准管理"></a>第五章  数据标准管理</h3><ul><li><p>第七条  集团信息办负责集团数据编码和接口标准的统一规划和标准制定，负责对集团及各单位应用系统的数据标准管理进行引导和考核。各单位新建应用系统应严格执行集团下发的数据编码和接口标准，在用应用系统应根据自身实际逐步按照集团标准进行完善。</p></li><li><p>第八条  数据编码和接口标准应符合以下要求：</p><ol><li>数据编码应能够保证同一个对象编码的唯一性及上下游管理规范的一致性；</li><li>接口应实现对外部系统的接入提供企业级的支持，在系统的高并发和大容量的基础上提供安全可靠的接入；</li><li>提供完善的数据安全机制，以实现对数据的全面保护，保证系统的正常运行，防止大量访问，以及大量占用资源的情况发生，保证系统的健壮性；</li><li>提供有效的系统可监控机制，使得接口的运行情况可监控，便于及时发现错误并排除故障；</li><li>保证在充分利用系统资源的前提下，实现系统平滑的移植和扩展，同时在系统并发增加时提供系统资源的动态扩展，以保证系统的稳定性；</li><li>在进行扩容、新业务扩展时，应能提供快速、方便和准确的实现方式。</li></ol></li></ul><h3 id="第六章-数据资源管理"><a href="#第六章-数据资源管理" class="headerlink" title="第六章  数据资源管理"></a>第六章  数据资源管理</h3><ul><li><p>第九条  基础设施资源集中管理。为了避免信息机房等基础设施资源重复投资建设，造成资金浪费、设施利用率低等问题，各单位应充分利用集团数据中心资源，集团信息办负责统一协调集团及各单位的基础设施资源。</p><ol><li>各单位未经集团批准不得私自新建、改建、扩建信息机房。</li><li>集团数据中心要按照《集团机房建设技术规范》建设，满足各单位应用系统及数据统一到集团数据中心所需的各项使用要求。</li><li>各单位现有机房自行管理、统一管控。各级信息管理部门作为主要责任部门，要保证信息机房各项运行指标达到集团要求。</li></ol></li><li><p>第十条  计算存储资源集中管理。为了消除“信息孤岛”，实现集团数据共享和集成，提升数据安全防护等级，各单位所需计算和存储资源，要统一使用集团数据中心的云计算资源，做到资源集中、高效利用。</p><ol><li>现有的集团级应用系统及数据（安全监测系统除外）、各单位应用系统及数据（直接用于生产安全、自动化控制和监测监控的系统除外）要按照在用服务器、存储的服务年限和系统生命周期科学制定迁移到集团数据中心的计划和方案，并报集团信息办批准后实施。</li><li>新建应用系统原则上不再购置新的服务器和存储，所需计算和存储资源应使用集团数据中心的云计算资源。各单位如有特殊生产要求，确需购置服务器或存储的，需报请集团领导批准，由集团信息办备案后，按集团采购管理相关规定执行。</li><li>对于当前集团网络不具备实施条件的单位，可向集团提出申请建设集团区域性数据分中心，并根据建设进度制定应用系统和数据迁移计划。集团区域性数据分中心建成后，新建系统需要集中部署、分级管理。</li></ol></li><li><p>第十一条  办公终端资源集中管理。为了提高办公效率、降低办公成本、实现节能降耗，集团级应用系统要统一使用集团数据中心云桌面，并在厂矿和区队（车间）级应用系统中逐步实现全面使用。</p><ol><li>各单位新建系统所需计算机和新增办公用计算机要使用集团数据中心云桌面。</li><li>原有集团推广的应用系统所使用的计算机，以及各单位在用的计算机，分别由应用系统主管部门和各单位按年度提出云桌面更换计划，逐步完成云桌面更换工作；集团信息办负责协调和监督。</li><li>各单位申请云桌面使用，应与信通公司签订租用协议，由信通公司负责云桌面运维，各单位信息管理部门负责本单位云桌面管理。</li><li>对于当前集团网络不具备实施云桌面替换条件的单位，应协同集团相关部门接入集团网络或建设集团区域性数据分中心。在网络接入后或集团区域性数据分中心建成后，按计划完成云桌面的部署工作。</li></ol></li><li>第十二条  各单位使用资源应按集团规定支付相关费用。</li></ul><h3 id="第七章-数据分析管理"><a href="#第七章-数据分析管理" class="headerlink" title="第七章  数据分析管理"></a>第七章  数据分析管理</h3><ul><li>第十三条  数据分析是采取科学合理的方法，利用现代信息技术手段，对计算机应用系统生成的数据进行分析，充分发掘数据中蕴涵的信息，用数据描述现状，预测趋势，规范生产行为，优化管理流程，加强经营监管，提供决策支持。</li><li>第十四条 集团信息化领导小组应加强对各单位数据分析的指导，鼓励各单位结合自身实际，充分利用“大数据”技术，自行组织开发业务选题和数据模型，组织经验交流，提高分析水平。集团信息办要做好数据分析引导和管理工作，为集团安全生产、经营管理工作服务。基层各单位要充分挖掘和利用现有数据资源，不断探索和创新数据分析方法，规范数据分析程序，提高数据分析质量，做好本单位各项应用的数据分析工作。</li><li>第十五条  集团级数据分析、处室级数据分析和厂矿级数据分析分别由集团信息办、相关业务处室和各基层单位负责策划和实施，集团信息化领导小组负责监督和考核。</li></ul><h3 id="第八章-数据应用管理"><a href="#第八章-数据应用管理" class="headerlink" title="第八章  数据应用管理"></a>第八章  数据应用管理</h3><ul><li>第十六条  数据应用是指利用数据分析的成果，查找存在问题，开展业务运转状况评估，提出改进措施，提高管理水平，规避管理风险。</li><li>第十七条  各级信息管理部门应加强数据应用。集团信息办负责代表集团对各单位以及单位之间数据共享应用的统一规划并制定标准。各单位要严格按部门、按层级落实数据应用工作，对数据进行科学统计、分析、挖掘和应用，为各级领导决策提供依据。</li></ul><h3 id="第九章-数据安全管理"><a href="#第九章-数据安全管理" class="headerlink" title="第九章 数据安全管理"></a>第九章 数据安全管理</h3><ul><li>第十八条  各级信息管理部门应建立数据安全管理制度及相关措施，主要包括：数据访问的身份验证、权限管理及数据的加密、保密、日志管理、网络安全、容灾备份等。</li><li>第十九条  为统一规范操作权限，各单位应明确工作人员的录入权限、访问权限及维护权限的管理部门，任何人不得擅自设立、变更和注销。</li><li>第二十条  各级信息管理部门要指定专人负责系统数据及介质资料的安全管理工作。要加强数据库的安全管理，制定和明确管理员用户和数据查询用户的操作权限及规程。</li><li>第二十一条  对数据的各项操作至少要建立运行日志，严格监控操作过程，对发现的数据安全问题，要及时处理和上报。管理员应掌握和运用数据库访问审计技术，实现对数据库操作的监测和追溯。</li><li>第二十二条  各级信息管理部门要加强用户身份验证管理、网络安全管理，采取严格措施,做好计算机病毒的预防、检测、清除工作，建立针对网络攻击的防范措施，保证数据传输和存储安全。</li><li>第二十三条  各级信息管理部门要加强数据的容灾备份工作，建立数据容灾备份机制，保障系统应急恢复和数据溯源。重要数据要上传至集团数据中心备份。</li></ul><p>###第十章  附  则</p><ul><li>第二十四条  本办法解释权归集团。</li><li>第二十五条  本办法自本文印发之日起执行。</li></ul><h1 id="建设数据管理平台"><a href="#建设数据管理平台" class="headerlink" title="建设数据管理平台"></a>建设数据管理平台</h1><ol><li>数据管理平台要为政/企量身定做一套数据组织和管理的解决方案。特别是各部门之间数据的共融共通，以及企业数据怎么样进行索引和关联。</li><li>其次，数据管理平台是由业务所引导的，要为业务提供直接的支撑。</li><li>最后，数据管理平台的建设要量体裁衣，建设未必一次到位，但强调鲁棒性和可扩展性。</li></ol><h2 id="数据资源目录和资源交换管理"><a href="#数据资源目录和资源交换管理" class="headerlink" title="数据资源目录和资源交换管理"></a>数据资源目录和资源交换管理</h2><p>数据资源目录管理是实现政务信息资源共享交换、数据整合和大数据应用的桥梁和基础设施，是提高数据治理、数据管理能力和提高信息标准化服务水平的重要技术手段。</p><h3 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h3><ul><li>符合国家信息资源目录体系及元数据标准，按照统一的标准规范实现对政务信息资源的梳理、元数据采集、描述、编目、分类目录管理和可视化应用展现; </li><li>系统支持手工录入及在线连接梳理各种类型的数据资源，包括各种异构关系型数据厍、NoSQL数据库和大数据平台(HBase、Hive、MongoDB等)、以及各种格式化文件如 XML、Jason、CSV、TXT、Excel等资源类型的梳理，为分散异构的政务信息资源提供统一的梳理、元数据管理、目录管理，并提供分类导航、资源搜索和定位等应用服务功能</li></ul><h3 id="厂商"><a href="#厂商" class="headerlink" title="厂商"></a>厂商</h3><ul><li><a href="http://www.synball.com/product/pro/" target="_blank" rel="external">synball</a></li><li><a href="http://www.estarcom.com.cn/pages/main/product2.html" target="_blank" rel="external">易达讯</a></li></ul><h1 id="具备海量数据的深入分析能力"><a href="#具备海量数据的深入分析能力" class="headerlink" title="具备海量数据的深入分析能力"></a>具备海量数据的深入分析能力</h1><p>建立针对多元异构、跨域关联的海量数据，通过深度分析挖掘获取价值的能力，关键需要具备以下的几点能力。</p><ol><li>结构化数据的分析处理能力。</li><li>非结构化数据的分析处理能力。</li><li>大数据下的机器学习能力。</li></ol><h2 id="支持作业类型"><a href="#支持作业类型" class="headerlink" title="支持作业类型"></a>支持作业类型</h2><ul><li>ETL：kettle，Sqoop，flume作业管理。</li><li>MapReduce：离线处理作业。</li><li>Hive：关系型分析查询作业。</li><li>Pig：数据清洗，ETL 等脚本作业。</li><li>Spark Streaming：基于 Spark 的在线/流式 作业。</li><li>Spark MLlib：基于 Spark 的机器学习作业。</li><li>Spark GraphX：基于 Spark 的图处理作业。</li><li>Spark SQL：基于 Spark 的数据科学交互式作业。<h2 id="作业管理"><a href="#作业管理" class="headerlink" title="作业管理"></a>作业管理</h2></li><li>作业（Hadoop/Spark/Hive/Pig）可任意组合成执行计划。</li><li>执行计划可分为立即执行和定时周期执行。</li><li>对作业和任务状况进行监控。<h2 id="自动化部署"><a href="#自动化部署" class="headerlink" title="自动化部署"></a>自动化部署</h2></li><li>根据业务量的上升可对集群动态扩容。</li><li>自由选择开源大数据生态软件组合和版本，包括 Hadoop 和 Spark。<h2 id="数据挖掘管理"><a href="#数据挖掘管理" class="headerlink" title="数据挖掘管理"></a>数据挖掘管理</h2></li><li>可选择统一数据仓库,封装为统计数据对外开放。</li><li>可执行数据挖掘脚本对平台内的制定范围数据进行分析和挖掘。</li></ul><h1 id="建立外部数据的战略储备"><a href="#建立外部数据的战略储备" class="headerlink" title="建立外部数据的战略储备"></a>建立外部数据的战略储备</h1><p>架构需要实际业务来验证。政企除了自身的数据之外，需要引入外部的数据来比对，样本的多样化有助于进一步分析和挖掘现有的数据。</p><ol><li>持续建立自己的外部数据战略储备。<ul><li>如<a href="http://newhouse.cnnbfdc.com/" target="_blank" rel="external">宁波市楼盘数据</a></li><li><a href="http://www.szjs.gov.cn/csml/rsc/xxgk/jgzn/jggk/?cid=51449" target="_blank" rel="external">深证市住房和建设局开放数据</a></li><li><a href="http://www.bjjs.gov.cn/bjjs/xxgk/index.shtml" target="_blank" rel="external">北京住房和城乡建设委员会</a></li></ul></li><li>自建具备采集、清洗、存储和索引等功能的自动化系统，自动累计外部数据。<ul><li>爬虫框架，<a href="https://github.com/LiZoRN/Charlotte" target="_blank" rel="external">Charlotte</a>.</li></ul></li><li>通过和数据供应商合作，获得一些数据。<ul><li><a href="http://www.datatang.com/data/shopping-mall.html" target="_blank" rel="external">数据堂</a></li></ul></li></ol><h2 id="推动自身数据的开放与分享"><a href="#推动自身数据的开放与分享" class="headerlink" title="推动自身数据的开放与分享"></a>推动自身数据的开放与分享</h2><ol><li>有了大量数据和一定的分析能力后，不故步自封充分借助社会的力量，尽最大可能发挥数据潜藏的价值。</li><li>通过数据开放计划，可以学习先进的算法和最具创新的数据应用思路实现自身数据的价值最大化。</li></ol><h1 id="数据产业的战略投资布局"><a href="#数据产业的战略投资布局" class="headerlink" title="数据产业的战略投资布局"></a>数据产业的战略投资布局</h1><h2 id="产业集成。"><a href="#产业集成。" class="headerlink" title="产业集成。"></a>产业集成。</h2><p>todo</p><h2 id="技术集成。"><a href="#技术集成。" class="headerlink" title="技术集成。"></a>技术集成。</h2><p>todo</p>]]></content>
    
    <summary type="html">
    
      如果给我5个系数，我可以画出一个大象；如果给我第6个系数，大象可以跳舞。
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="大数据" scheme="http://zfeiyu.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="hadoop" scheme="http://zfeiyu.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>hadoop实战(一)</title>
    <link href="http://zfeiyu.com/2017/05/22/hadoop-in-action-1/"/>
    <id>http://zfeiyu.com/2017/05/22/hadoop-in-action-1/</id>
    <published>2017-05-22T04:53:48.000Z</published>
    <updated>2017-06-03T03:12:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker形式的Hadoop"><a href="#Docker形式的Hadoop" class="headerlink" title="Docker形式的Hadoop"></a><a href="http://zfeiyu.com/2016/10/27/hadoop-quick-start/">Docker形式的Hadoop</a></h1><h1 id="Hadoop环境搭建"><a href="#Hadoop环境搭建" class="headerlink" title="Hadoop环境搭建"></a>Hadoop环境搭建</h1><h2 id="创建hadoop用户"><a href="#创建hadoop用户" class="headerlink" title="创建hadoop用户"></a>创建hadoop用户</h2><p>增加hadoop用户，授予管理员权限，并登录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sudo useradd -m hadoop</div><div class="line">$ sudo passwd hadoop</div><div class="line">$ sudo adduser hadoop sudo</div><div class="line">$ sudo su hadoop</div></pre></td></tr></table></figure><h2 id="安装配置SSH"><a href="#安装配置SSH" class="headerlink" title="安装配置SSH"></a>安装配置SSH</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install openssh-server</div><div class="line">$ sudo /etc/init.d/ssh start</div></pre></td></tr></table></figure><p>设置免密码登录，生成私钥和公钥,并将公钥追加到 authorized_keys中，它为用户保存所有允许登录到ssh客户端用户的公钥内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -P &quot;&quot;</div><div class="line">$  cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</div><div class="line">$  chmod 0600 ~/.ssh/authorized_keys</div></pre></td></tr></table></figure><p>在SSH安装之后，对SSH进行测试<code>$ssh localhost</code></p><h2 id="安装Hadhoop"><a href="#安装Hadhoop" class="headerlink" title="安装Hadhoop"></a>安装Hadhoop</h2><h3 id="安装Java环境"><a href="#安装Java环境" class="headerlink" title="安装Java环境"></a>安装Java环境</h3><p><code>sudo apt-get install openjdk-7-jdk</code></p><p>配置 JAVA_HOME， 获取java安装目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">hadoop@78dd25fb63f7:/usr/local/hadoop$ update-alternatives --config java</div><div class="line">There is only one alternative in link group java (providing /usr/bin/java): /usr</div><div class="line">/lib/jvm/java-7-openjdk-amd64/jre/bin/java</div><div class="line">Nothing to configure.</div><div class="line">hadoop@78dd25fb63f7:/usr/local/hadoop$</div></pre></td></tr></table></figure><p>配置环境变量<code>$ emacs ~/.bashrc</code>并export JAVA_HOME=JDK安装路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ source ~/.bashrc</div></pre></td></tr></table></figure><h2 id="安装Hadoop2-7"><a href="#安装Hadoop2-7" class="headerlink" title="安装Hadoop2.7"></a>安装Hadoop2.7</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">wget http://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-2.7.3/hadoop-2.7.3.tar.gz</div><div class="line"></div><div class="line">sudo tar xzf hadoop-2.7.3.tar.gz</div><div class="line">sudo mv hadoop-2.7.3 /usr/local/hadoop</div><div class="line">sudo chmod 777 /usr/local/hadoop</div><div class="line">update-alternatives --config java</div></pre></td></tr></table></figure><p>添加以下环境变量:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">#HADOOP VARIABLES START</div><div class="line"></div><div class="line">export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64</div><div class="line"></div><div class="line">export HADOOP_HOME=/usr/local/hadoop</div><div class="line">export HADOOP_INSTALL=$HADOOP_HOME</div><div class="line">export YARN_HOME=$HADOOP_HOME</div><div class="line">export PATH=$PATH:$HADOOP_HOME/bin</div><div class="line">export PATH=$PATH:$HADOOP_HOME/sbin</div><div class="line">export HADOOP_MAPRED_HOME=$HADOOP_HOME</div><div class="line">export HADOOP_COMMON_HOME=$HADOOP_HOME</div><div class="line">export HADOOP_HDFS_HOME=$HADOOP_HOME</div><div class="line">export YARN_HOME=$HADOOP_HOME</div><div class="line">export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native</div><div class="line">export HADOOP_OPTS= &quot;-Djava.library.path=$HADOOP_HOME/lib:$HADOOP_COMMON_LIB_NATIVE_DIR&quot;</div><div class="line">export STREAM=$HADOOP_HOME/share/hadoop/tools/lib/hadoop-streaming-*.jar</div><div class="line">export HADOOP_CLASSPATH=$&#123;JAVA_HOME&#125;/lib/tools.jar</div><div class="line">export JAVA_LIBRARY_PATH=$HADOOP_HOME/lib/native</div><div class="line">#HADOOP VARIABLES END</div></pre></td></tr></table></figure><p>查看Hadhoop版本，验证是否成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">hadoop version</div><div class="line"></div><div class="line">hadoop@VM-160-8-ubuntu:~$ hadoop version</div><div class="line">Hadoop 2.7.3</div><div class="line">Subversion https://git-wip-us.apache.org/repos/asf/hadoop.git -r baa91f7c6bc9cb92be5982de4719c1c8af91ccff</div><div class="line">Compiled by root on 2016-08-18T01:41Z</div><div class="line">Compiled with protoc 2.5.0</div><div class="line">From source with checksum 2e4ce5f957ea4db193bce3734ff29ff4</div><div class="line">This command was run using /usr/local/hadoop/share/hadoop/common/hadoop-common-2.7.3.jar</div></pre></td></tr></table></figure><h2 id="运行测试程序"><a href="#运行测试程序" class="headerlink" title="运行测试程序"></a>运行测试程序</h2><h3 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤 1"></a>步骤 1</h3><p>创建一个临时的Input目录，将需要处理的文件copy到input文件夹下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ mkdir input</div><div class="line">$ cp $HADOOP_HOME/*.txt input</div><div class="line">$ ls -l input</div><div class="line"></div><div class="line">-rw-r--r-- 1 root root 15164 Feb 21 10:14 LICENSE.txt</div><div class="line">-rw-r--r-- 1 root root   101 Feb 21 10:14 NOTICE.txt</div><div class="line">-rw-r--r-- 1 root root  1366 Feb 21 10:14 README.txt</div></pre></td></tr></table></figure></p><h3 id="步骤-2"><a href="#步骤-2" class="headerlink" title="步骤 2"></a>步骤 2</h3><p>利用Hadoop进行单词计数处理，统计input文件夹中所有文件中含有单词的次数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hadoop jar /usr/local/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar  wordcount input output</div></pre></td></tr></table></figure><p>查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">hadoop@VM-160-8-ubuntu:~$ cat output/*</div><div class="line">cryptography    1</div><div class="line">cure    3</div><div class="line">currently    1</div><div class="line">customarily    3</div><div class="line">customary    1</div><div class="line">d)    1</div><div class="line">damage    1</div><div class="line">damages    7</div><div class="line">damages,    3</div><div class="line">damages.    2</div><div class="line">data    3</div><div class="line">data,    1</div><div class="line">date    7</div><div class="line">day    4</div><div class="line">days    4</div><div class="line">de    1</div><div class="line">deal    5</div><div class="line">declaratory    2</div><div class="line">decoding    1</div><div class="line">decompression    4</div><div class="line">deemed    2</div><div class="line">defend    2</div><div class="line">defend,    1</div><div class="line">defense    1</div><div class="line">defined    5</div><div class="line">definition,    4</div><div class="line">delete    2</div><div class="line">deleted    2</div><div class="line">deletion    2</div><div class="line">deliberate    1</div><div class="line">den    1</div><div class="line">dependencies    8</div><div class="line">depends    13</div><div class="line">derivative    5</div><div class="line">......</div></pre></td></tr></table></figure><h1 id="Hadoop伪分布式安装"><a href="#Hadoop伪分布式安装" class="headerlink" title="Hadoop伪分布式安装"></a>Hadoop伪分布式安装</h1><h2 id="core-site-xml"><a href="#core-site-xml" class="headerlink" title="core-site.xml"></a>core-site.xml</h2><p>core-site.xml文件中包含Hadoop实例的端口号信息, 文件系统的内存分配信息，存储数据的内存限制，读/写缓冲区的容量等信息。 打开<code>core-site.xml</code>文件，并在, 标签之间添加以下属性信息。<br>cd $HADOOP_HOME/etc/hadoop</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">   &lt;property&gt;</div><div class="line">      &lt;name&gt;fs.default.name&lt;/name&gt;</div><div class="line">      &lt;value&gt;hdfs://localhost:9000&lt;/value&gt;</div><div class="line">   &lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure><h2 id="hdfs-site-xml"><a href="#hdfs-site-xml" class="headerlink" title="hdfs-site.xml"></a>hdfs-site.xml</h2><p><code>hdfs-site.xml</code>文件包括本地文件系统中复制数据，主节点路径，数据节点路径等信息，该文件主要储存Hadoop基础设施。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">   &lt;property&gt;</div><div class="line">      &lt;name&gt;dfs.replication&lt;/name&gt;</div><div class="line">      &lt;value&gt;1&lt;/value&gt;</div><div class="line">   &lt;/property&gt;</div><div class="line">   &lt;property&gt;</div><div class="line">      &lt;name&gt;dfs.name.dir&lt;/name&gt;</div><div class="line">      &lt;value&gt;file:///home/hadoop/hadoopinfra/hdfs/namenode&lt;/value&gt;</div><div class="line">   &lt;/property&gt;  </div><div class="line">   &lt;property&gt;</div><div class="line">      &lt;name&gt;dfs.data.dir&lt;/name&gt;</div><div class="line">      &lt;value&gt;file:///home/hadoop/hadoopinfra/hdfs/datanode&lt;/value&gt;</div><div class="line">   &lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure><h2 id="yarn-site-xml"><a href="#yarn-site-xml" class="headerlink" title="yarn-site.xml"></a>yarn-site.xml</h2><p>在以上文件中，所有的属性值都是用户定义的，可以通过改变属性值Hadoop基础构架，yarn-site.xml能够配置Hadoop的yarn，打开yarn-site.xml文件，在, 标签之间添加属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">    &lt;property&gt;</div><div class="line">      &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</div><div class="line">      &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</div><div class="line">   &lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure><h2 id="mapred-site-xml"><a href="#mapred-site-xml" class="headerlink" title="mapred-site.xml"></a>mapred-site.xml</h2><p><code>mapred-site.xml</code>文件说明哪一个MapReduce框架正在被使用。在默认状态下，Hadoop包含一个yarn-site.xml模板。 首先，需要使用cp命令复制mapred-site,xml.template到mapred-site.xml文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cp mapred-site.xml.template mapred-site.xml</div></pre></td></tr></table></figure><p>打开mapred-site.xml文件，并在, 标签之间添加属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">    &lt;property&gt;</div><div class="line">      &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</div><div class="line">      &lt;value&gt;yarn&lt;/value&gt;</div><div class="line">   &lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure><h2 id="Hadoop启动"><a href="#Hadoop启动" class="headerlink" title="Hadoop启动"></a>Hadoop启动</h2><h3 id="建立主节点"><a href="#建立主节点" class="headerlink" title="建立主节点"></a>建立主节点</h3><p>建立主节点使用<code>hdfs namenode -format</code>命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ cd ~</div><div class="line">$ hdfs namenode -format</div><div class="line">打开hadoop-env.sh，增加</div><div class="line">export  HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native</div><div class="line">export  HADOOP_HOME=/usr/local/hadoop</div><div class="line">export  HADOOP_OPTS=&quot;-Djava.library.path=$HADOOP_HOME/lib:$HADOOP_COMMON_LIB_NATIVE_DIR&quot;</div></pre></td></tr></table></figure><p>命令正确执行后，可以得到以下的输出结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">hadoop@VM-160-8-ubuntu:/usr/local/hadoop/etc/hadoop$ hdfs namenode -format</div><div class="line">17/05/21 12:12:04 INFO namenode.NameNode: STARTUP_MSG:</div><div class="line">/************************************************************</div><div class="line">STARTUP_MSG: Starting NameNode</div><div class="line">STARTUP_MSG:   host = VM-160-8-ubuntu/127.0.0.1</div><div class="line">STARTUP_MSG:   args = [-format]</div><div class="line">STARTUP_MSG:   version = 2.7.3</div><div class="line">......</div><div class="line">......</div><div class="line">17/05/21 12:12:06 INFO namenode.NameNode: SHUTDOWN_MSG:</div><div class="line">/************************************************************</div><div class="line">SHUTDOWN_MSG: Shutting down NameNode at VM-160-8-ubuntu/127.0.0.1</div><div class="line">************************************************************/</div></pre></td></tr></table></figure><h3 id="启动Hadoop的dfs文件系统"><a href="#启动Hadoop的dfs文件系统" class="headerlink" title="启动Hadoop的dfs文件系统"></a>启动Hadoop的dfs文件系统</h3><p>以下命令用来启动dfs，启动Hadoop文件系统。(2.7需将 /etc/hadoop/hadoop-env.sh中的 JAVA_HOME设为绝对路径)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">hadoop@VM-160-8-ubuntu:~$ start-dfs.sh</div><div class="line">17/05/21 12:23:54 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</div><div class="line">Incorrect configuration: namenode address dfs.namenode.servicerpc-address or dfs.namenode.rpc-address is not configured.</div><div class="line">Starting namenodes on []</div><div class="line">localhost: starting namenode, logging to /usr/local/hadoop/logs/hadoop-hadoop-namenode-VM-160-8-ubuntu.out</div><div class="line">localhost: starting datanode, logging to /usr/local/hadoop/logs/hadoop-hadoop-datanode-VM-160-8-ubuntu.out</div><div class="line">Starting secondary namenodes [0.0.0.0]</div><div class="line">0.0.0.0: starting secondarynamenode, logging to /usr/local/hadoop/logs/hadoop-hadoop-secondarynamenode-VM-160-8-ubuntu.out</div><div class="line">17/05/21 12:24:13 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</div></pre></td></tr></table></figure><h3 id="启动Yarn脚本"><a href="#启动Yarn脚本" class="headerlink" title="启动Yarn脚本"></a>启动Yarn脚本</h3><p>以下命令启动yarn script，执行这个命令将会启动yarn daemons程序。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ start-yarn.sh</div><div class="line">hadoop@VM-160-8-ubuntu:~$ start-yarn.sh</div><div class="line">starting yarn daemons</div><div class="line">starting resourcemanager, logging to /usr/local/hadoop/logs/yarn-hadoop-resourcemanager-VM-160-8-ubuntu.out</div><div class="line">localhost: starting nodemanager, logging to /usr/local/hadoop/logs/yarn-hadoop-nodemanager-VM-160-8-ubuntu.out</div></pre></td></tr></table></figure><p>通过浏览器访问Hadoop</p><p>Hadoop默认的端口号是50070，使用以下命令访问Hadoop服务。<code>http://localhost:50070/</code></p><p>图1-Hadoop服务</p><p><img src="/res/img/hadoop/dsf_overview.jpg" alt=""></p><h3 id="启动集群中所有的应用程序"><a href="#启动集群中所有的应用程序" class="headerlink" title="启动集群中所有的应用程序"></a>启动集群中所有的应用程序</h3><p>默认的端口号8088能够访问所有的应用程序，使用以下url能够访问这个服务。<code>http://localhost:8088/</code></p><p>图2-Hadoop应用程序</p><p><img src="/res/img/hadoop/8088.jpg" alt=""></p><p>出现以上图片表明Hadoop程序已经完成部署。</p><h1 id="Spark安装"><a href="#Spark安装" class="headerlink" title="Spark安装"></a>Spark安装</h1><p>获取并解压到Hadoop中.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget https://d3kbcqa49mib13.cloudfront.net/spark-2.1.1-bin-hadoop2.7.tgz</div><div class="line">tar -xf spark-2.1.1-bin-hadoop2.7.tgz</div><div class="line">sudo mv spark-2.1.1-bin-hadoop2.7 $HADOOP_HOME/spark2</div></pre></td></tr></table></figure><p>配置环境变量:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export SPARK_HOME=$HADOOP_HOME/spark2</div><div class="line">export PATH=$SPARK_HOME/bin:$PATH</div></pre></td></tr></table></figure><p>进入Spark安装路径,配置spark环境变量：<code>cp spark-env.sh.template spark-env.sh</code></p><p>加入如下环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64</div><div class="line">export SPARK_MASTER_IP=10.154.160.8</div></pre></td></tr></table></figure><p>sbin/start-all.sh启动spark, 8080端口访问spark的web站点</p>]]></content>
    
    <summary type="html">
    
      hadoop单站配置
    
    </summary>
    
      <category term="开发者手册" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/"/>
    
    
      <category term="大数据" scheme="http://zfeiyu.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="hadoop" scheme="http://zfeiyu.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix使用指南</title>
    <link href="http://zfeiyu.com/2017/05/20/zabbix-guide/"/>
    <id>http://zfeiyu.com/2017/05/20/zabbix-guide/</id>
    <published>2017-05-20T08:38:30.000Z</published>
    <updated>2017-05-20T08:31:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>zabbix可监控服务器资源以及数据库资源，同时有开放的api接口可以方便的在它的基础上做二次开发，可作为数据中心建设的备选方案。</p><h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ubuntu 14.04</div><div class="line">mysql-5.6</div><div class="line">php-5.5</div><div class="line">zabbix-3.2</div></pre></td></tr></table></figure><h2 id="安装LAMP"><a href="#安装LAMP" class="headerlink" title="安装LAMP"></a>安装LAMP</h2><h3 id="安装Apache2和PHP"><a href="#安装Apache2和PHP" class="headerlink" title="安装Apache2和PHP"></a>安装Apache2和PHP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt install apache2</div><div class="line">sudo apt-get install php5  php5-mysql  libapache2-mod-auth-mysql</div></pre></td></tr></table></figure><p>查找date字符串，修改date.timezone及添加后面的字段 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">date.timezone = Asia/Shanghai </div><div class="line">max_input_time = 600 </div><div class="line">max_execution_time= 600 </div><div class="line">post_max_size = 32M</div></pre></td></tr></table></figure><p>重启apache2 <code>/etc/init.d/apache2 restart</code></p><h3 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install mysql-server</div><div class="line">sudo apt isntall mysql-client</div><div class="line">sudo apt install libmysqlclient-dev </div><div class="line"></div><div class="line">sudo apt-get install phpmyadmin</div><div class="line">sudo apt-get install php-mbstring</div><div class="line">sudo apt-get install php-gettext</div><div class="line">sudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin</div></pre></td></tr></table></figure><h2 id="安装Zabbix"><a href="#安装Zabbix" class="headerlink" title="安装Zabbix"></a>安装Zabbix</h2><h3 id="增加zabbix用户和组"><a href="#增加zabbix用户和组" class="headerlink" title="增加zabbix用户和组"></a>增加zabbix用户和组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">groupadd zabbix</div><div class="line">useradd -g zabbix -m zabbix</div></pre></td></tr></table></figure><h3 id="安装依赖环境："><a href="#安装依赖环境：" class="headerlink" title="安装依赖环境："></a>安装依赖环境：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">apt-get update</div><div class="line">sudo apt-get install build-essential</div><div class="line">sudo apt-get -y install make</div><div class="line">sudo apt-get -y install gcc</div><div class="line">sudo apt-get -y install libghc-hsql-mysql-dev</div><div class="line">sudo apt-get install libmysqlclient18</div><div class="line">sudo apt-get -y install libxml2-dev</div><div class="line">sudo apt-get install libcurl3-dev</div><div class="line">sudo apt-get install libsnmp-dev</div></pre></td></tr></table></figure><h3 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">### 创建zabbix表</div><div class="line">create database zabbix character set utf8;</div><div class="line">### 创建mysql帐号：zabbix，密码：zabbix </div><div class="line">grant all on zabbix.* to &apos;zabbix&apos;@&apos;localhost&apos; identified by &apos;zabbix&apos;;</div></pre></td></tr></table></figure><p>( 源码包下的路径：zabbix –&gt; database –&gt; mysql –&gt; *.sql )</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysql -uzabbix -pzabbix zabbix &lt; schema.sql</div><div class="line">mysql -uzabbix -pzabbix zabbix &lt; images.sql </div><div class="line">mysql -uzabbix -pzabbix zabbix &lt; data.sql</div></pre></td></tr></table></figure><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">./configure --enable-server --enable-agent --with-mysql --enable-ipv6 --with-net-snmp --with-libcurl --with-libxml2</div><div class="line"></div><div class="line">make install</div></pre></td></tr></table></figure><h3 id="安装中文字体"><a href="#安装中文字体" class="headerlink" title="安装中文字体"></a>安装中文字体</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install language-pack-zh-hans</div></pre></td></tr></table></figure><h3 id="启动zabbix-server"><a href="#启动zabbix-server" class="headerlink" title="启动zabbix_server"></a>启动zabbix_server</h3><p><code>/etc/init.d/zabbix-server start</code></p><p>访问<a href="http://127.0.0.1/zabbix/" target="_blank" rel="external">zabbix frontend</a>,用户名密码<code>admin/zabbix</code></p><h1 id="添加Zabbix-agent-active模式-监控主机"><a href="#添加Zabbix-agent-active模式-监控主机" class="headerlink" title="添加Zabbix agent(active模式)监控主机"></a>添加Zabbix agent(active模式)监控主机</h1><p>active模式：agent主机主动上报采集数据。</p><p>克隆一个模板</p><p><img src="/res/img/zabbix/template.png" alt=""></p><p>修改为Agent active模式</p><p><img src="/res/img/zabbix/activemode.png" alt=""></p><p>更新监控项</p><p><img src="/res/img/zabbix/update.png" alt=""></p><p>创建主机</p><p><img src="/res/img/zabbix/create_host.png" alt=""></p><p>选择模板</p><p><img src="/res/img/zabbix/temp_choose.png" alt=""></p><h2 id="安装-zabbix-agent"><a href="#安装-zabbix-agent" class="headerlink" title="安装 zabbix agent"></a>安装 zabbix agent</h2><ol><li>将zabbix文件夹解压后放在<code>C：\</code></li><li>C:\zabbix\下 新建一个<code>zabbix_agent.log</code>文件</li><li><p>配置zabbix_agentd.win.conf文件（位于<code>C:\zabbix\conf\</code>），需要修改的地方分别为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Logfile= C:\zabbix\zabbix_agent.log</div><div class="line">        Server=X.X.X.X</div><div class="line">        Hostname=X.X.X.X</div></pre></td></tr></table></figure></li></ol><p> 注：</p><ol><li>Server是zabbix服务器的IP地址</li><li>LogFile为<code>zabbix_agentd.log</code>文件的位置，用于记录事件，这里的zabbix_agentd.log填写你新建log文件的位置</li><li>Hostname需要和服务器端配置主机填入的主机名称一致，不然日志中将会报“host{主机名}not found”的错误</li></ol><h3 id="打开CMD命令行，注意文件路径执行："><a href="#打开CMD命令行，注意文件路径执行：" class="headerlink" title="打开CMD命令行，注意文件路径执行："></a>打开CMD命令行，注意文件路径执行：</h3><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">C:\zabbix\bin\win32\zabbix_agentd.exe -c C:\zabbix\conf\zabbix_agentd.win.conf -i</div><div class="line">C:\zabbix\bin\win32\zabbix_agentd.exe -c C:\zabbix\conf\zabbix_agentd.win.conf -s</div></pre></td></tr></table></figure></code></pre><h2 id="查看监控项"><a href="#查看监控项" class="headerlink" title="查看监控项"></a>查看监控项</h2><p><img src="/res/img/zabbix/monitor.png" alt=""></p><h1 id="数据库监控"><a href="#数据库监控" class="headerlink" title="数据库监控"></a>数据库监控</h1><ol><li>oracle监控插件:<a href="http://www.smartmarmot.com/wiki/index.php?title=Orabbix" target="_blank" rel="external">orabbix</a></li><li>mysql：官方自带mysql监控模板，agent端运行mysql监控脚本<br>todo</li></ol><h1 id="CLI"><a href="#CLI" class="headerlink" title="CLI"></a>CLI</h1><p>todo</p>]]></content>
    
    <summary type="html">
    
      zabbix可监控服务器资源以及数据库资源，同时有开放的api接口可以方便的在它的基础上做二次开发
    
    </summary>
    
      <category term="开发者工具" scheme="http://zfeiyu.com/categories/%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="运维" scheme="http://zfeiyu.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>中文技术文档写作规范</title>
    <link href="http://zfeiyu.com/2016/11/06/document-style-guide/"/>
    <id>http://zfeiyu.com/2016/11/06/document-style-guide/</id>
    <published>2016-11-06T08:38:30.000Z</published>
    <updated>2016-11-19T01:44:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>国外有非常多优秀的技术文档，黑客也大多擅长写作，无奈<code>墙</code>以及国内外文化差异的原因，总是会让你对文档的理解有或多或少的偏差。而国内技术氛围对敏捷开发理解有误，不重视文档。仅有的技术文档，也是挠痒之作。技术类的书，不管是出自翻译，还是由国内技术人员编写，质量普遍不高。</p><p>我一直都觉得：中文博大精深，要写出优秀的作品远比英文要难，尤其是技术文档，会有大量中英文的结合，即使是标点符号的运用都是一件烦恼的事情。最近一直在思考如何写出优秀的技术文档，其实技术文档的规范和编码规范差不多：要语法统一、用词精准、多用短句、不应该存在歧义、同样不应该有<a href="2016-10-25-Taste-of-code">坏味道</a>。看到这篇出自阮一峰的<a href="https://github.com/ruanyf/document-style-guide" target="_blank" rel="external">《中文技术文档的写作规范》</a>，很有启发。该指导文档比较系统，遂摘录，共勉！</p><p>另附上维基百科的各组织的写作要求<a href="https://en.wikipedia.org/wiki/List_of_style_guides" target="_blank" rel="external">写作要求</a>。</p><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h2 id="层级"><a href="#层级" class="headerlink" title="层级"></a>层级</h2><h3 id="标题分为四级。"><a href="#标题分为四级。" class="headerlink" title="标题分为四级。"></a>标题分为四级。</h3><ul><li>一级标题：文章的标题</li><li>二级标题：文章主要部分的大标题</li><li>三级标题：二级标题下面一级的小标题</li><li>四级标题：三级标题下面某一方面的小标题</li></ul><h2 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h2><ul><li>一级标题下，不能直接出现三级标题。</li><li>标题要避免孤立编号（即同级标题只有一个）。</li><li>下级标题不重复上一级标题的内容。</li><li>谨慎使用四级标题，尽量避免出现，保持层级的简单和防止出现过于复杂的章节。如果三级标题下有并列性的内容，建议只使用项目列表（Item list）。</li></ul><h1 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h1><h2 id="字间距"><a href="#字间距" class="headerlink" title="字间距"></a>字间距</h2><p>全角中文字符与半角英文字符之间，应有一个半角空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：本文介绍如何快速启动Windows系统。</div><div class="line"></div><div class="line">正确：本文介绍如何快速启动 Windows 系统。</div></pre></td></tr></table></figure><p>全角中文字符与半角阿拉伯数字之间，有没有半角空格都可，但必须保证风格统一，不能两种风格混杂。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">正确：2011年5月15日，我订购了5台笔记本电脑与10台平板电脑。</div><div class="line"></div><div class="line">正确：2011 年 5 月 15 日，我订购了 5 台笔记本电脑与 10 台平板电脑。</div></pre></td></tr></table></figure><p>半角的百分号，视同阿拉伯数字。</p><p>英文单位若不翻译，单位前的阿拉伯数字与单位间不留空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：一部容量为 16 GB 的智能手机</div><div class="line"></div><div class="line">正确：一部容量为 16GB 的智能手机</div></pre></td></tr></table></figure><p>半角英文字符和半角阿拉伯数字，与全角标点符号之间不留空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：他的电脑是 MacBook Air 。</div><div class="line"></div><div class="line">正确：他的电脑是 MacBook Air。</div></pre></td></tr></table></figure><h2 id="句子"><a href="#句子" class="headerlink" title="句子"></a>句子</h2><ul><li>避免使用长句。一个句子建议不超过 100 字或者正文的 3 行。</li><li>尽量使用简单句和并列句，避免使用复合句。</li></ul><h2 id="写作风格"><a href="#写作风格" class="headerlink" title="写作风格"></a>写作风格</h2><p>尽量不使用被动语态，改为使用主动语态。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：假如此软件尚未被安装，</div><div class="line"></div><div class="line">正确：假如尚未安装这个软件，</div></pre></td></tr></table></figure><p>不使用非正式的语言风格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：Lady Gaga 的演唱会真是酷毙了，从没看过这么给力的表演！！！</div><div class="line"></div><div class="line">正确：无法参加本次活动，我深感遗憾。</div></pre></td></tr></table></figure><p>用对“的”、“地”、“得”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">她露出了开心的笑容。</div><div class="line">（形容词＋的＋名词）</div><div class="line"></div><div class="line">她开心地笑了。</div><div class="line">（副词＋地＋动词）</div><div class="line"></div><div class="line">她笑得很开心。</div><div class="line">（动词＋得＋副词）</div></pre></td></tr></table></figure><p>使用代词时（比如“其”、“该”、“此”、“这”等词），必须明确指代的内容，保证只有一个含义。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：从管理系统可以监视中继系统和受其直接控制的分配系统。</div><div class="line"></div><div class="line">正确：从管理系统可以监视两个系统：中继系统和受中继系统直接控制的分配系统。</div></pre></td></tr></table></figure><p>名词前不要使用过多的形式词。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：此设备的使用必须在接受过本公司举办的正式的设备培训的技师的指导下进行。</div><div class="line"></div><div class="line">正确：此设备必须在技师的指导下使用，且指导技师必须接受过由本公司举办的正式设备培训。</div></pre></td></tr></table></figure><p>单个句子的长度尽量保持在 20 个字以内；20～29 个字的句子，可以接受；30～39 个字的句子，语义必须明确，才能接受；多于 40 个字的句子，在任何情况下都不能接受。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：本产品适用于从由一台服务器进行动作控制的单一节点结构到由多台服务器进行动作控制的并行处理程序结构等多种体系结构。</div><div class="line"></div><div class="line">正确：本产品适用于多种体系结构。无论是由一台服务器（单一节点结构），还是由多台服务器（并行处理结构）进行动作控制，均可以使用本产品。</div></pre></td></tr></table></figure><p>同样一个意思，尽量使用肯定句表达，不使用否定句表达。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：请确认没有接通装置的电源。</div><div class="line"></div><div class="line">正确：请确认装置的电源已关闭。</div></pre></td></tr></table></figure><p>避免使用双重否定句。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：没有删除权限的用户，不能删除此文件。</div><div class="line"></div><div class="line">正确：用户必须拥有删除权限，才能删除此文件。</div></pre></td></tr></table></figure><h2 id="英文处理"><a href="#英文处理" class="headerlink" title="英文处理"></a>英文处理</h2><p>英文原文如果使用了复数形式，翻译成中文时，应该将其还原为单数形式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">英文：⋯information stored in random access memory (RAMs)⋯</div><div class="line"></div><div class="line">中文：……存储在随机存取存储器（RAM）里的信息……</div></pre></td></tr></table></figure><p>外文缩写可以使用半角圆点(<code>.</code>)表示缩写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">U.S.A.</div><div class="line">Apple, Inc.</div></pre></td></tr></table></figure><p>表示中文时，英文省略号（<code>⋯</code>）应改为中文省略号（<code>……</code>）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">英文：5 minutes later⋯</div><div class="line"></div><div class="line">中文：5 分钟过去了⋯⋯</div></pre></td></tr></table></figure><p>英文书名或电影名改用中文表达时，双引号应改为书名号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">英文：He published an article entitled &quot;The Future of the Aviation&quot;.</div><div class="line"></div><div class="line">中文：他发表了一篇名为《航空业的未来》的文章。</div></pre></td></tr></table></figure><p>第一次出现英文词汇时，在括号中给出中文标注。此后再次出现时，直接使用英文缩写即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">IOC（International Olympic Committee，国际奥林匹克委员会）。这样定义后，便可以直接使用“IOC”了。</div></pre></td></tr></table></figure><p>专有名词中每个词第一个字母均应大写，非专有名词则不需要大写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">“American Association of Physicists in Medicine”（美国医学物理学家协会）是专有名词，需要大写。</div><div class="line"></div><div class="line">“online transaction processing”（在线事务处理）不是专有名词，不应大写。</div></pre></td></tr></table></figure><h1 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h1><h2 id="原则-1"><a href="#原则-1" class="headerlink" title="原则"></a>原则</h2><ul><li>一个段落只能有一个主题，或一个中心句子。</li><li>段落的中心句子放在段首，对全段内容进行概述。后面陈述的句子为核心句服务。</li><li>一个段落的长度不能超过七行，最佳段落长度小于等于四行。</li><li>段落的句子语气要使用陈述和肯定语气，避免使用感叹语气。</li><li>段落之间使用一个空行隔开。</li><li>段落开头不要留出空白字符。</li></ul><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>引用第三方内容时，应注明出处。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">One man’s constant is another man’s variable. — Alan Perlis</div></pre></td></tr></table></figure><p>如果是全篇转载，请在全文开头显著位置注明作者和出处，并链接至原文。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">本文转载自 WikiQuote</div></pre></td></tr></table></figure><p>使用外部图片时，必须在图片下方或文末标明来源。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">本文部分图片来自 Wikipedia</div></pre></td></tr></table></figure><h1 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h1><h2 id="半角数字"><a href="#半角数字" class="headerlink" title="半角数字"></a>半角数字</h2><p>数字一律使用半角形式，不得使用全角形式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误： 这件商品的价格是１０００元。</div><div class="line"></div><div class="line">正确： 这件商品的价格是 1000 元。</div></pre></td></tr></table></figure><h2 id="千分号"><a href="#千分号" class="headerlink" title="千分号"></a>千分号</h2><p>数值为千位以上，应添加千分号（半角逗号）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">XXX 公司的实收资本为 RMB1,258,000。</div></pre></td></tr></table></figure><p>对于 4 ～ 6 位的数值，千分号是选用的，比如<code>1000</code>和<code>1,000</code>都可以接受。对于7位及以上的数值，千分号是必须的。</p><p>多位小数要从小数点后从左向右添加千分号，比如<code>4.234,345</code>。</p><h2 id="货币"><a href="#货币" class="headerlink" title="货币"></a>货币</h2><p>货币应为阿拉伯数字，并在数字前写出货币符号，或在数字后写出货币中文名称。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$1,000</div><div class="line">1,000 美元</div></pre></td></tr></table></figure><h2 id="数值范围"><a href="#数值范围" class="headerlink" title="数值范围"></a>数值范围</h2><p>表示数值范围时，用<code>～</code>连接。参见《标点符号》一节的“连接号”部分。</p><p>带有单位或百分号时，两个数字都要加上单位或百分号，不能只加后面一个。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">正确：132kg～234kg</div><div class="line">错误：132～234kg</div><div class="line"></div><div class="line">正确：67%～89%</div><div class="line">错误：67～89%</div></pre></td></tr></table></figure><h2 id="变化程度的表示法"><a href="#变化程度的表示法" class="headerlink" title="变化程度的表示法"></a>变化程度的表示法</h2><p>数字的增加要使用“增加了”、“增加到”。“了”表示增量，“到”表示定量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">增加到过去的两倍</div><div class="line">（过去为一，现在为二）</div><div class="line"></div><div class="line">增加了两倍</div><div class="line">（过去为一，现在为三）</div></pre></td></tr></table></figure><p>数字的减少要使用“降低了”、“降低到”。“了”表示增量，“到”表示定量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">降低到百分之八十</div><div class="line">（定额是一百，现在是八十）</div><div class="line"></div><div class="line">降低了百分之八十</div><div class="line">（原来是一百，现在是二十）</div></pre></td></tr></table></figure><p>不能用“降低N倍”或“减少N倍”的表示法，要用“降低百分之几”或“减少百分之几”。因为减少（或降低）一倍表示数值原来为一百，现在等于零。</p><h1 id="标点符号"><a href="#标点符号" class="headerlink" title="标点符号"></a>标点符号</h1><h2 id="原则-2"><a href="#原则-2" class="headerlink" title="原则"></a>原则</h2><ul><li>中文语句的标点符号，均应该采取全角符号，这样可以保证视觉的一致。</li><li>如果整句为英文，则该句使用英文/半角标点。</li><li>句号、问号、叹号、逗号、顿号、分号和冒号不得出现在一行之首。</li></ul><h2 id="句号"><a href="#句号" class="headerlink" title="句号"></a>句号</h2><p>中文语句中的结尾处应该用全角句号（<code>。</code>）。</p><p>句子末尾用括号加注时，句号应在括号之外。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：关于文件的输出，请参照第 1.3 节（见第 26 页。）</div><div class="line"></div><div class="line">正确：关于文件的输出，请参照第 1.3 节（见第 26 页）。</div></pre></td></tr></table></figure><h2 id="逗号"><a href="#逗号" class="headerlink" title="逗号"></a>逗号</h2><p>逗号<code>，</code>表示句子内部的一般性停顿。</p><p>注意避免“一逗到底”，即整个段落除了结尾，全部停顿都使用逗号。</p><h2 id="顿号"><a href="#顿号" class="headerlink" title="顿号"></a>顿号</h2><p>句子内部的并列词，应该用全角顿号(<code>、</code>) 分隔，而不用逗号，即使并列词是英语也是如此。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：我最欣赏的科技公司有 Google, Facebook, 腾讯, 阿里和百度等。</div><div class="line"></div><div class="line">正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里和百度等。</div></pre></td></tr></table></figure><p>英文句子中，并列词语之间使用半角逗号（<code>,</code>）分隔。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：Microsoft Office includes Word, Excel, PowerPoint, Outlook and other components.</div></pre></td></tr></table></figure><h2 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h2><p>分号<code>；</code>表示复句内部并列分句之间的停顿。</p><h2 id="引号"><a href="#引号" class="headerlink" title="引号"></a>引号</h2><p>引用时，应该使用全角双引号（<code>“ ”</code>），注意前后双引号不同。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：许多人都认为客户服务的核心是“友好”和“专业”。</div></pre></td></tr></table></figure><p>引号里面还要用引号时，外面一层用双引号，里面一层用单引号（<code>‘ ’</code>），注意前后单引号不同。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：鲍勃解释道：“我要放音乐，可萨利说，‘不行！’。”</div></pre></td></tr></table></figure><h2 id="圆括号"><a href="#圆括号" class="headerlink" title="圆括号"></a>圆括号</h2><p>补充说明时，使用全角圆括号<code>（）</code>，括号前后不加空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：请确认所有的连接（电缆和接插件）均安装牢固。</div></pre></td></tr></table></figure><h2 id="冒号"><a href="#冒号" class="headerlink" title="冒号"></a>冒号</h2><p>全角冒号（<code>：</code>）常用在需要解释的词语后边，引出解释和说明。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：请确认以下几项内容：时间、地点、活动名称，以及来宾数量。</div></pre></td></tr></table></figure><p>表示时间时，应使用半角冒号（<code>:</code>）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：早上 8:00</div></pre></td></tr></table></figure><h2 id="省略号"><a href="#省略号" class="headerlink" title="省略号"></a>省略号</h2><p>省略号<code>……</code>表示语句未完、或者语气的不连续。它占两个汉字空间、包含六个省略点，不要使用<code>。。。</code>或<code>...</code>等非标准形式。</p><p>省略号不应与“等”这个词一起使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">错误：我们为会餐准备了香蕉、苹果、梨…等各色水果。</div><div class="line"></div><div class="line">正确：我们为会餐准备了各色水果，有香蕉、苹果、梨……</div><div class="line"></div><div class="line">正确：我们为会餐准备了香蕉、苹果、梨等各色水果。</div></pre></td></tr></table></figure><h2 id="感叹号"><a href="#感叹号" class="headerlink" title="感叹号"></a>感叹号</h2><p>应该使用平静的语气叙述，尽量避免使用感叹号<code>！</code>。</p><p>不得多个感叹号连用，比如<code>！！</code>和<code>!!!</code>。</p><h2 id="破折号"><a href="#破折号" class="headerlink" title="破折号"></a>破折号</h2><p>破折号<code>————</code>一般用于做进一步解释。破折号应占两个汉字的位置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：直觉————尽管它并不总是可靠的————告诉我，这事可能出了些问题。</div></pre></td></tr></table></figure><h2 id="连接号"><a href="#连接号" class="headerlink" title="连接号"></a>连接号</h2><p>连接号用于连接两个类似的词。</p><p>以下场合应该使用直线连接号（<code>-</code>），占一个半角字符的位置。</p><ul><li>两个名词的复合</li><li>图表编号</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">例句：氧化-还原反应</div><div class="line"></div><div class="line">例句：图 1-1</div></pre></td></tr></table></figure><p>以下场合应该使用波浪连接号（<code>～</code>），占一个全角字符的位置。</p><ul><li>数值范围（例如日期、时间或数字）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：2009 年～2011 年</div></pre></td></tr></table></figure><p>注意，波浪连接号前后两个值都应该加上单位。</p><p>波浪连接号也可以用汉字“至”代替。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例句：周围温度：-20°C 至 -10°C</div></pre></td></tr></table></figure><h1 id="章节结构"><a href="#章节结构" class="headerlink" title="章节结构"></a>章节结构</h1><p>软件手册是一部完整的书，建议采用下面的结构。</p><ul><li><strong>简介</strong>（Introduction）： [必备] [文件] 提供对产品和文档本身的总体的、扼要的说明</li><li><strong>快速上手</strong>（Getting Started）：[可选] [文件] 如何最快速地使用产品</li><li><strong>入门篇</strong>（Basics）： [必备] [目录] 又称”使用篇“，提供初级的使用教程<ul><li><strong>环境准备</strong>（Prerequisite）：[必备] [文件] 软件使用需要满足的前置条件</li><li><strong>安装</strong>（Installation）：[可选] [文件] 软件的安装方法</li><li><strong>设置</strong>（Configuration）：[必备] [文件] 软件的设置</li></ul></li><li><strong>进阶篇</strong>（Advanced)：[可选] [目录] 又称”开发篇“，提供中高级的开发教程</li><li><strong>API</strong>（Reference）：[可选] [目录|文件] 软件API的逐一介绍</li><li><strong>FAQ</strong>：[可选] [文件] 常见问题解答</li><li><strong>附录</strong>（Appendix）：[可选] [目录] 不属于教程本身、但对阅读教程有帮助的内容<ul><li><strong>Glossary</strong>：[可选] [文件] 名词解释</li><li><strong>Recipes</strong>：[可选] [文件] 最佳实践</li><li><strong>Troubleshooting</strong>：[可选] [文件] 故障处理</li><li><strong>ChangeLog</strong>：[可选] [文件] 版本说明</li><li><strong>Feedback</strong>：[可选] [文件] 反馈方式</li></ul></li></ul><p><strong>范例</strong></p><ul><li><a href="http://redux.js.org/index.html" target="_blank" rel="external">Redux 手册</a></li><li><a href="http://flight-manual.atom.io/" target="_blank" rel="external">Atom 手册</a></li></ul><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="http://wenku.baidu.com/view/23cc1a6527d3240c8447efbf.html" target="_blank" rel="external">产品手册中文写作规范</a>, by 华为</li><li><a href="http://docs.daocloud.io/write-docs/format" target="_blank" rel="external">写作规范和格式规范</a>, by DaoCloud</li><li><a href="http://www.hitachi-tc.co.jp/company/thesis/thesis.pdf" target="_blank" rel="external">技术写作技巧在日汉翻译中的应用</a>, by 刘方</li><li><a href="https://www.lengoo.de/documents/styleguides/lengoo_styleguide_ZH.pdf" target="_blank" rel="external">简体中文规范指南</a>，by lengoo</li><li><a href="https://open.leancloud.cn/copywriting-style-guide.html" target="_blank" rel="external">文档风格指南</a>, by LeanCloud</li><li><a href="https://docs.google.com/document/d/1R8lMCPf6zCD5KEA8ekZ5knK77iw9J-vJ6vEopPemqZM/edit" target="_blank" rel="external">豌豆荚文案风格指南</a>, by 豌豆荚</li><li><a href="https://github.com/sparanoid/chinese-copywriting-guidelines" target="_blank" rel="external">中文文案排版指北</a>，by sparanoid</li><li><a href="http://w3c.github.io/clreq/" target="_blank" rel="external">中文排版需求</a>，by W3C</li></ul>]]></content>
    
    <summary type="html">
    
      国外有非常多优秀的技术文档,黑客也大多擅长写作,无奈`墙`以及国内外文化差异的原因,总是会让你对文档的理解有或多或少的偏差.而国内技术氛围对敏捷开发理解有误,不重视文档.仅有的技术文档,不管是出自翻译,还是由国内技术人员编写,质量高的也很少.看到这篇出自阮一峰的&lt;中文技术文档的写作规范&gt;,很有启发,遂摘录共勉!
    
    </summary>
    
      <category term="转" scheme="http://zfeiyu.com/categories/%E8%BD%AC/"/>
    
    
      <category term="写作规范" scheme="http://zfeiyu.com/tags/%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
</feed>
